{"version":3,"file":"static/js/12.9fc1c850.chunk.js","mappings":"4JAKA,MAAMA,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,G,uBCArC,MAAMM,GAAcN,EAAAA,EAAAA,eAAc,CAAEO,QAAQ,ICCtCC,EAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAASC,cCA/DC,EAA+B,QAAUJ,EADjB,kBCF9B,SAASK,EAAYC,GACjB,OAAQA,GACW,kBAARA,GACPC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCDA,SAASK,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEI,KACjB,CCJA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsBC,GAC3B,OAAQL,EAAoBK,EAAMC,UAC9BH,EAAaI,KAAMC,GAASZ,EAAeS,EAAMG,IACzD,CACA,SAASC,EAAcJ,GACnB,OAAOK,QAAQN,EAAsBC,IAAUA,EAAMM,SACzD,CCNA,SAASC,EAAuBP,GAC5B,MAAM,QAAEQ,EAAO,QAAEP,GCFrB,SAAgCD,EAAOS,GACnC,GAAIV,EAAsBC,GAAQ,CAC9B,MAAM,QAAEQ,EAAO,QAAEP,GAAYD,EAC7B,MAAO,CACHQ,SAAqB,IAAZA,GAAqBjB,EAAeiB,GACvCA,OACAE,EACNT,QAASV,EAAeU,GAAWA,OAAUS,EAErD,CACA,OAAyB,IAAlBV,EAAMW,QAAoBF,EAAU,CAAC,CAChD,CDTiCG,CAAuBZ,GAAOa,EAAAA,EAAAA,YAAWpC,IACtE,OAAOqC,EAAAA,EAAAA,SAAQ,KAAM,CAAGN,UAASP,YAAY,CAACc,EAA0BP,GAAUO,EAA0Bd,IAChH,CACA,SAASc,EAA0BC,GAC/B,OAAOvB,MAAMC,QAAQsB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAC5B,IAAK,MAAMC,MAAOX,EACdU,EAAmBC,IAAO,CACtBC,UAAY9B,GAAUkB,EAAaW,IAAK3B,KAAMC,KAAWH,EAAMG,K,wBClBvE,MAAM4B,GAA2B3D,EAAAA,EAAAA,eAAc,CAAC,GCL1C4D,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAqBC,GAAoF,IAAnF,kBAAEC,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAEC,GAAYL,EAC5GC,GCtBJ,SAAsBK,GAClB,IAAK,MAAMb,KAAOa,EACdd,EAAmBC,IAAIc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBf,EAAmBC,IACnBa,EAASb,GAGxB,CDeyBe,CAAaP,GA2ClC,MAAMQ,GAAsBC,EAAAA,EAAAA,YA1C5B,SAAyB9C,EAAO+C,GAK5B,IAAIC,EACJ,MAAMC,GAAcN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACb9B,EAAAA,EAAAA,YAAW1C,IACX6B,GAAK,IACRkD,SAAUC,EAAYnD,MAEpB,SAAEzB,GAAa0E,EACfxC,EAAUF,EAAuBP,GACjCoD,EAAcZ,EAAexC,EAAOzB,GAC1C,IAAKA,GAAY8E,EAAAA,EAAW,CAOxB5C,EAAQ6C,cEtCpB,SAA0Bb,EAAWW,EAAapD,EAAOsC,GACrD,MAAQgB,cAAeC,IAAW1C,EAAAA,EAAAA,YAAWpC,GACvC+E,GAAc3C,EAAAA,EAAAA,YAAWnC,GACzB+E,GAAkB5C,EAAAA,EAAAA,YAAW6C,EAAAA,GAC7BC,GAAsB9C,EAAAA,EAAAA,YAAW1C,GAAqBK,cACtDoF,GAAmBC,EAAAA,EAAAA,UAIzBvB,EAAsBA,GAAuBkB,EAAYM,UACpDF,EAAiBG,SAAWzB,IAC7BsB,EAAiBG,QAAUzB,EAAoBG,EAAW,CACtDW,cACAG,SACAvD,QACAyD,kBACAO,wBAAuBP,IACW,IAA5BA,EAAgBjD,QAEtBmD,yBAGR,MAAML,EAAgBM,EAAiBG,SACvCE,EAAAA,EAAAA,oBAAmB,KACfX,GAAiBA,EAAcY,OAAOlE,EAAOyD,KAMjD,MAAMU,GAAeN,EAAAA,EAAAA,QAAOxD,QAAQL,EAAMhB,KAAkCoF,OAAOC,kBAgCnF,OA/BAC,EAAAA,EAAAA,GAA0B,KACjBhB,IAELA,EAAciB,SAWVJ,EAAaJ,SAAWT,EAAckB,gBACtClB,EAAckB,eAAeC,qBAGrCC,EAAAA,EAAAA,WAAU,KACDpB,IAELA,EAAcqB,kBACTR,EAAaJ,SAAWT,EAAckB,gBACvClB,EAAckB,eAAeC,iBAE7BN,EAAaJ,UACbI,EAAaJ,SAAU,EAEvBK,OAAOC,iBAAkB,MAG1Bf,CACX,CFzBoCsB,CAAiBnC,EAAWW,EAAaH,EAAgBX,GAKjF,MAAMuC,GAA2BhE,EAAAA,EAAAA,YAAWkB,GACtC+C,GAAWjE,EAAAA,EAAAA,YAAWnC,GAAaC,OACrC8B,EAAQ6C,gBACRN,EAAgBvC,EAAQ6C,cAAcV,aAEtCK,EAAgB6B,EAAUzC,EAAmBwC,GAErD,CAKA,OAAQE,EAAAA,cAAoBtG,EAAcuG,SAAU,CAAEC,MAAOxE,GACzDuC,GAAiBvC,EAAQ6C,cAAiByB,EAAAA,cAAoB/B,GAAaL,EAAAA,EAAAA,GAAA,CAAIW,cAAe7C,EAAQ6C,eAAkBL,IAAqB,KAC7IV,EAAUE,EAAWzC,EG1DjC,SAAsBoD,EAAaE,EAAeP,GAC9C,OAAOmC,EAAAA,EAAAA,aAAaC,IAChBA,GAAY/B,EAAYgC,OAAShC,EAAYgC,MAAMD,GAC/C7B,IACA6B,EACM7B,EAAc8B,MAAMD,GACpB7B,EAAc+B,WAEpBtC,IAC2B,oBAAhBA,EACPA,EAAYoC,GAEPlG,EAAY8D,KACjBA,EAAYgB,QAAUoB,KASlC,CAAC7B,GACL,CHmCwCgC,CAAalC,EAAa3C,EAAQ6C,cAAeP,GAAcK,EAAa7E,EAAUkC,EAAQ6C,eAClI,GAGA,OADAT,EAAoBb,GAAyBS,EACtCI,CACX,CACA,SAASM,EAAWoC,GAAe,IAAd,SAAErC,GAAUqC,EAC7B,MAAMC,GAAgB3E,EAAAA,EAAAA,YAAW4E,EAAAA,GAAoBC,GACrD,OAAOF,QAA8B9E,IAAbwC,EAClBsC,EAAgB,IAAMtC,EACtBA,CACV,CI5DA,SAASyC,EAAkBC,GACvB,SAASC,EAAOpD,GACZ,OAAON,EAAsByD,EAAanD,EADQqD,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAVE,MACP,OAAOH,EAMX,MAAMI,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMH,EAAQ,CAMrBM,IAAKA,CAACC,EAASvE,KAINoE,EAAeI,IAAIxE,IACpBoE,EAAeK,IAAIzE,EAAKgE,EAAOhE,IAE5BoE,EAAeE,IAAItE,KAGtC,CCxCA,MAAM0E,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAe/D,GACpB,MAKqB,kBAAdA,IAIHA,EAAUgE,SAAS,SAOvBF,EAAqBG,QAAQjE,IAAc,GAIvC,QAAQkE,KAAKlE,GAIrB,CC3BA,MAAMmE,EAAkB,CAAC,ECGzB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBnF,EAAGO,GAAwB,IAAtB,OAAET,EAAM,SAAEuB,GAAUd,EAClD,OAAQ0E,EAAeT,IAAIxE,IACvBA,EAAIoF,WAAW,YACbtF,QAAuBjB,IAAbwC,OACL0D,EAAgB/E,IAAgB,YAARA,EACvC,CCRA,MAAMqF,EAAiBjC,GAAU5E,QAAQ4E,GAASA,EAAMkC,aCElDC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmBd,OCRzC,MAAM2B,EAAyBC,GAAW9F,GAAuB,kBAARA,GAAoBA,EAAIoF,WAAWU,GACtFC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiBA,CAAC7C,EAAO8C,IACpBA,GAAyB,kBAAV9C,EAChB8C,EAAKC,UAAU/C,GACfA,ECNJgD,EAAQA,CAACC,EAAKC,EAAK3I,IAAM4I,KAAKF,IAAIE,KAAKD,IAAI3I,EAAG0I,GAAMC,GCEpDE,EAAS,CACX1B,KAAOnH,GAAmB,kBAANA,EACpB8I,MAAOC,WACPP,UAAYxI,GAAMA,GAEhBgJ,GAAK7F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ0F,GAAM,IACTL,UAAYxI,GAAMyI,EAAM,EAAG,EAAGzI,KAE5BiJ,GAAK9F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ0F,GAAM,IACTK,QAAS,ICPPC,EAAYnJ,GAAM4I,KAAKQ,MAAU,IAAJpJ,GAAc,IAC3CqJ,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASxJ,GACd,MAAoB,kBAANA,CAClB,CCVA,MAAMyJ,EAAkBC,IAAI,CACxBvC,KAAOnH,GAAMwJ,EAASxJ,IAAMA,EAAE2J,SAASD,IAAiC,IAAxB1J,EAAE4J,MAAM,KAAKrD,OAC7DuC,MAAOC,WACPP,UAAYxI,GAAC,GAAA6J,OAAQ7J,GAAC6J,OAAGH,KAEvBI,EAAUL,EAAe,OACzBM,GAAUN,EAAe,KACzBO,GAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,GAAKT,EAAe,MACpBU,IAAkBhH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjB4G,IAAO,IACVjB,MAAQ9I,GAAM+J,GAAQjB,MAAM9I,GAAK,IACjCwI,UAAYxI,GAAM+J,GAAQvB,UAAc,IAAJxI,KCblCoK,IAAGjH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF0F,GAAM,IACTL,UAAWI,KAAKQ,QCAdiB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,EACRuC,QAASvC,EACTwC,QAASxC,EACTyC,QAASzC,EACTb,MAAK,EACLuD,OAAQvD,EACRwD,OAAQxD,EACRyD,OAAQzD,EACR0D,KAAM7C,EACN8C,MAAO9C,EACP+C,MAAO/C,EACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZnC,EAAGmC,GACHlC,EAAGkC,GACHjC,EAAGiC,GACHkD,YAAalD,GACbhC,qBAAsBgC,GACtBmD,QAASnE,EACToE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAaxE,EACbyE,cAAezE,EACf0E,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,MAAM,MAAEC,EAAK,KAAEC,EAAI,UAAEzF,EAAS,gBAAE0F,GAAoBN,EAEpD,IAAIO,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAMhM,KAAOwL,EAAc,CAC5B,MAAMpI,EAAQoI,EAAaxL,GAI3B,GAAI+F,EAAkB/F,GAAM,CACxB4L,EAAK5L,GAAOoD,EACZ,QACJ,CAEA,MAAM6I,EAAYjE,GAAiBhI,GAC7BkM,EAAcjG,EAAe7C,EAAO6I,GAC1C,GAAIhH,EAAeT,IAAIxE,GAAM,CAKzB,GAHA8L,GAAe,EACf3F,EAAUnG,GAAOkM,GAEZF,EACD,SAEA5I,KAAW6I,EAAUpF,SAAW,KAChCmF,GAAkB,EAC1B,MACShM,EAAIoF,WAAW,WAEpB2G,GAAqB,EACrBF,EAAgB7L,GAAOkM,GAGvBP,EAAM3L,GAAOkM,CAErB,CAiBA,GAhBKV,EAAarF,YACV2F,GAAgBJ,EAChBC,EAAMxF,UTtClB,SAAwBA,EAAS5F,EAAqE4L,EAAoBT,GAAmB,IAA1G,2BAAEU,GAA6B,EAAI,mBAAEC,GAAqB,GAAO9L,EAE5F+L,EAAkB,GAKtB,IAAK,IAAIC,EAAI,EAAGA,EAAI3G,EAAe2G,IAAK,CACpC,MAAMvM,EAAMgF,EAAmBuH,QACR1N,IAAnBsH,EAAUnG,KAEVsM,GAAmB,GAAJ9E,OADOjC,EAAevF,IAAQA,EACV,KAAAwH,OAAIrB,EAAUnG,GAAI,MAE7D,CAaA,OAZIoM,IAA+BjG,EAAUT,IACzC4G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9Bd,EACAY,EAAkBZ,EAAkBvF,EAAWgG,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACX,CSW8BG,CAAelB,EAAMpF,UAAWsF,EAASO,EAAiBN,GAEvEC,EAAMxF,YAKXwF,EAAMxF,UAAY,SAOtB4F,EAAoB,CACpB,MAAM,QAAEhB,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOY,EAC3DF,EAAME,gBAAkB,GAAHrE,OAAMuD,EAAO,KAAAvD,OAAIwD,EAAO,KAAAxD,OAAIyD,EACrD,CACJ,CCvEA,MAAMyB,GAAwBA,KAAA,CAC1Bf,MAAO,CAAC,EACRxF,UAAW,CAAC,EACZ0F,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ICEX,SAASe,GAAkBC,EAAQC,EAAQ1O,GACvC,IAAK,MAAM6B,KAAO6M,EACTxH,EAAcwH,EAAO7M,KAAUmF,EAAoBnF,EAAK7B,KACzDyO,EAAO5M,GAAO6M,EAAO7M,GAGjC,CAQA,SAAS8M,GAAS3O,EAAOoD,EAAa7E,GAClC,MACMiP,EAAQ,CAAC,EAMf,OAFAgB,GAAkBhB,EALAxN,EAAMwN,OAAS,CAAC,EAKExN,GACpCb,OAAOyP,OAAOpB,EAdlB,SAA+BpL,EAAwBgB,EAAa7E,GAAU,IAA9C,kBAAEgP,GAAmBnL,EACjD,OAAOtB,EAAAA,EAAAA,SAAQ,KACX,MAAMsM,EDfgB,CAC1BI,MAAO,CAAC,EACRxF,UAAW,CAAC,EACZ0F,gBAAiB,CAAC,EAClBD,KAAM,CAAC,GCaH,OADAN,GAAgBC,EAAOhK,EAAa,CAAE6K,4BAA6B1P,GAAYgP,GACxEpO,OAAOyP,OAAO,CAAC,EAAGxB,EAAMK,KAAML,EAAMI,QAC5C,CAACpK,GACR,CAQyByL,CAAuB7O,EAAOoD,EAAa7E,IACzDyB,EAAM8O,gBAAkB9O,EAAM8O,gBAAgBtB,GAASA,CAClE,CACA,SAASuB,GAAa/O,EAAOoD,EAAa7E,GAEtC,MAAMyQ,EAAY,CAAC,EACbxB,EAAQmB,GAAS3O,EAAOoD,EAAa7E,GAoB3C,OAnBIyB,EAAMqB,OAA+B,IAAvBrB,EAAMiP,eAEpBD,EAAUE,WAAY,EAEtB1B,EAAM2B,WACF3B,EAAM4B,iBACF5B,EAAM6B,mBACF,OAEZ7B,EAAM8B,aACa,IAAftP,EAAMqB,KACA,OAAM,OAAAgI,OACgB,MAAfrJ,EAAMqB,KAAe,IAAM,WAEzBX,IAAnBV,EAAMuP,WACLvP,EAAMwP,OAASxP,EAAMyP,YAAczP,EAAM0P,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUxB,MAAQA,EACXwB,CACX,CChDA,MAAMW,GAAmB,IAAI5I,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS6I,GAAkB/N,GACvB,OAAQA,EAAIoF,WAAW,UAClBpF,EAAIoF,WAAW,SAAmB,cAARpF,GAC3BA,EAAIoF,WAAW,WACfpF,EAAIoF,WAAW,UACfpF,EAAIoF,WAAW,UACfpF,EAAIoF,WAAW,aACf0I,GAAiBtJ,IAAIxE,EAC7B,CCrDA,IAAIgO,GAAiBhO,IAAS+N,GAAkB/N,GAoBhD,KAnBiCiO,GAyBLC,QAAQ,0BAA0BrH,WArB1DmH,GAAiBhO,GAAQA,EAAIoF,WAAW,OAAS2I,GAAkB/N,GAAOiO,GAAYjO,GAsB1F,CACA,MAAOmO,IACH,CA5BJ,IAAiCF,G,eCDjC,SAASG,GAAWC,EAAQC,EAAQtF,GAChC,MAAyB,kBAAXqF,EACRA,EACA1G,GAAGxB,UAAUmI,EAAStF,EAAOqF,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,mGCDX,SAASE,GAAcnD,EAAKhL,EAEfkL,EAASkD,EAAUjD,GAAmB,IAFrB,MAAEkD,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAE/D,EAAO,QAAEC,EAAO,WAAE+D,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,GAE1G1O,EAMP,GALA+K,GAAgBC,GADX2D,EAAAA,GAAAA,GAAA3O,EAAA4O,IAC0B1D,EAASC,GAKpCiD,EAIA,YAHIpD,EAAMI,MAAMyD,UACZ7D,EAAM8D,MAAMD,QAAU7D,EAAMI,MAAMyD,UAI1C7D,EAAM8D,MAAQ9D,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,MAAM,MAAE0D,EAAK,MAAE1D,EAAK,WAAE2D,GAAe/D,EAKjC8D,EAAMlJ,YACFmJ,IACA3D,EAAMxF,UAAYkJ,EAAMlJ,kBACrBkJ,EAAMlJ,WAGbmJ,SACazQ,IAAZkM,QAAqClM,IAAZmM,GAAyBW,EAAMxF,aACzDwF,EAAME,gBFzBd,SAAgCyD,EAAYvE,EAASC,GACjD,MAAMuE,EAAYnB,GAAWrD,EAASuE,EAAW9J,EAAG8J,EAAW1G,OACzD4G,EAAYpB,GAAWpD,EAASsE,EAAW7J,EAAG6J,EAAWxG,QAC/D,MAAO,GAAPtB,OAAU+H,EAAS,KAAA/H,OAAIgI,EAC3B,CEqBgCC,CAAuBH,OAAwBzQ,IAAZkM,EAAwBA,EAAU,QAAiBlM,IAAZmM,EAAwBA,EAAU,UAG1HnM,IAAV+P,IACAS,EAAM7J,EAAIoJ,QACA/P,IAAVgQ,IACAQ,EAAM5J,EAAIoJ,QACIhQ,IAAdiQ,IACAO,EAAMzI,MAAQkI,QAECjQ,IAAfkQ,GD7BR,SAAsBM,EAAOnL,GAAqD,IAA7CwL,EAAOzL,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAGqK,EAAMrK,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAG0L,IAAW1L,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,KAAAA,UAAA,GAErEoL,EAAMN,WAAa,EAGnB,MAAMa,EAAOD,EAAcpB,GAAWE,GAEtCY,EAAMO,EAAKtB,QAAU3G,GAAGxB,WAAWmI,GAEnC,MAAMS,EAAapH,GAAGxB,UAAUjC,GAC1B8K,EAAcrH,GAAGxB,UAAUuJ,GACjCL,EAAMO,EAAKpB,OAAS,GAAHhH,OAAMuH,EAAU,KAAAvH,OAAIwH,EACzC,CCkBQa,CAAaR,EAAON,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMa,GAAuBA,KAAAhP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EPFC,CAC1B6K,MAAO,CAAC,EACRxF,UAAW,CAAC,EACZ0F,gBAAiB,CAAC,EAClBD,KAAM,CAAC,IODmB,IAC1ByD,MAAO,CAAC,ICJNV,GAAYoB,GAAuB,kBAARA,GAA0C,QAAtBA,EAAI7S,cCMzD,SAAS8S,GAAY7R,EAAOoD,EAAa0O,EAAWrP,GAChD,MAAMsP,GAAcjR,EAAAA,EAAAA,SAAQ,KACxB,MAAMsM,EAAQuE,KAEd,OADApB,GAAcnD,EAAOhK,EAAa,CAAE6K,4BAA4B,GAASuC,GAAS/N,GAAYzC,EAAMuN,oBACpG5K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOyK,EAAM8D,OAAK,IACd1D,OAAK7K,EAAAA,EAAAA,GAAA,GAAOyK,EAAMI,UAEvB,CAACpK,IACJ,GAAIpD,EAAMwN,MAAO,CACb,MAAMwE,EAAY,CAAC,EACnBxD,GAAkBwD,EAAWhS,EAAMwN,MAAOxN,GAC1C+R,EAAYvE,OAAK7K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQqP,GAAcD,EAAYvE,MACvD,CACA,OAAOuE,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkBpM,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,IAAAA,UAAA,GAwBvC,MAvBkBvD,CAACE,EAAWzC,EAAOd,EAAGkD,EAAoB7D,KAAa,IAA/B,aAAE8O,GAAcjL,EACtD,MAGM2P,GAHiBvL,EAAe/D,GAChCoP,GACA9C,IAC6B/O,EAAOqN,EAAc9O,EAAUkE,GAC5D0P,EPoBd,SAAqBnS,EAAOoS,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMtQ,KAAO7B,EAQF,WAAR6B,GAA4C,kBAAjB7B,EAAMqS,SAEjCxC,GAAchO,KACU,IAAvBqQ,GAA+BtC,GAAkB/N,KAChDuQ,IAAUxC,GAAkB/N,IAE7B7B,EAAiB,WAAK6B,EAAIoF,WAAW,aACtCkL,EAActQ,GAAO7B,EAAM6B,IAGnC,OAAOsQ,CACX,COzC8BG,CAAYtS,EAA4B,kBAAdyC,EAAwByP,GAClEK,GAAY5P,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXwP,GACAJ,GAAW,IACd7S,SAOE,SAAEsT,GAAaxS,EACfyS,GAAmB3R,EAAAA,EAAAA,SAAQ,IAAOoG,EAAcsL,GAAYA,EAASrM,MAAQqM,EAAW,CAACA,IAC/F,OAAOE,EAAAA,EAAAA,eAAcjQ,GAASE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvB4P,GAAY,IACfC,SAAUC,KAItB,CChCA,SAASE,GAAWC,EAAOxQ,EAAmByQ,EAAWC,GAAY,IAAxC,MAAEtF,EAAK,KAAEC,GAAMrL,EACxCjD,OAAOyP,OAAOgE,EAAQpF,MAAOA,EAAOsF,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAMhR,KAAO4L,EACdmF,EAAQpF,MAAMwF,YAAYnR,EAAK4L,EAAK5L,GAE5C,CCHA,MAAMoR,GAAsB,IAAIlM,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASmM,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAazS,EAAWoS,GAC5C,IAAK,MAAMjR,KAAOsR,EAAYjC,MAC1B0B,EAAQS,aAAcJ,GAAoB5M,IAAIxE,GAA0BA,EAAnBjD,EAAYiD,GAAYsR,EAAYjC,MAAMrP,GAEvG,CCNA,SAASyR,GAA4BtT,EAAOuT,GACxC,MAAM,MAAE/F,GAAUxN,EACZwT,EAAY,CAAC,EACnB,IAAK,MAAM3R,KAAO2L,GACVtG,EAAcsG,EAAM3L,KACnB0R,EAAU/F,OAAStG,EAAcqM,EAAU/F,MAAM3L,KAClDmF,EAAoBnF,EAAK7B,MACzBwT,EAAU3R,GAAO2L,EAAM3L,IAG/B,OAAO2R,CACX,CCVA,SAASF,GAA4BtT,EAAOuT,GACxC,MAAMC,EAAYC,GAA8BzT,EAAOuT,GACvD,IAAK,MAAM1R,KAAO7B,EACd,GAAIkH,EAAclH,EAAM6B,KAASqF,EAAcqM,EAAU1R,IAAO,CAI5D2R,GAHuD,IAArC3M,EAAmBH,QAAQ7E,GACvC,OAASA,EAAI6R,OAAO,GAAGC,cAAgB9R,EAAI+R,UAAU,GACrD/R,GACiB7B,EAAM6B,EACjC,CAEJ,OAAO2R,CACX,CCfA,SAASK,GAAwB7T,EAAO8T,EAAYjO,GAAkD,IAA1CkO,EAAajO,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGkO,EAAelO,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAfgO,IACPA,EAAaA,OAAsBpT,IAAXmF,EAAuBA,EAAS7F,EAAM6F,OAAQkO,EAAeC,IAM/D,kBAAfF,IACPA,EAAa9T,EAAMM,UAAYN,EAAMM,SAASwT,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBpT,IAAXmF,EAAuBA,EAAS7F,EAAM6F,OAAQkO,EAAeC,IAElFF,CACX,C,eCvBA,MAAMG,GAAqBzU,GAChBC,MAAMC,QAAQF,GCInB0U,GAAgC1U,GAE3ByU,GAAkBzU,GAAKA,EAAEA,EAAEuG,OAAS,IAAM,EAAIvG,ECCzD,SAAS2U,GAAmBlP,GACxB,MAAMmP,EAAiBlN,EAAcjC,GAASA,EAAMkB,MAAQlB,EAC5D,ODRmBzF,ECQE4U,EDPd/T,QAAQb,GAAkB,kBAANA,GAAkBA,EAAE6U,KAAO7U,EAAE8U,SCQlDF,EAAeE,UACfF,EDVa5U,KCWvB,C,wCCMA,MAAM+U,GAAsBC,GAAW,CAACxU,EAAOzB,KAC3C,MAAMkC,GAAUI,EAAAA,EAAAA,YAAWpC,GACrBgF,GAAkB5C,EAAAA,EAAAA,YAAW6C,EAAAA,GAC7B+Q,EAAOA,IAbjB,SAAkBrS,EAA+DpC,EAAOS,EAASgD,GAAiB,IAA/F,4BAAE6P,EAA2B,kBAAEoB,EAAiB,QAAEC,GAAUvS,EAC3E,MAAMgL,EAAQ,CACVC,aAAcuH,GAAiB5U,EAAOS,EAASgD,EAAiB6P,GAChEH,YAAauB,KAKjB,OAHIC,IACAvH,EAAMhI,MAASD,GAAawP,EAAQ3U,EAAOmF,EAAUiI,IAElDA,CACX,CAIuByH,CAAUL,EAAQxU,EAAOS,EAASgD,GACrD,OAAOlF,EAAWkW,KAASK,EAAAA,GAAAA,GAAYL,IAE3C,SAASG,GAAiB5U,EAAOS,EAASgD,EAAiBsR,GACvD,MAAM1C,EAAS,CAAC,EACV2C,EAAeD,EAAmB/U,EAAO,CAAC,GAChD,IAAK,MAAM6B,KAAOmT,EACd3C,EAAOxQ,GAAOsS,GAAmBa,EAAanT,IAElD,IAAI,QAAErB,EAAO,QAAEP,GAAYD,EAC3B,MAAMiV,EAA0BlV,EAAsBC,GAChDkV,EAAkB9U,EAAcJ,GAClCS,GACAyU,IACCD,IACiB,IAAlBjV,EAAMW,eACUD,IAAZF,IACAA,EAAUC,EAAQD,cACNE,IAAZT,IACAA,EAAUQ,EAAQR,UAE1B,IAAIkV,IAA4B1R,IACE,IAA5BA,EAAgBjD,QAEtB2U,EAA4BA,IAAyC,IAAZ3U,EACzD,MAAM4U,EAAeD,EAA4BlV,EAAUO,EAC3D,GAAI4U,GACwB,mBAAjBA,IACNzV,EAAoByV,GAAe,EACvB3V,MAAMC,QAAQ0V,GAAgBA,EAAe,CAACA,IACtDC,QAASvB,IACV,MAAMwB,EAAWzB,GAAwB7T,EAAO8T,GAChD,IAAKwB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAEC,GAA0BF,EAAX7G,GAAMsC,EAAAA,GAAAA,GAAKuE,EAAQtE,IACzD,IAAK,MAAMnP,KAAO4M,EAAQ,CACtB,IAAIgH,EAAchH,EAAO5M,GACzB,GAAIpC,MAAMC,QAAQ+V,GAAc,CAQ5BA,EAAcA,EAHAN,EACRM,EAAY1P,OAAS,EACrB,EAEV,CACoB,OAAhB0P,IACApD,EAAOxQ,GAAO4T,EAEtB,CACA,IAAK,MAAM5T,KAAO0T,EACdlD,EAAOxQ,GAAO0T,EAAc1T,IAExC,CACA,OAAOwQ,CACX,C,eCtEA,MAAMqD,GAAkB,CACpBlT,eAAgB+R,GAAmB,CAC/BjB,4BAA6BA,GAC7BoB,kBAAmB/C,GACnBgD,QAASA,CAAC3U,EAAOmF,EAAQ/C,KAAoC,IAAlC,YAAE+Q,EAAW,aAAE9F,GAAcjL,EACpDuT,GAAAA,GAAMC,KAAK,KACP,IACIzC,EAAYhC,WAEJ,oBADGhM,EAAS0Q,QAEV1Q,EAAS0Q,UACT1Q,EAAS2Q,uBACvB,CACA,MAAOC,GAEH5C,EAAYhC,WAAa,CACrB9J,EAAG,EACHC,EAAG,EACHmD,MAAO,EACPE,OAAQ,EAEhB,IAEJgL,GAAAA,GAAMpR,OAAO,KACTgM,GAAc4C,EAAa9F,EAAc,CAAEY,4BAA4B,GAASuC,GAASrL,EAAS6Q,SAAUhW,EAAMuN,mBAClH2F,GAAU/N,EAAUgO,SC7B9B8C,GAAmB,CACrBzT,eAAgB+R,GAAmB,CAC/BjB,4BAA2B,GAC3BoB,kBAAmBnG,MCP3B,SAAS2H,GAAYzH,EAAQ0H,EAAWC,GAAsC,IAA7B9I,EAAOxH,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAEuQ,SAAS,GAElE,OADA5H,EAAO6H,iBAAiBH,EAAWC,EAAS9I,GACrC,IAAMmB,EAAO8H,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,GAA2B,IAApBK,EAAShR,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHiR,MAAO,CACH1P,EAAGoP,EAAMK,EAAY,KACrBxP,EAAGmP,EAAMK,EAAY,MAGjC,CCNA,SAASE,GAAgBvI,EAAQ0H,EAAWC,EAAS9I,GACjD,OAAO4I,GAAYzH,EAAQ0H,EDMPC,IACZK,GAAUD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,ICPvCQ,CAAeb,GAAU9I,EACnE,CCEA,MAAM4J,GAAmBA,CAACC,EAAGC,IAAO5X,GAAM4X,EAAED,EAAE3X,IACxC6X,GAAO,mBAAAC,EAAAxR,UAAAC,OAAIwR,EAAY,IAAA9X,MAAA6X,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAA1R,UAAA0R,GAAA,OAAKD,EAAaE,OAAOP,GAAiB,ECRvE,SAASQ,GAAWvX,GAChB,IAAIwX,EAAO,KACX,MAAO,KACH,MAAMC,EAAWA,KACbD,EAAO,MAEX,OAAa,OAATA,IACAA,EAAOxX,EACAyX,GAInB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAc1W,GACnB,IAAIsW,GAAO,EACX,GAAa,MAATtW,EACAsW,EAAOG,UAEN,GAAa,MAATzW,EACLsW,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAOA,KACHK,IACAC,MAKAD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACFC,WAAAA,CAAYC,GACRC,KAAKC,WAAY,EACjBD,KAAKD,KAAOA,CAChB,CACApU,MAAAA,GAAW,ECCf,SAASuU,GAAcH,EAAMI,GACzB,MAAMvC,EAAY,WAAauC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAO1B,GAAgBsB,EAAKvU,QAASoS,EAXjByC,CAACnC,EAAOoC,KACxB,GAA0B,UAAtBpC,EAAMC,aAA2BwB,KACjC,OACJ,MAAMlY,EAAQsY,EAAKQ,WACfR,EAAK9T,gBAAkBxE,EAAM+Y,YAC7BT,EAAK9T,eAAewU,UAAU,aAAcN,GAE5C1Y,EAAM2Y,IACNhD,GAAAA,GAAMzR,OAAO,IAAMlE,EAAM2Y,GAAclC,EAAOoC,KAGO,CACzDxC,SAAUiC,EAAKQ,WAAWH,IAElC,CChBA,MAAMM,GAAgBA,CAAC1V,EAAQ2V,MACtBA,IAGI3V,IAAW2V,GAITD,GAAc1V,EAAQ2V,EAAMC,gB,eCL3C,SAASC,GAA0BjZ,EAAMiW,GACrC,IAAKA,EACD,OACJ,MAAMiD,EAAwB,IAAIC,aAAa,UAAYnZ,GAC3DiW,EAAQiD,EAAuBxC,GAAiBwC,GACpD,C,kBCVME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMC,EAAWL,GAAkBpT,IAAIwT,EAAMlL,QAC7CmL,GAAYA,EAASD,IAEnBE,GAA4BC,IAC9BA,EAAQzE,QAAQqE,KAqBpB,SAASK,GAAoBnH,EAAStF,EAASsM,GAC3C,MAAMI,EApBV,SAAiC5X,GAAuB,IAAtB,KAAE6X,GAAkB7X,EAATkL,GAAOyD,EAAAA,GAAAA,GAAA3O,EAAA4O,IAChD,MAAMkJ,EAAaD,GAAQE,SAItBV,GAAUpT,IAAI6T,IACfT,GAAUnT,IAAI4T,EAAY,CAAC,GAE/B,MAAME,EAAgBX,GAAUtT,IAAI+T,GAC9BrY,EAAMwY,KAAKC,UAAUhN,GAQ3B,OAHK8M,EAAcvY,KACfuY,EAAcvY,GAAO,IAAI0Y,qBAAqBV,IAAwBlX,EAAAA,EAAAA,GAAA,CAAIsX,QAAS3M,KAEhF8M,EAAcvY,EACzB,CAEsC2Y,CAAyBlN,GAG3D,OAFAiM,GAAkBjT,IAAIsM,EAASgH,GAC/BI,EAA0BS,QAAQ7H,GAC3B,KACH2G,GAAkBmB,OAAO9H,GACzBoH,EAA0BW,UAAU/H,GAE5C,CC3CA,MAAMgI,GAAiB,CACnB1a,KAAM,EACN2a,IAAK,GCAT,MAAMC,GAAoB,CACtBpZ,OAAQ,CACJ0W,QDAR,cAA4BA,GACxBC,WAAAA,GACI0C,SAASjV,WACTyS,KAAKyC,gBAAiB,EACtBzC,KAAK0C,UAAW,CACpB,CACAC,aAAAA,GACI3C,KAAKlT,UACL,MAAM,SAAE8V,EAAW,CAAC,GAAM5C,KAAKD,KAAKQ,YAC9B,KAAEmB,EAAM1O,OAAQ6P,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtD7N,EAAU,CACZ2M,KAAMA,EAAOA,EAAKlW,aAAUrD,EAC5B0a,aACAG,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOtB,GAAoBxB,KAAKD,KAAKvU,QAASuJ,EA7BhBqM,IAC1B,MAAM,eAAE6B,GAAmB7B,EAI3B,GAAIpB,KAAK0C,WAAaO,EAClB,OAMJ,GALAjD,KAAK0C,SAAWO,EAKZF,IAASE,GAAkBjD,KAAKyC,eAChC,OAEKQ,IACLjD,KAAKyC,gBAAiB,GAEtBzC,KAAKD,KAAK9T,gBACV+T,KAAKD,KAAK9T,eAAewU,UAAU,cAAewC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBnD,KAAKD,KAAKQ,WACjDc,EAAW4B,EAAiBC,EAAkBC,EACpD9B,GAAYA,EAASD,IAG7B,CACAvU,KAAAA,GACImT,KAAK2C,eACT,CACAhX,MAAAA,GACI,GAAoC,qBAAzBqW,qBACP,OACJ,MAAM,MAAEva,EAAK,UAAEuT,GAAcgF,KAAKD,KAC5BqD,EAAoB,CAAC,SAAU,SAAU,QAAQzb,KAO/D,SAAiCkC,GAA0D,IAAzD,SAAE+Y,EAAW,CAAC,GAAG/Y,GAAI+Y,SAAUS,EAAe,CAAC,GAAG9V,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQ3F,GAASgb,EAAShb,KAAUyb,EAAazb,EACrD,CAToE0b,CAAyB7b,EAAOuT,IACxFoI,GACApD,KAAK2C,eAEb,CACA7V,OAAAA,GAAY,ICxDZ7D,IAAK,CACD4W,QHMR,cAA2BA,GACvBC,WAAAA,GACI0C,SAASjV,WACTyS,KAAKuD,qBAAuBC,GAAAA,EAC5BxD,KAAKyD,mBAAqBD,GAAAA,EAC1BxD,KAAK0D,0BAA4BF,GAAAA,EACjCxD,KAAK2D,kBAAoB,CAACC,EAAYC,KAClC,GAAI7D,KAAK8D,WACL,OACJ9D,KAAKyD,qBACL,MAAMhc,EAAQuY,KAAKD,KAAKQ,WAgBlBwD,EAA0BtF,GAAgB5S,OAAQ,YAfhCmY,CAACC,EAAUC,KAC/B,IAAKlE,KAAKmE,gBACN,OACJ,MAAM,MAAElN,EAAK,YAAEmN,EAAW,gBAAEC,GAAoBrE,KAAKD,KAAKQ,WAC1DnD,GAAAA,GAAMzR,OAAO,KAKR0Y,GACI3D,GAAcV,KAAKD,KAAKvU,QAASyY,EAAS/N,QAEzCe,GAASA,EAAMgN,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,MAImC,CAAEpG,UAAWrW,EAAMwP,OAASxP,EAAmB,eAC/H6c,EAA8B7F,GAAgB5S,OAAQ,gBAAiB,CAAC0Y,EAAaC,IAAexE,KAAKyE,YAAYF,EAAaC,GAAa,CAAE1G,UAAWrW,EAAM2c,aAAe3c,EAAuB,mBAC9MuY,KAAKyD,mBAAqB3E,GAAKiF,EAAyBO,GACxDtE,KAAK0E,WAAWd,EAAYC,IAEhC7D,KAAK2E,qBAAuB,KACxB,MAmBMC,EAAwBjH,GAAYqC,KAAKD,KAAKvU,QAAS,UAnBtCqZ,IACnB,GAAyB,UAArBA,EAAavb,KAAmB0W,KAAK8D,WACrC,OAWJ9D,KAAKyD,qBACLzD,KAAKyD,mBAAqB9F,GAAYqC,KAAKD,KAAKvU,QAAS,QAXpCsZ,IACM,UAAnBA,EAAWxb,KAAoB0W,KAAKmE,iBAExCtD,GAA0B,KAAM,CAAC3C,EAAOoC,KACpC,MAAM,MAAErJ,GAAU+I,KAAKD,KAAKQ,WACxBtJ,GACAmG,GAAAA,GAAMzR,OAAO,IAAMsL,EAAMiH,EAAOoC,QAM5CO,GAA0B,OAAQ,CAAC3C,EAAOoC,KACtCN,KAAK0E,WAAWxG,EAAOoC,OASzByE,EAAqBpH,GAAYqC,KAAKD,KAAKvU,QAAS,OALvCwZ,KACVhF,KAAK8D,YAEVjD,GAA0B,SAAU,CAAC0D,EAAaC,IAAexE,KAAKyE,YAAYF,EAAaC,MAGnGxE,KAAK0D,0BAA4B5E,GAAK8F,EAAuBG,GAErE,CACAL,UAAAA,CAAWxG,EAAOoC,GACdN,KAAK8D,YAAa,EAClB,MAAM,WAAE5M,EAAU,SAAEC,GAAa6I,KAAKD,KAAKQ,WAIvCpJ,GAAY6I,KAAKD,KAAK9T,gBACtB+T,KAAKD,KAAK9T,eAAewU,UAAU,YAAY,GAE/CvJ,GACAkG,GAAAA,GAAMzR,OAAO,IAAMuL,EAAWgH,EAAOoC,GAE7C,CACA6D,aAAAA,GACInE,KAAKyD,qBACLzD,KAAK8D,YAAa,EAKlB,OAJc9D,KAAKD,KAAKQ,WACdpJ,UAAY6I,KAAKD,KAAK9T,gBAC5B+T,KAAKD,KAAK9T,eAAewU,UAAU,YAAY,IAE3Cd,IACZ,CACA8E,WAAAA,CAAYvG,EAAOoC,GACf,IAAKN,KAAKmE,gBACN,OACJ,MAAM,YAAEC,GAAgBpE,KAAKD,KAAKQ,WAC9B6D,GACAhH,GAAAA,GAAMzR,OAAO,IAAMyY,EAAYlG,EAAOoC,GAE9C,CACAzT,KAAAA,GACI,MAAMpF,EAAQuY,KAAKD,KAAKQ,WAClB0E,EAAwBxG,GAAgBhX,EAAM4c,gBAAkBxY,OAASmU,KAAKD,KAAKvU,QAAS,cAAewU,KAAK2D,kBAAmB,CAAE7F,UAAWrW,EAAMyP,YAAczP,EAAsB,kBAC1Lyd,EAAsBvH,GAAYqC,KAAKD,KAAKvU,QAAS,QAASwU,KAAK2E,sBACzE3E,KAAKuD,qBAAuBzE,GAAKmG,EAAuBC,EAC5D,CACApY,OAAAA,GACIkT,KAAKuD,uBACLvD,KAAKyD,qBACLzD,KAAK0D,2BACT,IGzGA3a,MAAO,CACH8W,QCTR,cAA2BA,GACvBC,WAAAA,GACI0C,SAASjV,WACTyS,KAAKG,UAAW,CACpB,CACAgF,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBpF,KAAKD,KAAKvU,QAAQ6Z,QAAQ,iBAC/C,CACA,MAAO7H,GACH4H,GAAiB,CACrB,CACKA,GAAmBpF,KAAKD,KAAK9T,iBAElC+T,KAAKD,KAAK9T,eAAewU,UAAU,cAAc,GACjDT,KAAKG,UAAW,EACpB,CACAmF,MAAAA,GACStF,KAAKG,UAAaH,KAAKD,KAAK9T,iBAEjC+T,KAAKD,KAAK9T,eAAewU,UAAU,cAAc,GACjDT,KAAKG,UAAW,EACpB,CACAtT,KAAAA,GACImT,KAAKlT,QAAUgS,GAAKnB,GAAYqC,KAAKD,KAAKvU,QAAS,QAAS,IAAMwU,KAAKmF,WAAYxH,GAAYqC,KAAKD,KAAKvU,QAAS,OAAQ,IAAMwU,KAAKsF,UACzI,CACAxY,OAAAA,GAAY,IDtBZ9D,MAAO,CACH6W,QLQR,cAA2BA,GACvBhT,KAAAA,GACImT,KAAKlT,QAAUgS,GAAKoB,GAAcF,KAAKD,MAAM,GAAOG,GAAcF,KAAKD,MAAM,GACjF,CACAjT,OAAAA,GAAY,KO5BhB,SAASyY,GAAeC,EAAMC,GAC1B,IAAKve,MAAMC,QAAQse,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKjY,OACxB,GAAIkY,IAAeF,EAAKhY,OACpB,OAAO,EACX,IAAK,IAAIqI,EAAI,EAAGA,EAAI6P,EAAY7P,IAC5B,GAAI4P,EAAK5P,KAAO2P,EAAK3P,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAAS8P,GAAe5a,EAAewQ,EAAYjO,GAC/C,MAAM7F,EAAQsD,EAAcwV,WAC5B,OAAOjF,GAAwB7T,EAAO8T,OAAuBpT,IAAXmF,EAAuBA,EAAS7F,EAAM6F,OAf5F,SAAoBvC,GAChB,MAAMS,EAAU,CAAC,EAEjB,OADAT,EAAc+O,OAAOgD,QAAQ,CAACpQ,EAAOpD,IAASkC,EAAQlC,GAAOoD,EAAMkB,OAC5DpC,CACX,CAWoGoa,CAAW7a,GAP/G,SAAqBA,GACjB,MAAM8a,EAAW,CAAC,EAElB,OADA9a,EAAc+O,OAAOgD,QAAQ,CAACpQ,EAAOpD,IAASuc,EAASvc,GAAOoD,EAAMkC,eAC7DiX,CACX,CAG+HjX,CAAY7D,GAC3I,C,eCfA,MAAM+a,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICPzDC,IACO,ECDPC,GAAsBC,GAAWlf,MAAMC,QAAQif,IAAgC,kBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAOte,SAASse,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClBlf,MAAMC,QAAQif,IAAWA,EAAOG,MAAMF,IAC/C,CACA,MAAMG,GAAsB3c,IAAA,IAAE+U,EAAGC,EAAG4H,EAAGC,GAAE7c,EAAA,sBAAAiH,OAAqB8N,EAAC,MAAA9N,OAAK+N,EAAC,MAAA/N,OAAK2V,EAAC,MAAA3V,OAAK4V,EAAC,MAC3EJ,GAAuB,CACzBK,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQR,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CS,QAAST,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CU,OAAQV,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDW,QAASX,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASY,GAAwBhB,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpBlf,MAAMC,QAAQif,GACVA,EAAOiB,IAAID,IACXd,GAAqBF,EACnC,CCRA,MAAMkB,GAAaA,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOtE,GAAAA,EACX,MAAMuE,EAAYC,GArBtB,SAAyBlZ,EAAGmZ,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAvS,EAAI,EACR,GACIuS,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,GAAWc,EAAUT,EAAKE,GAAO/Y,EACxCqZ,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZvY,KAAKwY,IAAIF,GAfO,QAgBnBtS,EAfuB,IAgB7B,OAAOuS,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMjB,GAASa,GAAY,IAAM,EAAG,EAAG,GACjCZ,GAAUY,GAAY,EAAG,EAAG,IAAM,GAClCX,GAAYW,GAAY,IAAM,EAAG,IAAM,GCFvCa,GAAgBnC,GAAYrgB,GAAMA,GAAK,GAAMqgB,EAAO,EAAIrgB,GAAK,GAAK,EAAIqgB,EAAO,GAAK,EAAIrgB,KAAO,ECA7FyiB,GAAiBpC,GAAYrgB,GAAM,EAAIqgB,EAAO,EAAIrgB,GCClDihB,GAAUjhB,GAAM,EAAI8J,KAAK4Y,IAAI5Y,KAAK6Y,KAAK3iB,IACvCkhB,GAAUuB,GAAcxB,IACxB2B,GAAYJ,GAAavB,ICDzBG,GAAUO,GAAY,IAAM,KAAM,IAAM,KACxCR,GAASsB,GAAcrB,IACvByB,GAAYL,GAAarB,ICEzB2B,GAAe,CACjBlC,OAAQnD,GAAAA,EACRqD,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN2B,UAAS,GACT1B,QAAO,GACPC,OAAM,GACN0B,UAAS,GACTzB,QAAO,GACP2B,WCjBgB/iB,IAAOA,GAAK,GAAK,EAAI,GAAMmhB,GAAOnhB,GAAK,IAAO,EAAI8J,KAAKkZ,IAAI,GAAI,IAAMhjB,EAAI,MDmBvFijB,GAA8BzN,IAChC,GAAIrU,MAAMC,QAAQoU,GAAa,EAE3B0N,EAAAA,GAAAA,GAAgC,IAAtB1N,EAAW/N,OAAc,2DACnC,MAAO0b,EAAIC,EAAIC,EAAIC,GAAM9N,EACzB,OAAOmM,GAAYwB,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAf9N,IAEZ0N,EAAAA,GAAAA,QAAuC9gB,IAA7B0gB,GAAatN,GAA2B,wBAAFzK,OAA0ByK,EAAU,MAC7EsN,GAAatN,IAEjBA,GE3BL+N,GAAgBA,CAAC9Z,EAAM+Z,IAActiB,GAChCa,QAAS2I,EAASxJ,IAAMuJ,EAAiBpC,KAAKnH,IAAMA,EAAEyH,WAAWc,IACnE+Z,GAAY3iB,OAAOC,UAAUC,eAAeC,KAAKE,EAAGsiB,IAEvDC,GAAaA,CAACC,EAAOC,EAAOC,IAAW1iB,IACzC,IAAKwJ,EAASxJ,GACV,OAAOA,EACX,MAAO2X,EAAGC,EAAG4H,EAAGxW,GAAShJ,EAAE2iB,MAAMtZ,GACjC,MAAO,CACH,CAACmZ,GAAQzZ,WAAW4O,GACpB,CAAC8K,GAAQ1Z,WAAW6O,GACpB,CAAC8K,GAAQ3Z,WAAWyW,GACpBxW,WAAiB9H,IAAV8H,EAAsBD,WAAWC,GAAS,ICZnD4Z,IAAOzf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN0F,GAAM,IACTL,UAAYxI,GAAM4I,KAAKQ,MAHLpJ,IAAMyI,EAAM,EAAG,IAAKzI,GAGT6iB,CAAa7iB,MAExC8iB,GAAO,CACT3b,KAAMkb,GAAc,MAAO,OAC3BvZ,MAAOyZ,GAAW,MAAO,QAAS,QAClC/Z,UAAW5F,IAAA,IAAC,IAAEmgB,EAAG,MAAEC,EAAK,KAAEC,EAAMja,MAAOka,EAAU,GAAGtgB,EAAA,MAAK,QACrDggB,GAAQpa,UAAUua,GAClB,KACAH,GAAQpa,UAAUwa,GAClB,KACAJ,GAAQpa,UAAUya,GAClB,KACA9Z,EAASH,EAAMR,UAAU0a,IACzB,MCYR,MAAMC,GAAM,CACRhc,KAAMkb,GAAc,KACpBvZ,MAhCJ,SAAkB9I,GACd,IAAIojB,EAAI,GACJC,EAAI,GACJzL,EAAI,GACJD,EAAI,GAmBR,OAjBI3X,EAAEuG,OAAS,GACX6c,EAAIpjB,EAAEoU,UAAU,EAAG,GACnBiP,EAAIrjB,EAAEoU,UAAU,EAAG,GACnBwD,EAAI5X,EAAEoU,UAAU,EAAG,GACnBuD,EAAI3X,EAAEoU,UAAU,EAAG,KAInBgP,EAAIpjB,EAAEoU,UAAU,EAAG,GACnBiP,EAAIrjB,EAAEoU,UAAU,EAAG,GACnBwD,EAAI5X,EAAEoU,UAAU,EAAG,GACnBuD,EAAI3X,EAAEoU,UAAU,EAAG,GACnBgP,GAAKA,EACLC,GAAKA,EACLzL,GAAKA,EACLD,GAAKA,GAEF,CACHoL,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAAS1L,EAAG,IAClB5O,MAAO2O,EAAI2L,SAAS3L,EAAG,IAAM,IAAM,EAE3C,EAIInP,UAAWsa,GAAKta,WC/Bd+a,GAAO,CACTpc,KAAMkb,GAAc,MAAO,OAC3BvZ,MAAOyZ,GAAW,MAAO,aAAc,aACvC/Z,UAAW5F,IAAwD,IAAvD,IAAE4gB,EAAG,WAAEC,EAAU,UAAEC,EAAW1a,MAAOka,EAAU,GAAGtgB,EAC1D,MAAQ,QACJgG,KAAKQ,MAAMoa,GACX,KACAzZ,GAAQvB,UAAUW,EAASsa,IAC3B,KACA1Z,GAAQvB,UAAUW,EAASua,IAC3B,KACAva,EAASH,EAAMR,UAAU0a,IACzB,MCZNS,GAAQ,CACVxc,KAAOnH,GAAM8iB,GAAK3b,KAAKnH,IAAMmjB,GAAIhc,KAAKnH,IAAMujB,GAAKpc,KAAKnH,GACtD8I,MAAQ9I,GACA8iB,GAAK3b,KAAKnH,GACH8iB,GAAKha,MAAM9I,GAEbujB,GAAKpc,KAAKnH,GACRujB,GAAKza,MAAM9I,GAGXmjB,GAAIra,MAAM9I,GAGzBwI,UAAYxI,GACDwJ,EAASxJ,GACVA,EACAA,EAAEH,eAAe,OACbijB,GAAKta,UAAUxI,GACfujB,GAAK/a,UAAUxI,ICF3B6U,GAAMA,CAAC+O,EAAMC,EAAIC,KAAcA,EAAWF,EAAOE,EAAWD,EAAKD,ECpBvE,SAASG,GAASjlB,EAAGklB,EAAG1D,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDxhB,EAAc,GAATklB,EAAIllB,GAASwhB,EACzBA,EAAI,GACG0D,EACP1D,EAAI,EAAI,EACDxhB,GAAKklB,EAAIllB,IAAM,EAAI,EAAIwhB,GAAK,EAChCxhB,CACX,CCHA,MAAMmlB,GAAiBA,CAACL,EAAMC,EAAI7jB,KAC9B,MAAMkkB,EAAWN,EAAOA,EACxB,OAAOhb,KAAKub,KAAKvb,KAAKD,IAAI,EAAG3I,GAAK6jB,EAAKA,EAAKK,GAAYA,KAEtDE,GAAa,CAACjB,GAAKL,GAAMS,IAE/B,SAASc,GAAOV,GACZ,MAAMpb,GAFYvI,EAEQ2jB,EAFFS,GAAWE,KAAM/b,GAASA,EAAKpB,KAAKnH,KAA1CA,OAGlBgiB,EAAAA,GAAAA,GAAUnhB,QAAQ0H,GAAO,IAAFsB,OAAM8Z,EAAK,yEAClC,IAAIY,EAAQhc,EAAKO,MAAM6a,GAKvB,OAJIpb,IAASgb,KAETgB,EDRR,SAAmB3hB,GAAwC,IAAvC,IAAE4gB,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAE1a,GAAOpG,EACrD4gB,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKQ,EAGA,CACD,MAAMO,EAAIN,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC3kB,EAAI,EAAI4kB,EAAYM,EAC1BjB,EAAMgB,GAASjlB,EAAGklB,EAAGR,EAAM,EAAI,GAC/BR,EAAQe,GAASjlB,EAAGklB,EAAGR,GACvBP,EAAOc,GAASjlB,EAAGklB,EAAGR,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKna,KAAKQ,MAAY,IAAN2Z,GAChBC,MAAOpa,KAAKQ,MAAc,IAAR4Z,GAClBC,KAAMra,KAAKQ,MAAa,IAAP6Z,GACjBja,QAER,CCjBgBwb,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACb,EAAMC,KACpB,MAAMa,EAAWL,GAAOT,GAClBe,EAASN,GAAOR,GAChBe,GAAOzhB,EAAAA,EAAAA,GAAA,GAAQuhB,GACrB,OAAQ1kB,IACJ4kB,EAAQ7B,IAAMkB,GAAeS,EAAS3B,IAAK4B,EAAO5B,IAAK/iB,GACvD4kB,EAAQ5B,MAAQiB,GAAeS,EAAS1B,MAAO2B,EAAO3B,MAAOhjB,GAC7D4kB,EAAQ3B,KAAOgB,GAAeS,EAASzB,KAAM0B,EAAO1B,KAAMjjB,GAC1D4kB,EAAQ5b,MAAQ6L,GAAI6P,EAAS1b,MAAO2b,EAAO3b,MAAOhJ,GAC3C8iB,GAAKta,UAAUoc,KCrB9B,MAAMC,GAAkB,CACpBC,MpEZqB,gFoEarBC,SAAU,OACV5c,MAAO,OACPW,MAAOyT,GAAAA,GAELyI,GAAiB,CACnBF,MAAOxb,EACPyb,SAAU,SACV5c,MAAO,OACPW,MAAO6a,GAAM7a,OAEXmc,GAAkB,CACpBH,MAAOzb,EACP0b,SAAU,UACV5c,MAAO,OACPW,MAAOD,EAAOC,OAElB,SAASoc,GAAS7L,EAAIzW,GAAqC,IAAnC,MAAEkiB,EAAK,SAAEC,EAAQ,MAAE5c,EAAK,MAAEW,GAAOlG,EACrD,MAAMwb,EAAU/E,EAAK8L,UAAUxC,MAAMmC,GAChC1G,IAEL/E,EAAK,MAAQ0L,GAAY3G,EAAQ7X,OACjC8S,EAAK8L,UAAY9L,EAAK8L,UAAU7lB,QAAQwlB,EAAO3c,GAC/CkR,EAAKxG,OAAOuS,QAAQhH,EAAQgC,IAAItX,IACpC,CACA,SAASuc,GAAoB5f,GACzB,MAAM6f,EAAgB7f,EAAM8f,WACtBlM,EAAO,CACT5T,MAAO6f,EACPH,UAAWG,EACXzS,OAAQ,GACR2S,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJIrM,EAAK5T,MAAMwB,SAAS,WACpBie,GAAS7L,EAAMwL,IACnBK,GAAS7L,EAAM2L,IACfE,GAAS7L,EAAM4L,IACR5L,CACX,CACA,SAASsM,GAAkB3lB,GACvB,OAAOqlB,GAAoBrlB,GAAG6S,MAClC,CACA,SAAS+S,GAAkB1W,GACvB,MAAM,OAAE2D,EAAM,UAAE4S,EAAS,QAAED,EAAO,UAAEL,GAAcE,GAAoBnW,GAChE2W,EAAYhT,EAAOtM,OACzB,OAAQvG,IACJ,IAAI8lB,EAASX,EACb,IAAK,IAAIvW,EAAI,EAAGA,EAAIiX,EAAWjX,IAEvBkX,EADAlX,EAAI4W,EACKM,EAAOxmB,QAAQulB,GAAgB1c,MAAOnI,EAAE4O,IAE5CA,EAAI4W,EAAUC,EACVK,EAAOxmB,QAAQ0lB,GAAe7c,MAAOwb,GAAMnb,UAAUxI,EAAE4O,KAGvDkX,EAAOxmB,QAAQ2lB,GAAgB9c,MAAOgB,EAASnJ,EAAE4O,KAGlE,OAAOkX,EAEf,CACA,MAAMC,GAAwB/lB,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAMgmB,GAAU,CACZ7e,KA/EJ,SAAcnH,GACV,IAAIwQ,EAAIyV,EACR,OAAQC,MAAMlmB,IACVwJ,EAASxJ,MACwB,QAA9BwQ,EAAKxQ,EAAE2iB,MAAMtZ,UAAgC,IAAPmH,OAAgB,EAASA,EAAGjK,SAAW,KAC3C,QAA9B0f,EAAKjmB,EAAE2iB,MAAMrZ,UAAgC,IAAP2c,OAAgB,EAASA,EAAG1f,SAAW,GAChF,CACZ,EAyEIuC,MAAO6c,GACPC,qBACAO,kBATJ,SAA2BnmB,GACvB,MAAMomB,EAAST,GAAkB3lB,GAEjC,OADoB4lB,GAAkB5lB,EAC/BqmB,CAAYD,EAAOhG,IAAI2F,IAClC,GC5EMO,GAAeA,CAAC5V,EAAQzB,IAAYnQ,GAAC,GAAA+K,OAAQ/K,EAAI,EAAImQ,EAASyB,GACpE,SAAS6V,GAAS7V,EAAQzB,GACtB,MAAsB,kBAAXyB,EACC1Q,GAAM6U,GAAInE,EAAQzB,EAAQjP,GAE7B2jB,GAAMxc,KAAKuJ,GACT+T,GAAS/T,EAAQzB,GAGjByB,EAAOjJ,WAAW,QACnB6e,GAAa5V,EAAQzB,GACrBuX,GAAW9V,EAAQzB,EAEjC,CACA,MAAMwX,GAAWA,CAAC7C,EAAMC,KACpB,MAAMiC,EAAS,IAAIlC,GACbiC,EAAYC,EAAOvf,OACnBmgB,EAAa9C,EAAKxD,IAAI,CAACuG,EAAU/X,IAAM2X,GAASI,EAAU9C,EAAGjV,KACnE,OAAQ5O,IACJ,IAAK,IAAI4O,EAAI,EAAGA,EAAIiX,EAAWjX,IAC3BkX,EAAOlX,GAAK8X,EAAW9X,GAAG5O,GAE9B,OAAO8lB,IAGTc,GAAYA,CAAClW,EAAQzB,KACvB,MAAM6W,GAAM3iB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQuN,GAAWzB,GACzByX,EAAa,CAAC,EACpB,IAAK,MAAMrkB,KAAOyjB,OACM5kB,IAAhBwP,EAAOrO,SAAsCnB,IAAhB+N,EAAO5M,KACpCqkB,EAAWrkB,GAAOkkB,GAAS7V,EAAOrO,GAAM4M,EAAO5M,KAGvD,OAAQrC,IACJ,IAAK,MAAMqC,KAAOqkB,EACdZ,EAAOzjB,GAAOqkB,EAAWrkB,GAAKrC,GAElC,OAAO8lB,IAGTU,GAAaA,CAAC9V,EAAQzB,KACxB,MAAM4X,EAAWb,GAAQJ,kBAAkB3W,GACrC6X,EAAczB,GAAoB3U,GAClCqW,EAAc1B,GAAoBpW,GAIxC,OAHuB6X,EAAYtB,UAAYuB,EAAYvB,SACvDsB,EAAYrB,YAAcsB,EAAYtB,WACtCqB,EAAYpB,YAAcqB,EAAYrB,WAE/B7N,GAAK4O,GAASK,EAAYjU,OAAQkU,EAAYlU,QAASgU,KAG9DG,EAAAA,GAAAA,IAAQ,EAAM,mBAAFnd,OAAqB6G,EAAM,WAAA7G,OAAUoF,EAAM,6KAChDqX,GAAa5V,EAAQzB,KC/C9B6U,GAAWA,CAACF,EAAMC,EAAIpe,KACxB,MAAMwhB,EAAmBpD,EAAKD,EAC9B,OAA4B,IAArBqD,EAAyB,GAAKxhB,EAAQme,GAAQqD,GCJnDC,GAAYA,CAACtD,EAAMC,IAAQ/kB,GAAM+V,GAAI+O,EAAMC,EAAI/kB,GAgBrD,SAASqoB,GAAarB,EAAQnG,EAAMyH,GAChC,MAAMC,EAAS,GACTC,EAAeF,IAhBJ,kBADOpnB,EAiB+B8lB,EAAO,IAfnDoB,GAEW,kBAANlnB,EACL2jB,GAAMxc,KAAKnH,GAAKykB,GAAW+B,GAE7BvmB,MAAMC,QAAQF,GACZymB,GAEW,kBAANzmB,EACL4mB,GAEJM,IAbX,IAA4BlnB,EAkBxB,MAAMunB,EAAYzB,EAAOvf,OAAS,EAClC,IAAK,IAAIqI,EAAI,EAAGA,EAAI2Y,EAAW3Y,IAAK,CAChC,IAAI4Y,EAAQF,EAAaxB,EAAOlX,GAAIkX,EAAOlX,EAAI,IAC/C,GAAI+Q,EAAM,CACN,MAAM8H,EAAiBxnB,MAAMC,QAAQyf,GAAQA,EAAK/Q,IAAM2N,GAAAA,EAAOoD,EAC/D6H,EAAQ3P,GAAK4P,EAAgBD,EACjC,CACAH,EAAOjC,KAAKoC,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO7B,GAAqD,IAA3Crd,MAAOmf,GAAU,EAAI,KAAEjI,EAAI,MAAE6H,GAAOlhB,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMuhB,EAAcF,EAAMphB,OAM1B,IALAyb,EAAAA,GAAAA,GAAU6F,IAAgB/B,EAAOvf,OAAQ,wDAKrB,IAAhBshB,EACA,MAAO,IAAM/B,EAAO,GAEpB6B,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnBhC,EAAS,IAAIA,GAAQgC,WAEzB,MAAMT,EAASF,GAAarB,EAAQnG,EAAM6H,GACpCD,EAAYF,EAAO9gB,OACnBwhB,EAAgB/nB,IAClB,IAAI4O,EAAI,EACR,GAAI2Y,EAAY,EACZ,KAAO3Y,EAAI+Y,EAAMphB,OAAS,KAClBvG,EAAI2nB,EAAM/Y,EAAI,IADOA,KAKjC,MAAMoZ,EAAkBlE,GAAS6D,EAAM/Y,GAAI+Y,EAAM/Y,EAAI,GAAI5O,GACzD,OAAOqnB,EAAOzY,GAAGoZ,IAErB,OAAOJ,EACA5nB,GAAM+nB,EAAatf,EAAMkf,EAAM,GAAIA,EAAME,EAAc,GAAI7nB,IAC5D+nB,CACV,CCvFA,SAASE,GAAcC,GACnB,MAAMvX,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQwX,GACxB,MAAMzf,EAAMiI,EAAOA,EAAOpK,OAAS,GACnC,IAAK,IAAIqI,EAAI,EAAGA,GAAKuZ,EAAWvZ,IAAK,CACjC,MAAMwZ,EAAiBtE,GAAS,EAAGqE,EAAWvZ,GAC9C+B,EAAOyU,KAAKvQ,GAAInM,EAAK,EAAG0f,GAC5B,CACJ,CDLIC,CAAW1X,EAAQuX,EAAI3hB,OAAS,GACzBoK,CACX,CEIA,SAAS2X,GAAS1lB,GAA4E,IAA3E,SAAE2lB,EAAW,IAAKD,UAAWE,EAAc,MAAEC,EAAK,KAAE9I,EAAO,aAAc/c,EAKxF,MAAM8lB,ECfa/I,IACZ1f,MAAMC,QAAQyf,IAA4B,kBAAZA,EAAK,GDclBgJ,CAAchJ,GAChCA,EAAKS,IAAI2B,IACTA,GAA2BpC,GAK3B/R,EAAQ,CACVgb,MAAM,EACNnjB,MAAO+iB,EAAe,IAKpBK,EE7BV,SAA8BlY,EAAQ4X,GAClC,OAAO5X,EAAOyP,IAAK0I,GAAMA,EAAIP,EACjC,CF2B0BQ,CAGtBN,GAASA,EAAMliB,SAAWiiB,EAAejiB,OACnCkiB,EACAR,GAAcO,GAAiBD,GAC/BS,EAAoBtB,GAAYmB,EAAeL,EAAgB,CACjE7I,KAAM1f,MAAMC,QAAQwoB,GACdA,GA9BS7V,EA+BK2V,EA/BGrJ,EA+BauJ,EA9BjC7V,EAAOuN,IAAI,IAAMjB,GAAUW,IAAWmJ,OAAO,EAAGpW,EAAOtM,OAAS,MAD3E,IAAuBsM,EAAQsM,EAiC3B,MAAO,CACH+J,mBAAoBX,EACpBhK,KAAO+B,IACH1S,EAAMnI,MAAQujB,EAAkB1I,GAChC1S,EAAMgb,KAAOtI,GAAKiI,EACX3a,GAGnB,CG1CA,SAASub,GAAkBvK,EAAUwK,GACjC,OAAOA,EAAgBxK,GAAY,IAAOwK,GAAiB,CAC/D,CCLA,SAASC,GAAsBC,EAAchJ,EAAG/b,GAC5C,MAAMglB,EAAQ3gB,KAAKD,IAAI2X,EAFI,EAEwB,GACnD,OAAO6I,GAAkB5kB,EAAU+kB,EAAaC,GAAQjJ,EAAIiJ,EAChE,CCFA,MAAMC,GAAU,KAKhB,SAASC,GAAU7mB,GAA6D,IACxE8mB,EACAC,GAFY,SAAEpB,EAAW,IAAG,OAAEqB,EAAS,IAAI,SAAEhL,EAAW,EAAC,KAAEiL,EAAO,GAAIjnB,GAG1EokB,EAAAA,GAAAA,GAAQuB,GAAY1J,GANJ,IAMwC,8CACxD,IAAIiL,EAAe,EAAIF,EAIvBE,EAAerhB,EAVA,IACA,EAS8BqhB,GAC7CvB,EAAW9f,EAbK,IACA,GAY2BsW,GAAsBwJ,IAC7DuB,EAAe,GAIfJ,EAAYK,IACR,MAAMC,EAAmBD,EAAeD,EAClCG,EAAQD,EAAmBzB,EAC3B5Q,EAAIqS,EAAmBpL,EACvBhH,EAAIsS,GAAgBH,EAAcD,GAClCtK,EAAI5W,KAAKuhB,KAAKF,GACpB,OAAOT,GAAW7R,EAAIC,EAAK4H,GAE/BmK,EAAcI,IACV,MACME,EADmBF,EAAeD,EACPvB,EAC3B9I,EAAIwK,EAAQrL,EAAWA,EACvBrI,EAAI3N,KAAKkZ,IAAIgI,EAAc,GAAKlhB,KAAKkZ,IAAIiI,EAAc,GAAKxB,EAC5D6B,EAAIxhB,KAAKuhB,KAAKF,GACd5G,EAAI6G,GAAgBthB,KAAKkZ,IAAIiI,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBP,GAAU,GAAK,EAAI,KACzC/J,EAAIlJ,GAAK6T,GAAM/G,KAOtCqG,EAAYK,GACEnhB,KAAKuhB,KAAKJ,EAAexB,KACxBwB,EAAenL,GAAY2J,EAAW,GAC1C,KAEXoB,EAAcI,GACAnhB,KAAKuhB,KAAKJ,EAAexB,IACIA,EAAWA,GAAvC3J,EAAWmL,KAI9B,MACMA,EAmBV,SAAyBL,EAAUC,EAAYU,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIzb,EAAI,EAAGA,EAAI2b,GAAgB3b,IAChC0b,GAAkBZ,EAASY,GAAUX,EAAWW,GAEpD,OAAOA,CACX,CAzByBE,CAAgBd,EAAUC,EAD1B,EAAIpB,GAGzB,GADAA,EAAW1J,GAAsB0J,GAC7BrC,MAAM6D,GACN,MAAO,CACHU,UAAW,IACXC,QAAS,GACTnC,YAGH,CACD,MAAMkC,EAAY7hB,KAAKkZ,IAAIiI,EAAc,GAAKF,EAC9C,MAAO,CACHY,YACAC,QAAwB,EAAfZ,EAAmBlhB,KAAKub,KAAK0F,EAAOY,GAC7ClC,WAER,CACJ,CACA,MAAMgC,GAAiB,GAQvB,SAASL,GAAgBH,EAAcD,GACnC,OAAOC,EAAenhB,KAAKub,KAAK,EAAI2F,EAAeA,EACvD,C,+CClFMa,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa/c,EAASmE,GAC3B,OAAOA,EAAKvR,KAAM2B,QAAyBnB,IAAjB4M,EAAQzL,GACtC,CAuBA,SAASyoB,GAAMloB,GAAkD,IAAjD,UAAE0lB,EAAS,UAAEyC,EAAS,UAAEC,GAAuBpoB,EAATkL,GAAOyD,EAAAA,GAAAA,GAAA3O,EAAA4O,IACzD,MAAMd,EAAS4X,EAAU,GACnBrZ,EAASqZ,EAAUA,EAAU/hB,OAAS,GAKtCqH,EAAQ,CAAEgb,MAAM,EAAOnjB,MAAOiL,IAC9B,UAAE+Z,EAAS,QAAEC,EAAO,KAAEb,EAAI,SAAEtB,EAAQ,SAAE3J,EAAQ,uBAAEqM,GA9B1D,SAA0Bnd,GACtB,IAAIod,GAAa/nB,EAAAA,EAAAA,GAAA,CACbyb,SAAU,EACV6L,UAAW,IACXC,QAAS,GACTb,KAAM,EACNoB,wBAAwB,GACrBnd,GAGP,IAAK+c,GAAa/c,EAAS8c,KACvBC,GAAa/c,EAAS6c,IAAe,CACrC,MAAMQ,EAAU1B,GAAW3b,GAC3Bod,GAAa/nB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN+nB,GACAC,GAAO,IACVtB,KAAM,IAEVqB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,EAAgBjoB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC7F2K,GAAO,IACV8Q,UAAWG,GAAsBjR,EAAQ8Q,UAAY,MAEnDyM,EAAkBzM,GAAY,EAC9BkL,EAAeY,GAAW,EAAI9hB,KAAKub,KAAKsG,EAAYZ,IACpDyB,EAAerc,EAASyB,EACxB6a,EAAsBxM,GAAsBnW,KAAKub,KAAKsG,EAAYZ,IAQlE2B,EAAkB5iB,KAAKwY,IAAIkK,GAAgB,EAGjD,IAAIG,EACJ,GAHAT,IAAcA,EAAYQ,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhD1B,EAAe,EAAG,CAClB,MAAM4B,EAAcxB,GAAgBqB,EAAqBzB,GAEzD2B,EAAiBnL,IACb,MAAMoJ,EAAW9gB,KAAKuhB,KAAKL,EAAeyB,EAAsBjL,GAChE,OAAQrR,EACJya,IACO2B,EACCvB,EAAeyB,EAAsBD,GACrCI,EACA9iB,KAAK4Y,IAAIkK,EAAcpL,GACvBgL,EAAe1iB,KAAK+iB,IAAID,EAAcpL,IAE1D,MACK,GAAqB,IAAjBwJ,EAEL2B,EAAiBnL,GAAMrR,EACnBrG,KAAKuhB,KAAKoB,EAAsBjL,IAC3BgL,GACID,EAAkBE,EAAsBD,GAAgBhL,OAEpE,CAED,MAAMsL,EAAoBL,EAAsB3iB,KAAKub,KAAK2F,EAAeA,EAAe,GACxF2B,EAAiBnL,IACb,MAAMoJ,EAAW9gB,KAAKuhB,KAAKL,EAAeyB,EAAsBjL,GAE1DuL,EAAWjjB,KAAKF,IAAIkjB,EAAoBtL,EAAG,KACjD,OAAQrR,EACHya,IACK2B,EACEvB,EAAeyB,EAAsBD,GACrC1iB,KAAKkjB,KAAKD,GACVD,EACIN,EACA1iB,KAAKmjB,KAAKF,IAClBD,EAEhB,CACA,MAAO,CACH1C,mBAAoB+B,GAAyB1C,GAAmB,KAChEhK,KAAO+B,IACH,MAAM/b,EAAUknB,EAAcnL,GAC9B,GAAK2K,EAqBDrd,EAAMgb,KAAOtI,GAAKiI,MArBO,CACzB,IAAI/T,EAAkB6W,EACZ,IAAN/K,IAOI9L,EADAsV,EAAe,EACGT,GAAsBoC,EAAenL,EAAG/b,GAGxC,GAG1B,MAAMynB,EAA2BpjB,KAAKwY,IAAI5M,IAAoBwW,EACxDiB,EAA+BrjB,KAAKwY,IAAInS,EAAS1K,IAAYwmB,EACnEnd,EAAMgb,KACFoD,GAA4BC,CACpC,CAKA,OADAre,EAAMnI,MAAQmI,EAAMgb,KAAO3Z,EAAS1K,EAC7BqJ,GAGnB,CC7HA,SAASse,GAAOtpB,GAAiK,IAAhK,UAAE0lB,EAAS,SAAE1J,EAAW,EAAG,MAAEuN,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAE7jB,EAAG,IAAEC,EAAG,UAAEoiB,EAAY,GAAG,UAAEC,GAAYpoB,EAC3K,MAAM8N,EAAS4X,EAAU,GACnB1a,EAAQ,CACVgb,MAAM,EACNnjB,MAAOiL,GAGL8b,EAAmBxsB,QACTkB,IAARwH,EACOC,OACCzH,IAARyH,GAEGC,KAAKwY,IAAI1Y,EAAM1I,GAAK4I,KAAKwY,IAAIzY,EAAM3I,GAD/B0I,EAC0CC,EAEzD,IAAI8jB,EAAYN,EAAQvN,EACxB,MAAM8N,EAAQhc,EAAS+b,EACjBxd,OAA0B/N,IAAjBqrB,EAA6BG,EAAQH,EAAaG,GAK7Dzd,IAAWyd,IACXD,EAAYxd,EAASyB,GACzB,MAAMic,EAAarM,IAAOmM,EAAY7jB,KAAKuhB,KAAK7J,EAAI8L,GAC9CQ,EAActM,GAAMrR,EAAS0d,EAAUrM,GACvCuM,EAAiBvM,IACnB,MAAM2J,EAAQ0C,EAAUrM,GAClBwM,EAASF,EAAWtM,GAC1B1S,EAAMgb,KAAOhgB,KAAKwY,IAAI6I,IAAUc,EAChCnd,EAAMnI,MAAQmI,EAAMgb,KAAO3Z,EAAS6d,GAQxC,IAAIC,EACAC,EACJ,MAAMC,EAAsB3M,IAjCLtgB,SAkCA4N,EAAMnI,WAlCSvE,IAARwH,GAAqB1I,EAAI0I,QAAiBxH,IAARyH,GAAqB3I,EAAI2I,KAoCrFokB,EAAsBzM,EACtB0M,EAAWlC,GAAO,CACdxC,UAAW,CAAC1a,EAAMnI,MAAO+mB,EAAgB5e,EAAMnI,QAC/CmZ,SAAUyK,GAAsBuD,EAAYtM,EAAG1S,EAAMnI,OACrDilB,QAAS2B,EACT5B,UAAW6B,EACXvB,YACAC,gBAIR,OADAiC,EAAmB,GACZ,CACH/D,mBAAoB,KACpB3K,KAAO+B,IAOH,IAAI4M,GAAkB,EAUtB,OATKF,QAAoC9rB,IAAxB6rB,IACbG,GAAkB,EAClBL,EAAcvM,GACd2M,EAAmB3M,SAMKpf,IAAxB6rB,GAAqCzM,EAAIyM,EAClCC,EAASzO,KAAK+B,EAAIyM,KAGxBG,GAAmBL,EAAcvM,GAC3B1S,IAIvB,CClFA,MAAMuf,GAAmBzoB,IACrB,MAAM0oB,EAAgBxqB,IAAA,IAAC,UAAEyqB,GAAWzqB,EAAA,OAAK8B,EAAO2oB,IAChD,MAAO,CACHjtB,MAAOA,IAAM+V,GAAAA,GAAMzR,OAAO0oB,GAAe,GACzCE,KAAMA,KAAMC,EAAAA,GAAAA,IAAYH,GAKxBI,IAAKA,IAAMC,GAAAA,GAAUC,aAAeD,GAAAA,GAAUJ,UAAYM,YAAYH,QCN9E,SAASI,GAAsBC,GAC3B,IAAItF,EAAW,EAEf,IAAI3a,EAAQigB,EAAUtP,KAAKgK,GAC3B,MAAQ3a,EAAMgb,MAAQL,EALG,KAMrBA,GAHa,GAIb3a,EAAQigB,EAAUtP,KAAKgK,GAE3B,OAAOA,GATkB,IASiBuF,IAAWvF,CACzD,C,wICJMwF,GAAQ,CACVC,MAAO9B,GACPA,QAAO,GACP+B,MAAO3F,GACPA,UAAWA,GACXwC,OAAMA,IASV,SAASoD,GAAYtrB,GAA2M,IAGxNurB,EACAC,GAJc,SAAEC,GAAW,EAAI,MAAEC,EAAQ,EAAC,OAAEC,EAASpB,GAAiB7E,UAAWkG,EAAW,KAAEjmB,EAAO,YAAW,OAAEkmB,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,OAAM,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,GAAsBnsB,EAATkL,GAAOyD,EAAAA,GAAAA,GAAA3O,EAAA4O,IACpNwd,EAAQ,EACRC,GAAa,EAOjB,MAAMC,EAAwBA,KAC1Bd,EAAyB,IAAIe,QAASC,IAClCjB,EAAyBiB,KAKjC,IAAIC,EADJH,IAEA,MAAMI,EAAmBvB,GAAMxlB,IAAS+f,GAKxC,IAAIiH,EACAD,IAAqBhH,IACK,kBAAnBkG,EAAY,KAInBe,EAAwB7H,GAAY,CAAC,EAAG,KAAM8G,EAAa,CACvD/lB,OAAO,IAEX+lB,EAAc,CAAC,EAAG,MAEtB,MAAMX,EAAYyB,GAAgBnsB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI2K,GAAO,IAAEwa,UAAWkG,KAC5D,IAAIgB,EACe,WAAfb,IACAa,EAAoBF,GAAgBnsB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B2K,GAAO,IACVwa,UAAW,IAAIkG,GAAa1G,UAC5BlJ,WAAY9Q,EAAQ8Q,UAAY,OAGxC,IAAI6Q,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC/B,EAAU3E,oBAA+BuF,IACzCZ,EAAU3E,mBAAqB0E,GAAsBC,IAEzD,MAAM,mBAAE3E,GAAuB2E,EAC/B,IAAIgC,EAAmB/B,IACnBgC,EAAgBhC,IACO,OAAvB5E,IACA2G,EAAmB3G,EAAqBwF,EACxCoB,EAAgBD,GAAoBpB,EAAS,GAAKC,GAEtD,IAAIqB,EAAc,EAClB,MAAMC,EAAQ3C,IACV,GAAkB,OAAdsC,EACA,OAOAX,EAAQ,IACRW,EAAY/mB,KAAKF,IAAIinB,EAAWtC,IAChC2B,EAAQ,IACRW,EAAY/mB,KAAKF,IAAI2kB,EAAYyC,EAAgBd,EAAOW,IAExDI,EADa,OAAbL,EACcA,EAMA9mB,KAAKQ,MAAMikB,EAAYsC,GAAaX,EAGtD,MAAMiB,EAAmBF,EAAczB,GAASU,GAAS,EAAI,GAAK,GAC5DkB,EAAiBlB,GAAS,EAAIiB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAcnnB,KAAKD,IAAIsnB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBvC,EACrB,GAAIY,EAAQ,CAMR,MAAM3K,EAAWlb,KAAKF,IAAIqnB,EAAaD,GAAiBD,EAKxD,IAAIQ,EAAmBznB,KAAK0nB,MAAMxM,GAK9ByM,EAAoBzM,EAAW,GAK9ByM,GAAqBzM,GAAY,IAClCyM,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBznB,KAAKF,IAAI2nB,EAAkB5B,EAAS,GAIhC5tB,QAAQwvB,EAAmB,KAE3B,YAAf1B,GACA4B,EAAoB,EAAIA,EACpB7B,IACA6B,GAAqB7B,EAAcmB,IAGnB,WAAflB,IACLyB,EAAiBZ,IAGzBW,EAAU1nB,EAAM,EAAG,EAAG8nB,GAAqBV,CAC/C,CAMA,MAAMjiB,EAAQsiB,EACR,CAAEtH,MAAM,EAAOnjB,MAAO+oB,EAAY,IAClC4B,EAAe7R,KAAK4R,GACtBZ,IACA3hB,EAAMnI,MAAQ8pB,EAAsB3hB,EAAMnI,QAE9C,IAAI,KAAEmjB,GAAShb,EACVsiB,GAAyC,OAAvBhH,IACnBN,EAAOoG,GAAS,EAAIe,GAAeD,EAAgBC,GAAe,GAEtE,MAAMS,EAAmC,OAAbd,IACT,aAAdD,GAA2C,YAAdA,GAA2B7G,GAO7D,OANImG,GACAA,EAASnhB,EAAMnI,OAEf+qB,GACAC,IAEG7iB,GAEL8iB,EAAsBA,KACxBrB,GAAmBA,EAAgB/B,OACnC+B,OAAkBnuB,GAEhByvB,EAASA,KACXlB,EAAY,OACZiB,IACAvC,IACAe,IACAS,EAAYC,EAAa,MAEvBa,EAASA,KACXhB,EAAY,WACZX,GAAcA,IACd4B,IACAvC,KAEEyC,EAAOA,KACT,GAAI3B,EACA,OACCI,IACDA,EAAkBd,EAAOyB,IAC7B,MAAMxC,EAAM6B,EAAgB7B,MAC5BoB,GAAUA,IACO,OAAbc,EACAC,EAAYnC,EAAMkC,EAEZC,GAA2B,aAAdF,IACnBE,EAAYnC,GAEE,aAAdiC,GACAP,IAEJU,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZJ,EAAgBjvB,SAEhBiuB,GACAuC,IAEJ,MAAMC,EAAW,CACbC,KAAIA,CAAC1B,EAAS2B,IACH3C,EAAuB0C,KAAK1B,EAAS2B,GAEhD,QAAIC,GACA,OAAOjS,GAAsBgR,EACjC,EACA,QAAIiB,CAAKC,GACLA,EAAUpS,GAAsBoS,GAChClB,EAAckB,EACG,OAAbvB,GAAsBL,GAA6B,IAAVL,EAIzCW,EAAYN,EAAgB7B,MAAQyD,EAAUjC,EAH9CU,EAAWuB,CAKnB,EACA,YAAI1I,GACA,MAAMA,EAA4C,OAAjCsF,EAAU3E,mBACrB0E,GAAsBC,GACtBA,EAAU3E,mBAChB,OAAOnK,GAAsBwJ,EACjC,EACA,SAAIyG,GACA,OAAOA,CACX,EACA,SAAIA,CAAMkC,GACFA,IAAalC,GAAUK,IAE3BL,EAAQkC,EACRL,EAASG,KAAOjS,GAAsBgR,GAC1C,EACA,SAAIniB,GACA,OAAO6hB,CACX,EACAmB,OACAO,MAAOA,KACH1B,EAAY,SACZC,EAAWK,GAEfzC,KAAMA,KACF2B,GAAa,EACK,SAAdQ,IAEJA,EAAY,OACZZ,GAAUA,IACV8B,MAEJA,OAAQA,KACe,OAAff,GACAI,EAAKJ,GACTe,KAEJS,SAAUA,KACN3B,EAAY,YAEhB4B,OAASlB,IACLR,EAAY,EACLK,EAAKG,KAGpB,OAAOU,CACX,C,mCClSMS,GCTN,SAAclX,GACV,IAAIkQ,EACJ,MAAO,UACYppB,IAAXopB,IACAA,EAASlQ,KACNkQ,EAEf,CDEsBiH,CAAK,IAAM5xB,OAAOE,eAAeC,KAAK0xB,QAAQ5xB,UAAW,YAIzE6xB,GAAoB,IAAIlqB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAASmqB,GAA2BjsB,EAAOksB,EAAS/uB,GAAwC,IAAtC,SAAEmsB,EAAQ,WAAED,GAAwBlsB,EAATkL,GAAOyD,EAAAA,GAAAA,GAAA3O,EAAA4O,IAOpF,KAN+B8f,MAC3BG,GAAkB5qB,IAAI8qB,KACrB7jB,EAAQ4gB,aACc,WAAvB5gB,EAAQ6gB,YACY,IAApB7gB,EAAQ4c,SACS,YAAjB5c,EAAQvF,MAER,OAAO,EAIX,IACI4lB,EACAC,EAFAa,GAAa,EAQb2C,GAAgB,EAKpB,MAAM1C,EAAwBA,KAC1Bd,EAAyB,IAAIe,QAASC,IAClCjB,EAAyBiB,KAIjCF,IACA,IAAI,UAAE5G,EAAS,SAAEC,EAAW,IAAG,KAAE5I,EAAI,MAAE8I,GAAU3a,EAIjD,GAvCkC+jB,EAACF,EAAW7jB,IAA6B,WAAjBA,EAAQvF,MACpD,oBAAdopB,IACCvS,GAAuBtR,EAAQ6R,MAqC5BkS,CAA8BF,EAAW7jB,GAAU,CACnD,MAAMgkB,EAAkB5D,IAAY/qB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B2K,GAAO,IACV2gB,OAAQ,EACRH,MAAO,KAEX,IAAI1gB,EAAQ,CAAEgb,MAAM,EAAOnjB,MAAO6iB,EAAU,IAC5C,MAAMyJ,EAAwB,GAK9B,IAAIzR,EAAI,EACR,MAAQ1S,EAAMgb,MAAQtI,EArDV,KAsDR1S,EAAQkkB,EAAgBT,OAAO/Q,GAC/ByR,EAAsB3M,KAAKxX,EAAMnI,OACjC6a,GA7DQ,GA+DZmI,OAAQvnB,EACRonB,EAAYyJ,EACZxJ,EAAWjI,EAjEC,GAkEZX,EAAO,QACX,CACA,MAAMhe,EE3FV,SAAsByR,EAASue,EAAWrJ,GAAwF,IAA7E,MAAEgG,EAAQ,EAAC,SAAE/F,EAAQ,OAAEkG,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAEhP,EAAI,MAAE8I,GAAQniB,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3H,MAAM0rB,EAAkB,CAAE,CAACL,GAAYrJ,GACnCG,IACAuJ,EAAgBrhB,OAAS8X,GAC7B,MAAMtJ,EAASgB,GAAwBR,GAMvC,OAFI1f,MAAMC,QAAQif,KACd6S,EAAgB7S,OAASA,GACtB/L,EAAQ3S,QAAQuxB,EAAiB,CACpC1D,QACA/F,WACApJ,OAASlf,MAAMC,QAAQif,GAAmB,SAATA,EACjC8S,KAAM,OACNC,WAAYzD,EAAS,EACrB0D,UAA0B,YAAfxD,EAA2B,YAAc,UAE5D,CFyEsByD,CAAa3sB,EAAM4sB,MAAM9tB,QAASotB,EAAWrJ,GAASnlB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjE2K,GAAO,IACVya,WASA5I,KAAMA,EACN8I,WAEE6J,EAAkBA,KACpBV,GAAgB,EAChBjwB,EAAUgvB,UAER4B,EAAaA,KACfX,GAAgB,EAChBzb,GAAAA,GAAMzR,OAAO4tB,GACbnE,IACAe,KAUJvtB,EAAU6wB,SAAW,KACbZ,IAEJnsB,EAAMqB,IGhId,SAA0BwhB,EAAS1lB,GAAmC,IAAjC,OAAE6rB,EAAM,WAAEE,EAAa,QAAQ/rB,EAIhE,OAAO0lB,EAHOmG,GAAyB,SAAfE,GAAyBF,EAAS,IAAM,EAC1D,EACAnG,EAAU/hB,OAAS,EAE7B,CH2HkBksB,CAAiBnK,EAAWxa,IACtCghB,GAAcA,IACdyD,MAoEJ,MA/DiB,CACbzB,KAAIA,CAAC1B,EAAS2B,IACH3C,EAAuB0C,KAAK1B,EAAS2B,GAEhD2B,eAAeC,IACXhxB,EAAUgxB,SAAWA,EACrBhxB,EAAU6wB,SAAW,KACdjW,GAAAA,GAEX,QAAIyU,GACA,OAAOjS,GAAsBpd,EAAUouB,aAAe,EAC1D,EACA,QAAIiB,CAAKC,GACLtvB,EAAUouB,YAAclR,GAAsBoS,EAClD,EACA,SAAIjC,GACA,OAAOrtB,EAAUixB,YACrB,EACA,SAAI5D,CAAMkC,GACNvvB,EAAUixB,aAAe1B,CAC7B,EACA,YAAI3I,GACA,OAAOxJ,GAAsBwJ,EACjC,EACAqI,KAAMA,KACE3B,IAEJttB,EAAUivB,QAIVrD,EAAAA,GAAAA,IAAY+E,KAEhBnB,MAAOA,IAAMxvB,EAAUwvB,QACvB7D,KAAMA,KAEF,GADA2B,GAAa,EACe,SAAxBttB,EAAU8tB,UACV,OASJ,MAAM,YAAEM,GAAgBpuB,EACxB,GAAIouB,EAAa,CACb,MAAM+B,EAAkB5D,IAAY/qB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B2K,GAAO,IACVugB,UAAU,KAEd5oB,EAAMotB,gBAAgBf,EAAgBT,OAAOtB,EAlKzC,IAkKoEtqB,MAAOqsB,EAAgBT,OAAOtB,GAAatqB,MAlK/G,GAmKR,CACA8sB,KAEJnB,SAAUA,KACFQ,GAEJjwB,EAAU8uB,UAEdE,OAAQ4B,EAGhB,CIrMA,MAAMO,GAAoB,CACtBvqB,KAAM,SACNkiB,UAAW,IACXC,QAAS,GACTM,UAAW,IAQT+H,GAAsB,CACxBxqB,KAAM,YACNggB,SAAU,IAMR5I,GAAO,CACTpX,KAAM,YACNoX,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB4I,SAAU,IAERyK,GAAuBA,CAACC,EAAQrwB,KAAoB,IAAlB,UAAE0lB,GAAW1lB,EACjD,OAAI0lB,EAAU/hB,OAAS,EACZwsB,GAEFzrB,EAAeT,IAAIosB,GACjBA,EAASxrB,WAAW,SAxBG,CAClCc,KAAM,SACNkiB,UAAW,IACXC,QAAoB,IAsBapC,EAAU,GAtBnB,EAAI1f,KAAKub,KAAK,KAAO,GAC7C6G,UAAW,IAsBD8H,GAEHnT,ICzBLuT,GAAeA,CAAC7wB,EAAKoD,IAEX,WAARpD,MAKiB,kBAAVoD,IAAsBxF,MAAMC,QAAQuF,OAE1B,kBAAVA,IACNugB,GAAQ7e,KAAK1B,IAAoB,MAAVA,GACvBA,EAAMgC,WAAW,UChBpB0rB,GAAc,IAAI5rB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS6rB,GAAmBpzB,GACxB,MAAOW,EAAM8E,GAASzF,EAAEqzB,MAAM,GAAI,GAAGzpB,MAAM,KAC3C,GAAa,gBAATjJ,EACA,OAAOX,EACX,MAAO6I,GAAUpD,EAAMkd,MAAMtZ,IAAe,GAC5C,IAAKR,EACD,OAAO7I,EACX,MAAM0J,EAAOjE,EAAMnG,QAAQuJ,EAAQ,IACnC,IAAIyqB,EAAeH,GAAYtsB,IAAIlG,GAAQ,EAAI,EAG/C,OAFIkI,IAAWpD,IACX6tB,GAAgB,KACb3yB,EAAO,IAAM2yB,EAAe5pB,EAAO,GAC9C,CACA,MAAM6pB,GAAgB,oBAChBC,IAAMrwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL6iB,IAAO,IACVG,kBAAoBnmB,IAChB,MAAMyzB,EAAYzzB,EAAE2iB,MAAM4Q,IAC1B,OAAOE,EAAYA,EAAUrT,IAAIgT,IAAoB3xB,KAAK,KAAOzB,KClBnE0zB,IAAiBvwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBkH,IAAgB,IAEnBsZ,MAAK,GACLgQ,gBAAiBhQ,GACjBiQ,aAAcjQ,GACdsO,KAAMtO,GACNkQ,OAAQlQ,GAERmQ,YAAanQ,GACboQ,eAAgBpQ,GAChBqQ,iBAAkBrQ,GAClBsQ,kBAAmBtQ,GACnBuQ,gBAAiBvQ,GACjB6P,OAAM,GACNW,aAAcX,KAKZY,GAAuB/xB,GAAQqxB,GAAkBrxB,GCvBvD,SAAS8jB,GAAkB9jB,EAAKoD,GAC5B,IAAI4uB,EAAmBD,GAAoB/xB,GAI3C,OAHIgyB,IAAqBb,KACrBa,EAAmBrO,IAEhBqO,EAAiBlO,kBAClBkO,EAAiBlO,kBAAkB1gB,QACnCvE,CACV,CCTA,MAAMozB,GAAqBt0B,GAAM,aAAamH,KAAKnH,GCDnD,SAASu0B,GAAO9uB,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiB6uB,GAAkB7uB,QAD7D,CAGT,C,oICDA,SAAS+uB,GAAmBxe,EAAY3T,GACpC,OAAO2T,EAAW3T,IAAQ2T,EAAoB,SAAKA,CACvD,CCVA,MAAMye,IACc,ECWdC,GAAqB,SAAC/C,EAAWlsB,EAAOwJ,GAA4B,IAApB+G,EAAU1P,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAQwoB,IACJ,MAAM6F,EAAkBH,GAAmBxe,EAAY2b,IAAc,CAAC,EAMhErD,EAAQqG,EAAgBrG,OAAStY,EAAWsY,OAAS,EAK3D,IAAI,QAAE6B,EAAU,GAAMna,EACtBma,GAAoBtR,GAAsByP,GAC1C,MAAMhG,ECvBd,SAAsB7iB,EAAOksB,EAAW1iB,EAAQ+G,GAC5C,MAAM4e,EAAqB1B,GAAavB,EAAW1iB,GACnD,IAAIqZ,EAEAA,EADAroB,MAAMC,QAAQ+O,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAM4lB,OAAoC3zB,IAApB8U,EAAW4N,KAAqB5N,EAAW4N,KAAOne,EAAMkB,MAC9E,IAAImuB,EACJ,MAAMC,EAAsB,GAC5B,IAAK,IAAInmB,EAAI,EAAGA,EAAI0Z,EAAU/hB,OAAQqI,IAIb,OAAjB0Z,EAAU1Z,KACV0Z,EAAU1Z,GAAW,IAANA,EAAUimB,EAAgBvM,EAAU1Z,EAAI,IAEvD2lB,GAAOjM,EAAU1Z,KACjBmmB,EAAoB3P,KAAKxW,GAGD,kBAAjB0Z,EAAU1Z,IACA,SAAjB0Z,EAAU1Z,IACO,MAAjB0Z,EAAU1Z,KACVkmB,EAA0BxM,EAAU1Z,IAG5C,GAAIgmB,GACAG,EAAoBxuB,QACpBuuB,EACA,IAAK,IAAIlmB,EAAI,EAAGA,EAAImmB,EAAoBxuB,OAAQqI,IAE5C0Z,EADcyM,EAAoBnmB,IACfuX,GAAkBwL,EAAWmD,GAGxD,OAAOxM,CACX,CDf0B0M,CAAavvB,EAAOksB,EAAW1iB,EAAQ0lB,GAMnDM,EAAiB3M,EAAU,GAC3B4M,EAAiB5M,EAAUA,EAAU/hB,OAAS,GAC9C4uB,EAAqBjC,GAAavB,EAAWsD,GAC7CL,EAAqB1B,GAAavB,EAAWuD,IACnDlO,EAAAA,GAAAA,GAAQmO,IAAuBP,EAAoB,6BAAF/qB,OAA+B8nB,EAAS,WAAA9nB,OAAUorB,EAAc,UAAAprB,OAASqrB,EAAc,OAAArrB,OAAMorB,EAAc,+DAAAprB,OAA8DorB,EAAc,8BAAAprB,OAA6BqrB,EAAc,+BACnR,IAAIpnB,GAAO3K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACPmlB,YACA1J,SAAUnZ,EAAMkC,cAChBgY,KAAM,WACHgV,GAAe,IAClBrG,OAAQ6B,EACRpB,SAAW/uB,IACPyF,EAAMqB,IAAI9G,GACV20B,EAAgB5F,UAAY4F,EAAgB5F,SAAS/uB,IAEzD8uB,WAAYA,KACRA,IACA6F,EAAgB7F,YAAc6F,EAAgB7F,gBAwBtD,GFrER,SAA4BlsB,GAA2I,IAA1I,KAAEwyB,EAAM9G,MAAO+G,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE/G,EAAM,WAAEE,EAAU,YAAED,EAAW,KAAE9K,EAAI,QAAEuM,GAAwBvtB,EAAZoT,GAAUzE,EAAAA,GAAAA,GAAA3O,EAAA4O,IAC/J,QAAS7R,OAAOsS,KAAK+D,GAAYzP,MACrC,CEkDakvB,CAAoBd,KACrB7mB,GAAO3K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA2K,GACAklB,GAAqBrB,EAAW7jB,KAQvCA,EAAQya,WACRza,EAAQya,SAAW1J,GAAsB/Q,EAAQya,WAEjDza,EAAQ4gB,cACR5gB,EAAQ4gB,YAAc7P,GAAsB/Q,EAAQ4gB,eAEnDyG,IACAP,GACD3V,KACyB,IAAzB0V,EAAgBpsB,MAChBksB,GAKA,OEhFZ,SAA+B7xB,GAA8C,IAA7C,UAAE0lB,EAAS,MAAEgG,EAAK,SAAES,EAAQ,WAAED,GAAalsB,EACvE,MAAM8yB,EAAWA,KACb3G,GAAYA,EAASzG,EAAUA,EAAU/hB,OAAS,IAClDuoB,GAAcA,IAQP,CACHkC,KAAM,EACNhC,MAAO,EACPzG,SAAU,EACVqI,KAAOrU,GAAAA,EACP4U,MAAQ5U,GAAAA,EACR+Q,KAAO/Q,GAAAA,EACPuU,KAAO1B,IACHA,IACOD,QAAQC,WAEnBuB,OAASpU,GAAAA,EACT6U,SAAW7U,GAAAA,IAGnB,OAAO+R,EACDJ,GAAa,CACX5F,UAAW,CAAC,EAAG,GACfC,SAAU,EACV+F,QACAQ,WAAY4G,IAEdA,GACV,CF8CmBC,CAAuB1W,IAA6B9b,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChD2K,GAAO,IAAEwgB,MAAO,IACrBxgB,GAKV,IAMCkI,EAAW4f,WACRnwB,EAAM4sB,OACN5sB,EAAM4sB,MAAM9tB,mBAAmBsxB,cAK9BpwB,EAAM4sB,MAAM/Y,WAAWyV,SAAU,CAClC,MAAM+G,EAAuBpE,GAA2BjsB,EAAOksB,EAAW7jB,GAC1E,GAAIgoB,EACA,OAAOA,CACf,CAIA,OAAO5H,GAAapgB,GAE5B,EG/GA,SAASioB,GAAwBtwB,GAC7B,OAAO5E,QAAQ6G,EAAcjC,IAAUA,EAAMuwB,IACjD,CCDA,MAAMC,GAAqBj2B,GAAM,iBAAiBmH,KAAKnH,GCHvD,SAASk2B,GAAchO,EAAKiO,IACG,IAAvBjO,EAAIhhB,QAAQivB,IACZjO,EAAI9C,KAAK+Q,EACjB,CACA,SAASC,GAAWlO,EAAKiO,GACrB,MAAME,EAAQnO,EAAIhhB,QAAQivB,GACtBE,GAAS,GACTnO,EAAIe,OAAOoN,EAAO,EAC1B,CCNA,MAAMC,GACFzd,WAAAA,GACIE,KAAKwd,cAAgB,EACzB,CACAP,GAAAA,CAAIpf,GAEA,OADAsf,GAAcnd,KAAKwd,cAAe3f,GAC3B,IAAMwf,GAAWrd,KAAKwd,cAAe3f,EAChD,CACA4f,MAAAA,CAAO7e,EAAGC,EAAG4H,GACT,MAAMiX,EAAmB1d,KAAKwd,cAAchwB,OAC5C,GAAKkwB,EAEL,GAAyB,IAArBA,EAIA1d,KAAKwd,cAAc,GAAG5e,EAAGC,EAAG4H,QAG5B,IAAK,IAAI5Q,EAAI,EAAGA,EAAI6nB,EAAkB7nB,IAAK,CAKvC,MAAMgI,EAAUmC,KAAKwd,cAAc3nB,GACnCgI,GAAWA,EAAQe,EAAGC,EAAG4H,EAC7B,CAER,CACAkX,OAAAA,GACI,OAAO3d,KAAKwd,cAAchwB,MAC9B,CACAowB,KAAAA,GACI5d,KAAKwd,cAAchwB,OAAS,CAChC,EC/BJ,MAGMqwB,GAAsB,CACxBryB,aAASrD,GAOb,MAAM21B,GASFhe,WAAAA,CAAYie,GAAoB,IAAAC,EAAA,SAAdjpB,EAAOxH,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EApBhBb,MAyBTsT,KAAKie,QAAU,UAMfje,KAAKke,UAAY,EAMjBle,KAAKme,YAAc,EAQnBne,KAAKoe,kBAAmB,EAIxBpe,KAAKqe,OAAS,CAAC,EACfre,KAAKse,gBAAkB,SAACr3B,GAAqB,IAAlB+E,IAAMuB,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,KAAAA,UAAA,GAC7BywB,EAAKvY,KAAOuY,EAAKxyB,QACjBwyB,EAAKxyB,QAAUvE,EAEf,MAAM,MAAEiqB,EAAK,UAAEoD,GAAcI,GAAAA,GACzBsJ,EAAKG,cAAgB7J,IACrB0J,EAAKE,UAAYhN,EACjB8M,EAAKG,YAAc7J,EACnBlX,GAAAA,GAAMmhB,WAAWP,EAAKQ,wBAGtBR,EAAKvY,OAASuY,EAAKxyB,SAAWwyB,EAAKK,OAAOI,QAC1CT,EAAKK,OAAOI,OAAOhB,OAAOO,EAAKxyB,SAG/BwyB,EAAKK,OAAOK,gBACZV,EAAKK,OAAOK,eAAejB,OAAOO,EAAKpvB,eAGvC5C,GAAUgyB,EAAKK,OAAOM,eACtBX,EAAKK,OAAOM,cAAclB,OAAOO,EAAKxyB,QAE9C,EASAwU,KAAKwe,sBAAwB,IAAMphB,GAAAA,GAAMmhB,WAAWve,KAAK4e,eAUzD5e,KAAK4e,cAAgB/0B,IAAmB,IAAlB,UAAEyqB,GAAWzqB,EAC3ByqB,IAActU,KAAKme,cACnBne,KAAKyF,KAAOzF,KAAKxU,QACbwU,KAAKqe,OAAOK,gBACZ1e,KAAKqe,OAAOK,eAAejB,OAAOzd,KAAKpR,iBAInDoR,KAAK6e,aAAc,EACnB7e,KAAKyF,KAAOzF,KAAKxU,QAAUuyB,EAC3B/d,KAAKoe,kBArGI1xB,EAqGuBsT,KAAKxU,SApGjC2hB,MAAMnd,WAAWtD,KAqGrBsT,KAAKsZ,MAAQvkB,EAAQukB,KACzB,CAyCAwF,QAAAA,CAASC,GAIL,OAAO/e,KAAKgf,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGphB,EAAWyD,GACLrB,KAAKqe,OAAOzgB,KACboC,KAAKqe,OAAOzgB,GAAa,IAAI2f,IAEjC,MAAM0B,EAAcjf,KAAKqe,OAAOzgB,GAAWqf,IAAI5b,GAC/C,MAAkB,WAAdzD,EACO,KACHqhB,IAKA7hB,GAAAA,GAAMC,KAAK,KACF2C,KAAKqe,OAAOI,OAAOd,WACpB3d,KAAKuU,UAKd0K,CACX,CACAC,cAAAA,GACI,IAAK,MAAMC,KAAiBnf,KAAKqe,OAC7Bre,KAAKqe,OAAOc,GAAevB,OAEnC,CAMAwB,MAAAA,CAAOC,EAAeC,GAClBtf,KAAKqf,cAAgBA,EACrBrf,KAAKsf,kBAAoBA,CAC7B,CAgBAvxB,GAAAA,CAAI9G,GAAkB,IAAf+E,IAAMuB,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,KAAAA,UAAA,GACJvB,GAAWgU,KAAKqf,cAIjBrf,KAAKqf,cAAcp4B,EAAG+Y,KAAKse,iBAH3Bte,KAAKse,gBAAgBr3B,EAAG+E,EAKhC,CACA8tB,eAAAA,CAAgBrU,EAAMja,EAAS0lB,GAC3BlR,KAAKjS,IAAIvC,GACTwU,KAAKyF,KAAOA,EACZzF,KAAKke,UAAYhN,CACrB,CAKAqO,IAAAA,CAAKt4B,GACD+Y,KAAKse,gBAAgBr3B,GACrB+Y,KAAKyF,KAAOxe,EACZ+Y,KAAKuU,OACDvU,KAAKsf,mBACLtf,KAAKsf,mBACb,CAQA1xB,GAAAA,GAII,OAHIiwB,GAAoBryB,SACpBqyB,GAAoBryB,QAAQ6gB,KAAKrM,MAE9BA,KAAKxU,OAChB,CAIAg0B,WAAAA,GACI,OAAOxf,KAAKyF,IAChB,CAQA7W,WAAAA,GAEI,OAAOoR,KAAKoe,iBAEJhO,GAAkBpgB,WAAWgQ,KAAKxU,SAC9BwE,WAAWgQ,KAAKyF,MAAOzF,KAAKke,WAClC,CACV,CAaA72B,KAAAA,CAAMo4B,GAEF,OADAzf,KAAKuU,OACE,IAAI6B,QAASC,IAChBrW,KAAK6e,aAAc,EACnB7e,KAAKpX,UAAY62B,EAAepJ,GAC5BrW,KAAKqe,OAAOqB,gBACZ1f,KAAKqe,OAAOqB,eAAejC,WAEhC1F,KAAK,KACA/X,KAAKqe,OAAOsB,mBACZ3f,KAAKqe,OAAOsB,kBAAkBlC,SAElCzd,KAAK4f,kBAEb,CAMArL,IAAAA,GACQvU,KAAKpX,YACLoX,KAAKpX,UAAU2rB,OACXvU,KAAKqe,OAAOwB,iBACZ7f,KAAKqe,OAAOwB,gBAAgBpC,UAGpCzd,KAAK4f,gBACT,CAMAE,WAAAA,GACI,QAAS9f,KAAKpX,SAClB,CACAg3B,cAAAA,UACW5f,KAAKpX,SAChB,CAUAm3B,OAAAA,GACI/f,KAAKkf,iBACLlf,KAAKuU,OACDvU,KAAKsf,mBACLtf,KAAKsf,mBAEb,EAEJ,SAASU,GAAYjC,EAAMhpB,GACvB,OAAO,IAAI+oB,GAAYC,EAAMhpB,EACjC,CC3UA,MAAMkrB,GAAiBh5B,GAAOuI,GAASA,EAAKpB,KAAKnH,GCK3Ci5B,GAAsB,CAACpwB,EAAQmB,GAAID,GAASD,EAASI,GAAID,GCLlD,CACT9C,KAAOnH,GAAY,SAANA,EACb8I,MAAQ9I,GAAMA,IDOZk5B,GAA0Bl5B,GAAMi5B,GAAoB3U,KAAK0U,GAAch5B,IEJvEm5B,GAAa,IAAIF,GAAqBtV,GAAOqC,IAI7CoT,GAAiBp5B,GAAMm5B,GAAW7U,KAAK0U,GAAch5B,I,kCCC3D,SAASq5B,GAAev1B,EAAezB,EAAKoD,GACpC3B,EAAcw1B,SAASj3B,GACvByB,EAAcy1B,SAASl3B,GAAKyE,IAAIrB,GAGhC3B,EAAc01B,SAASn3B,EAAK02B,GAAYtzB,GAEhD,CACA,SAASg0B,GAAU31B,EAAewQ,GAC9B,MAAMwB,EAAW4I,GAAe5a,EAAewQ,GAC/C,IAAA1R,EAAyDkT,EAAWhS,EAAc41B,qBAAqB5jB,GAAU,GAAS,CAAC,GAAvH,cAAEC,EAAgB,CAAC,EAAC,WAAEC,EAAa,CAAC,GAAcpT,EAARqM,GAAMsC,EAAAA,GAAAA,GAAA3O,EAAA4O,IACpDvC,GAAM9L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ8L,GAAW8G,GACzB,IAAK,MAAM1T,KAAO4M,EAAQ,CAEtBoqB,GAAev1B,EAAezB,EADhBqS,GAA6BzF,EAAO5M,IAEtD,CACJ,CAuEA,SAASs3B,GAAwBt3B,EAAK2T,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAW3T,IAAQ2T,EAAoB,SAAKA,GAC7C4N,IAC3B,C,wCC3FA,SAASgW,GAAoBh3B,EAAoCP,GAAK,IAAxC,cAAEw3B,EAAa,eAAEC,GAAgBl3B,EAC3D,MAAMm3B,EAAcF,EAAch6B,eAAewC,KAAgC,IAAxBy3B,EAAez3B,GAExE,OADAy3B,EAAez3B,IAAO,EACf03B,CACX,CACA,SAASC,GAAoBv0B,EAAOwJ,GAChC,MAAM1K,EAAUkB,EAAMkB,MACtB,IAAI1G,MAAMC,QAAQ+O,GAOd,OAAO1K,IAAY0K,EANnB,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAO1I,OAAQqI,IAC/B,GAAIK,EAAOL,KAAOrK,EACd,OAAO,CAMvB,CACA,SAAS01B,GAAcn2B,EAAewQ,GAA0D,IAA9C,MAAEga,EAAQ,EAAC,mBAAE4L,EAAkB,KAAE3xB,GAAMjC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzF6zB,EAAsFr2B,EAAc41B,qBAAqBplB,IAArH,WAAE0B,EAAalS,EAAckvB,uBAAsB,cAAEjd,GAA0BokB,EAARlrB,GAAMsC,EAAAA,GAAAA,GAAA4oB,EAAA3oB,IACjF,MAAM4oB,EAAat2B,EAAcy1B,SAAS,cACtCW,IACAlkB,EAAakkB,GACjB,MAAMG,EAAa,GACbC,EAAqB/xB,GACvBzE,EAAckB,gBACdlB,EAAckB,eAAeu1B,WAAWhyB,GAC5C,IAAK,MAAMlG,KAAO4M,EAAQ,CACtB,MAAMxJ,EAAQ3B,EAAcy1B,SAASl3B,GAC/B4T,EAAchH,EAAO5M,GAC3B,IAAKoD,QACevE,IAAhB+U,GACCqkB,GACGV,GAAqBU,EAAoBj4B,GAC7C,SAEJ,MAAMsyB,GAAexxB,EAAAA,EAAAA,GAAA,CACjBmrB,QACA6B,QAAS,GACNqE,GAAmBxe,GAAc,CAAC,EAAG3T,IAM5C,GAAIuC,OAAO41B,wBAAyB,CAChC,MAAMC,EAAW32B,EAAcwV,WAAW9Z,GAC1C,GAAIi7B,EAAU,CACV,MAAMtK,EAAUvrB,OAAO41B,wBAAwBC,EAAUp4B,EAAKoD,EAAO0Q,GAAAA,IACrD,OAAZga,IACAwE,EAAgBxE,QAAUA,EAC1BwE,EAAgBiB,WAAY,EAEpC,CACJ,CACA,IAAI8E,GAAW/F,EAAgBiB,YAC1BoE,GAAoBv0B,EAAOwQ,GAahC,GAZ6B,WAAzB0e,EAAgBpsB,OACf9C,EAAMkC,eAAiBgtB,EAAgB/V,YACxC8b,GAAU,GAOVj1B,EAAM9D,YACN+4B,GAAU,GAEVA,EACA,SACJj1B,EAAMrF,MAAMs0B,GAAmBryB,EAAKoD,EAAOwQ,EAAanS,EAAc62B,oBAAsBrzB,EAAeT,IAAIxE,GACzG,CAAEkG,MAAM,GACRosB,IACN,MAAMhzB,EAAY8D,EAAM9D,UACpBo0B,GAAwBqE,KACxBA,EAAWpE,IAAI3zB,GACfV,EAAUmvB,KAAK,IAAMsJ,EAAWQ,OAAOv4B,KAE3Cg4B,EAAWjV,KAAKzjB,EACpB,CAMA,OALIoU,GACAoZ,QAAQ9T,IAAIgf,GAAYvJ,KAAK,KACzB/a,GAAiB0jB,GAAU31B,EAAeiS,KAG3CskB,CACX,CCjGA,SAASQ,GAAe/2B,EAAeg3B,GAAuB,IAAdhtB,EAAOxH,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAMwP,EAAW4I,GAAe5a,EAAeg3B,EAAShtB,EAAQzH,QAChE,IAAI,WAAE2P,EAAalS,EAAckvB,wBAA0B,CAAC,GAAMld,GAAY,CAAC,EAC3EhI,EAAQosB,qBACRlkB,EAAalI,EAAQosB,oBAMzB,MAAMa,EAAejlB,EACf,IAAMqZ,QAAQ9T,IAAI4e,GAAcn2B,EAAegS,EAAUhI,IACzD,IAAMqhB,QAAQC,UAKd4L,EAAqBl3B,EAAcm3B,iBAAmBn3B,EAAcm3B,gBAAgB5vB,KACpF,WAAsB,IAArB6vB,EAAY50B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEgvB,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBxf,EAClE,OAkBZ,SAAyBlS,EAAeg3B,GAAgF,IAAvExF,EAAahvB,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAGivB,EAAejvB,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAGkvB,EAAgBlvB,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAGwH,EAAOxH,UAAAC,OAAA,EAAAD,UAAA,QAAApF,EAClH,MAAMm5B,EAAa,GACbc,GAAsBr3B,EAAcm3B,gBAAgB5vB,KAAO,GAAKkqB,EAChE6F,EAA+C,IAArB5F,EAC1B,WAAM,OAAJlvB,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,GAAUivB,CAAe,EAC9B,WAAM,OAAK4F,GAAT70B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,GAA+BivB,CAAe,EAUzD,OATAt1B,MAAM2jB,KAAK9f,EAAcm3B,iBACpBI,KAAKC,IACLzlB,QAAQ,CAAC6D,EAAO9K,KACjB8K,EAAM8c,OAAO,iBAAkBsE,GAC/BT,EAAWjV,KAAKyV,GAAenhB,EAAOohB,GAAO33B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtC2K,GAAO,IACVwgB,MAAOgH,EAAgB8F,EAAwBxsB,MAChDkiB,KAAK,IAAMpX,EAAM8c,OAAO,oBAAqBsE,OAE7C3L,QAAQ9T,IAAIgf,EACvB,CAlCmBkB,CAAgBz3B,EAAeg3B,EAASxF,EAAgB4F,EAAc3F,EAAiBC,EAAkB1nB,EACpH,EACE,IAAMqhB,QAAQC,WAKd,KAAEgG,GAASpf,EACjB,GAAIof,EAAM,CACN,MAAOoG,EAAOC,GAAiB,mBAATrG,EAChB,CAAC2F,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQ1K,KAAK,IAAM2K,IAC9B,CAEI,OAAOtM,QAAQ9T,IAAI,CAAC0f,IAAgBC,EAAmBltB,EAAQwgB,QAEvE,CAkBA,SAASgN,GAAgB3jB,EAAGC,GACxB,OAAOD,EAAE+jB,iBAAiB9jB,EAC9B,C,wCCpDM+jB,GAAuB,IAAIt7B,GAAsBynB,UACjD8T,GAAoBv7B,EAAqBkG,OAC/C,SAASs1B,GAAY/3B,GACjB,OAAQu2B,GAAelL,QAAQ9T,IAAIgf,EAAWja,IAAIxd,IAAA,IAAC,UAAEjB,EAAS,QAAEmM,GAASlL,EAAA,OCP7E,SAA8BkB,EAAewQ,GAA0B,IAE/D3S,EAFiDmM,EAAOxH,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAxC,EAAc0yB,OAAO,iBAAkBliB,GAEnCrU,MAAMC,QAAQoU,GAAa,CAC3B,MAAM+lB,EAAa/lB,EAAW8L,IAAK0a,GAAYD,GAAe/2B,EAAeg3B,EAAShtB,IACtFnM,EAAYwtB,QAAQ9T,IAAIgf,EAC5B,MACK,GAA0B,kBAAf/lB,EACZ3S,EAAYk5B,GAAe/2B,EAAewQ,EAAYxG,OAErD,CACD,MAAMguB,EAA2C,oBAAfxnB,EAC5BoK,GAAe5a,EAAewQ,EAAYxG,EAAQzH,QAClDiO,EACN3S,EAAYwtB,QAAQ9T,IAAI4e,GAAcn2B,EAAeg4B,EAAoBhuB,GAC7E,CACA,OAAOnM,EAAUmvB,KAAK,IAAMhtB,EAAc0yB,OAAO,oBAAqBliB,GAC1E,CDVkFynB,CAAqBj4B,EAAenC,EAAWmM,KACjI,CACA,SAASkuB,GAAqBl4B,GAC1B,IAAIrD,EAAUo7B,GAAY/3B,GAC1B,MAAM8J,EA6RC,CACHnN,QAASw7B,IAAgB,GACzBC,YAAaD,KACb1iB,WAAY0iB,KACZ/rB,SAAU+rB,KACVE,UAAWF,KACXG,WAAYH,KACZr6B,KAAMq6B,MAnSV,IAAII,GAAkB,EAKtB,MAAMC,EAA0BA,CAACC,EAAKjoB,KAClC,MAAMwB,EAAW4I,GAAe5a,EAAewQ,GAC/C,GAAIwB,EAAU,CACV,MAAM,WAAEE,EAAU,cAAED,GAA6BD,EAAX7G,GAAMsC,EAAAA,GAAAA,GAAKuE,EAAQtE,IACzD+qB,GAAGp5B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQo5B,GAAQttB,GAAW8G,EAClC,CACA,OAAOwmB,GAmBX,SAASt3B,EAAe6I,EAAS0uB,GAC7B,MAAMh8B,EAAQsD,EAAcwV,WACtBrY,EAAU6C,EAAc24B,mBAAkB,IAAS,CAAC,EAKpDpC,EAAa,GAKbqC,EAAc,IAAIn1B,IAMxB,IAAIo1B,EAAkB,CAAC,EAKnBC,EAAsB9O,IAO1B,IAAK,IAAIlf,EAAI,EAAGA,EAAIgtB,GAAmBhtB,IAAK,CACxC,MAAMrG,EAAOozB,GAAqB/sB,GAC5BiuB,EAAYjvB,EAAMrF,GAClB/G,OAAuBN,IAAhBV,EAAM+H,GAAsB/H,EAAM+H,GAAQtH,EAAQsH,GACzDu0B,EAAgB/8B,EAAeyB,GAK/Bu7B,EAAcx0B,IAASi0B,EAAoBK,EAAU3jB,SAAW,MAClD,IAAhB6jB,IACAH,EAAsBhuB,GAO1B,IAAIouB,EAAcx7B,IAASP,EAAQsH,IAAS/G,IAAShB,EAAM+H,IAASu0B,EAepE,GAXIE,GACAX,GACAv4B,EAAcm5B,yBACdD,GAAc,GAMlBH,EAAUhD,eAAa12B,EAAAA,EAAAA,GAAA,GAAQw5B,IAI7BE,EAAU3jB,UAA4B,OAAhB6jB,IAElBv7B,IAASq7B,EAAUK,UAErB/8B,EAAoBqB,IACJ,mBAATA,EACP,SAQJ,IAAI27B,EADqBC,GAAuBP,EAAUK,SAAU17B,IAG/D+G,IAASi0B,GACNK,EAAU3jB,WACT8jB,GACDF,GAEHluB,EAAIguB,GAAuBE,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiBr9B,MAAMC,QAAQsB,GAAQA,EAAO,CAACA,GAKrD,IAAI+7B,EAAiBD,EAAerlB,OAAOqkB,EAAyB,CAAC,IACjD,IAAhBS,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,GAAOt6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNq6B,GACAD,GAEDG,EAAiBr7B,IACnB86B,GAAoB,EAChBT,EAAY71B,IAAIxE,KAChBg7B,GAAuB,EACvBX,EAAYxhB,OAAO7Y,IAEvBw6B,EAAU/C,eAAez3B,IAAO,GAEpC,IAAK,MAAMA,KAAOo7B,EAAS,CACvB,MAAMlf,EAAOgf,EAAel7B,GACtBmc,EAAOgf,EAAmBn7B,GAEhC,GAAIs6B,EAAgB98B,eAAewC,GAC/B,SAIJ,IAAIs7B,GAAkB,EAElBA,EADAlpB,GAAkB8J,IAAS9J,GAAkB+J,IAC1BF,GAAeC,EAAMC,GAGtBD,IAASC,EAE3Bmf,OACaz8B,IAATqd,EAEAmf,EAAcr7B,GAIdq6B,EAAY1G,IAAI3zB,QAGNnB,IAATqd,GAAsBme,EAAY71B,IAAIxE,GAK3Cq7B,EAAcr7B,GAOdw6B,EAAUhD,cAAcx3B,IAAO,CAEvC,CAKAw6B,EAAUK,SAAW17B,EACrBq7B,EAAUW,mBAAqBD,EAI3BV,EAAU3jB,WACVyjB,GAAex5B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQw5B,GAAoBY,IAE3ClB,GAAmBv4B,EAAcU,wBACjC24B,GAAoB,IAKpBA,GAAuBH,IAAeK,GACtChD,EAAWjV,QAAQkY,EAAeld,IAAKze,IAAS,CAC5CA,UAAWA,EACXmM,SAAO3K,EAAAA,EAAAA,GAAA,CAAIoF,QAASuF,MAGhC,CAMA,GAAI4uB,EAAYrxB,KAAM,CAClB,MAAMuyB,EAAoB,CAAC,EAC3BlB,EAAY7mB,QAASxT,IACjB,MAAMw7B,EAAiB/5B,EAAcg6B,cAAcz7B,QAC5BnB,IAAnB28B,IACAD,EAAkBv7B,GAAOw7B,KAGjCxD,EAAWjV,KAAK,CAAEzjB,UAAWi8B,GACjC,CACA,IAAIG,EAAgBl9B,QAAQw5B,EAAW9zB,QAOvC,OANI81B,IACmB,IAAlB77B,EAAMQ,SAAqBR,EAAMQ,UAAYR,EAAMC,SACnDqD,EAAcm5B,yBACfc,GAAgB,GAEpB1B,GAAkB,EACX0B,EAAgBt9B,EAAQ45B,GAAclL,QAAQC,SACzD,CAkBA,MAAO,CACHnqB,iBACAuU,UAhBJ,SAAmBjR,EAAM2Q,EAAUpL,GAC/B,IAAI0C,EAEJ,GAAI5C,EAAMrF,GAAM2Q,WAAaA,EACzB,OAAOiW,QAAQC,UAEsB,QAAxC5e,EAAK1M,EAAcm3B,uBAAoC,IAAPzqB,GAAyBA,EAAGqF,QAAS6D,IAAY,IAAIlJ,EAAI,OAAuC,QAA/BA,EAAKkJ,EAAM1U,sBAAmC,IAAPwL,OAAgB,EAASA,EAAGgJ,UAAUjR,EAAM2Q,KACrMtL,EAAMrF,GAAM2Q,SAAWA,EACvB,MAAMmhB,EAAap1B,EAAe6I,EAASvF,GAC3C,IAAK,MAAMlG,KAAOuL,EACdA,EAAMvL,GAAKw3B,cAAgB,CAAC,EAEhC,OAAOQ,CACX,EAII2D,mBArPJ,SAA4BC,GACxBx9B,EAAUw9B,EAAan6B,EAC3B,EAoPIy2B,SAAUA,IAAM3sB,EAExB,CACA,SAASwvB,GAAuB5e,EAAMD,GAClC,MAAoB,kBAATA,EACAA,IAASC,IAEXve,MAAMC,QAAQqe,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAASyd,KACL,MAAO,CACH/iB,SAFyB5S,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,IAAAA,UAAA,GAGzBuzB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjB0D,mBAAoB,CAAC,EAE7B,CExSA,IAAIt3B,GAAK,ECCT,MAAMm0B,GAAa,CACf14B,UAAW,CACPiX,QCDR,cAA+BA,GAM3BC,WAAAA,CAAYC,GACRyC,MAAMzC,GACNA,EAAK9T,iBAAmB8T,EAAK9T,eAAiBg3B,GAAqBljB,GACvE,CACAolB,mCAAAA,GACI,MAAM,QAAEz9B,GAAYsY,KAAKD,KAAKQ,WAC9BP,KAAKlT,UACD1F,EAAoBM,KACpBsY,KAAKlT,QAAUpF,EAAQ09B,UAAUplB,KAAKD,MAE9C,CAIAlT,KAAAA,GACImT,KAAKmlB,qCACT,CACAx5B,MAAAA,GACI,MAAM,QAAEjE,GAAYsY,KAAKD,KAAKQ,YACtB7Y,QAAS29B,GAAgBrlB,KAAKD,KAAK/E,WAAa,CAAC,EACrDtT,IAAY29B,GACZrlB,KAAKmlB,qCAEb,CACAr4B,OAAAA,GAAY,ID3BZjE,KAAM,CACFgX,QDLR,cAAmCA,GAC/BC,WAAAA,GACI0C,SAASjV,WACTyS,KAAK7S,GAAKA,IACd,CACAxB,MAAAA,GACI,IAAKqU,KAAKD,KAAK7U,gBACX,OACJ,MAAM,UAAEo6B,EAAS,eAAEC,EAAc,OAAEj4B,GAAW0S,KAAKD,KAAK7U,iBAChDo6B,UAAWE,GAAkBxlB,KAAKD,KAAK0lB,qBAAuB,CAAC,EACvE,IAAKzlB,KAAKD,KAAK9T,gBAAkBq5B,IAAcE,EAC3C,OAEJ,MAAME,EAAgB1lB,KAAKD,KAAK9T,eAAewU,UAAU,QAAS6kB,EAAW,CAAEh4B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAAS0S,KAAKD,KAAKQ,WAAWjT,SACxJi4B,IAAmBD,GACnBI,EAAc3N,KAAK,IAAMwN,EAAevlB,KAAK7S,IAErD,CACAN,KAAAA,GACI,MAAM,SAAE84B,GAAa3lB,KAAKD,KAAK7U,iBAAmB,CAAC,EAC/Cy6B,IACA3lB,KAAKlT,QAAU64B,EAAS3lB,KAAK7S,IAErC,CACAL,OAAAA,GAAY,KG3BViH,GAAWA,CAAC6K,EAAGC,IAAMhP,KAAKwY,IAAIzJ,EAAIC,GCWxC,MAAM+mB,GACF9lB,WAAAA,CAAY5B,EAAO2nB,GAAgF,IAAtE,mBAAE//B,EAAkB,cAAEggC,EAAa,iBAAEC,GAAmB,GAAOx4B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE5F,GA5DAyS,KAAK4D,WAAa,KAIlB5D,KAAKgmB,cAAgB,KAIrBhmB,KAAKimB,kBAAoB,KAIzBjmB,KAAK6lB,SAAW,CAAC,EAIjB7lB,KAAK8lB,cAAgBj6B,OACrBmU,KAAKkmB,YAAc,KACf,IAAMlmB,KAAKgmB,gBAAiBhmB,KAAKimB,kBAC7B,OACJ,MAAM3lB,EAAO6lB,GAAWnmB,KAAKimB,kBAAmBjmB,KAAKomB,SAC/CC,EAAmC,OAApBrmB,KAAK4D,WAIpB0iB,EDxClB,SAAoB1nB,EAAGC,GAEnB,MAAM0nB,EAASxyB,GAAS6K,EAAE9P,EAAG+P,EAAE/P,GACzB03B,EAASzyB,GAAS6K,EAAE7P,EAAG8P,EAAE9P,GAC/B,OAAOc,KAAKub,KAAKmb,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWnmB,EAAK1I,OAAQ,CAAE9I,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKs3B,IAAiBC,EAClB,OACJ,MAAM,MAAE9nB,GAAU8B,GACZ,UAAEgU,GAAcI,GAAAA,GACtB1U,KAAKomB,QAAQ/Z,MAAIjiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoU,GAAK,IAAE8V,eAC9B,MAAM,QAAEoS,EAAO,OAAEC,GAAW3mB,KAAK6lB,SAC5BQ,IACDK,GAAWA,EAAQ1mB,KAAKgmB,cAAe1lB,GACvCN,KAAK4D,WAAa5D,KAAKgmB,eAE3BW,GAAUA,EAAO3mB,KAAKgmB,cAAe1lB,IAEzCN,KAAK4mB,kBAAoB,CAAC1oB,EAAOoC,KAC7BN,KAAKgmB,cAAgB9nB,EACrB8B,KAAKimB,kBAAoBY,GAAevmB,EAAMN,KAAKla,oBAEnDsX,GAAAA,GAAMzR,OAAOqU,KAAKkmB,aAAa,IAEnClmB,KAAK8mB,gBAAkB,CAAC5oB,EAAOoC,KAC3BN,KAAK+mB,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoBlnB,KAAK6lB,SAGtD,GAFI7lB,KAAK+lB,kBACLmB,GAAmBA,KACjBlnB,KAAKgmB,gBAAiBhmB,KAAKimB,kBAC7B,OACJ,MAAMkB,EAAUhB,GAA0B,kBAAfjoB,EAAM1O,KAC3BwQ,KAAKimB,kBACLY,GAAevmB,EAAMN,KAAKla,oBAAqBka,KAAKomB,SACtDpmB,KAAK4D,YAAcojB,GACnBA,EAAM9oB,EAAOipB,GAEjBF,GAAgBA,EAAa/oB,EAAOipB,KAGnClpB,GAAiBC,GAClB,OACJ8B,KAAK+lB,iBAAmBA,EACxB/lB,KAAK6lB,SAAWA,EAChB7lB,KAAKla,mBAAqBA,EAC1Bka,KAAK8lB,cAAgBA,GAAiBj6B,OACtC,MACMu7B,EAAcP,GADPvoB,GAAiBJ,GACW8B,KAAKla,qBACxC,MAAE0Y,GAAU4oB,GACZ,UAAE9S,GAAcI,GAAAA,GACtB1U,KAAKomB,QAAU,EAAAh8B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMoU,GAAK,IAAE8V,eAC5B,MAAM,eAAE+S,GAAmBxB,EAC3BwB,GACIA,EAAenpB,EAAOioB,GAAWiB,EAAapnB,KAAKomB,UACvDpmB,KAAKsnB,gBAAkBxoB,GAAKL,GAAgBuB,KAAK8lB,cAAe,cAAe9lB,KAAK4mB,mBAAoBnoB,GAAgBuB,KAAK8lB,cAAe,YAAa9lB,KAAK8mB,iBAAkBroB,GAAgBuB,KAAK8lB,cAAe,gBAAiB9lB,KAAK8mB,iBAC9O,CACAS,cAAAA,CAAe1B,GACX7lB,KAAK6lB,SAAWA,CACpB,CACAkB,GAAAA,GACI/mB,KAAKsnB,iBAAmBtnB,KAAKsnB,mBAC7B9S,EAAAA,GAAAA,IAAYxU,KAAKkmB,YACrB,EAEJ,SAASW,GAAevmB,EAAMxa,GAC1B,OAAOA,EAAqB,CAAE0Y,MAAO1Y,EAAmBwa,EAAK9B,QAAW8B,CAC5E,CACA,SAASknB,GAAc5oB,EAAGC,GACtB,MAAO,CAAE/P,EAAG8P,EAAE9P,EAAI+P,EAAE/P,EAAGC,EAAG6P,EAAE7P,EAAI8P,EAAE9P,EACtC,CACA,SAASo3B,GAAUt8B,EAAYu8B,GAAS,IAApB,MAAE5nB,GAAO3U,EACzB,MAAO,CACH2U,QACA0S,MAAOsW,GAAchpB,EAAOipB,GAAgBrB,IAC5CxuB,OAAQ4vB,GAAchpB,EAAOkpB,GAAiBtB,IAC9CvgB,SAAUjX,GAAYw3B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQ54B,OAAS,EACpC,CACA,SAASoB,GAAYw3B,EAASlI,GAC1B,GAAIkI,EAAQ54B,OAAS,EACjB,MAAO,CAAEsB,EAAG,EAAGC,EAAG,GAEtB,IAAI8G,EAAIuwB,EAAQ54B,OAAS,EACrBm6B,EAAmB,KACvB,MAAMC,EAAYH,GAAgBrB,GAClC,KAAOvwB,GAAK,IACR8xB,EAAmBvB,EAAQvwB,KACvB+xB,EAAUtT,UAAYqT,EAAiBrT,UACvCxO,GAAsBoY,MAG1BroB,IAEJ,IAAK8xB,EACD,MAAO,CAAE74B,EAAG,EAAGC,EAAG,GAEtB,MAAMkpB,EAAOjS,GAAsB4hB,EAAUtT,UAAYqT,EAAiBrT,WAC1E,GAAa,IAAT2D,EACA,MAAO,CAAEnpB,EAAG,EAAGC,EAAG,GAEtB,MAAM0M,EAAkB,CACpB3M,GAAI84B,EAAU94B,EAAI64B,EAAiB74B,GAAKmpB,EACxClpB,GAAI64B,EAAU74B,EAAI44B,EAAiB54B,GAAKkpB,GAQ5C,OANIxc,EAAgB3M,IAAMimB,MACtBtZ,EAAgB3M,EAAI,GAEpB2M,EAAgB1M,IAAMgmB,MACtBtZ,EAAgB1M,EAAI,GAEjB0M,CACX,CCvJA,SAASosB,GAAWC,GAChB,OAAOA,EAAKl4B,IAAMk4B,EAAKn4B,GAC3B,CACA,SAASo4B,GAAOr7B,GAAuC,IAAhCwJ,EAAM3I,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAGy6B,EAAWz6B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAOsC,KAAKwY,IAAI3b,EAAQwJ,IAAW8xB,CACvC,CACA,SAASC,GAAc/W,EAAO/a,EAAQD,GAAsB,IAAdyB,EAAMpK,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,GACnD2jB,EAAMvZ,OAASA,EACfuZ,EAAMgX,YAAcpsB,GAAI3F,EAAOxG,IAAKwG,EAAOvG,IAAKshB,EAAMvZ,QACtDuZ,EAAMhhB,MAAQ23B,GAAW3xB,GAAU2xB,GAAW1xB,IAC1C4xB,GAAO7W,EAAMhhB,MAAO,EAAG,OAAWid,MAAM+D,EAAMhhB,UAC9CghB,EAAMhhB,MAAQ,GAClBghB,EAAMiX,UACFrsB,GAAI5F,EAAOvG,IAAKuG,EAAOtG,IAAKshB,EAAMvZ,QAAUuZ,EAAMgX,aAClDH,GAAO7W,EAAMiX,YAAchb,MAAM+D,EAAMiX,cACvCjX,EAAMiX,UAAY,EAC1B,CACA,SAASC,GAAalX,EAAO/a,EAAQD,EAAQyB,GACzCswB,GAAc/W,EAAMpiB,EAAGqH,EAAOrH,EAAGoH,EAAOpH,EAAG6I,EAASA,EAAOtD,aAAUlM,GACrE8/B,GAAc/W,EAAMniB,EAAGoH,EAAOpH,EAAGmH,EAAOnH,EAAG4I,EAASA,EAAOrD,aAAUnM,EACzE,CACA,SAASkgC,GAAiBnyB,EAAQoyB,EAAUt9B,GACxCkL,EAAOvG,IAAM3E,EAAO2E,IAAM24B,EAAS34B,IACnCuG,EAAOtG,IAAMsG,EAAOvG,IAAMk4B,GAAWS,EACzC,CAKA,SAASC,GAAyBryB,EAAQ9M,EAAQ4B,GAC9CkL,EAAOvG,IAAMvG,EAAOuG,IAAM3E,EAAO2E,IACjCuG,EAAOtG,IAAMsG,EAAOvG,IAAMk4B,GAAWz+B,EACzC,CACA,SAASo/B,GAAqBtyB,EAAQ9M,EAAQ4B,GAC1Cu9B,GAAyBryB,EAAOpH,EAAG1F,EAAO0F,EAAG9D,EAAO8D,GACpDy5B,GAAyBryB,EAAOnH,EAAG3F,EAAO2F,EAAG/D,EAAO+D,EACxD,CCZA,SAAS05B,GAA4BX,EAAMn4B,EAAKC,GAC5C,MAAO,CACHD,SAAaxH,IAARwH,EAAoBm4B,EAAKn4B,IAAMA,OAAMxH,EAC1CyH,SAAazH,IAARyH,EACCk4B,EAAKl4B,IAAMA,GAAOk4B,EAAKl4B,IAAMk4B,EAAKn4B,UAClCxH,EAEd,CAcA,SAASugC,GAA4BC,EAAYC,GAC7C,IAAIj5B,EAAMi5B,EAAgBj5B,IAAMg5B,EAAWh5B,IACvCC,EAAMg5B,EAAgBh5B,IAAM+4B,EAAW/4B,IAO3C,OAJIg5B,EAAgBh5B,IAAMg5B,EAAgBj5B,IACtCg5B,EAAW/4B,IAAM+4B,EAAWh5B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMi5B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHt5B,IAAKu5B,GAAoBH,EAAaC,GACtCp5B,IAAKs5B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,MAWMC,GAAYA,KAAA,CACdt6B,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,KCVzC,SAASy5B,GAAShoB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASioB,GAAuBz/B,GAAgC,IAA/B,IAAE0I,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,GAAS5I,EAC1D,MAAO,CACHiF,EAAG,CAAEa,IAAK+C,EAAM9C,IAAK4C,GACrBzD,EAAG,CAAEY,IAAK4C,EAAK3C,IAAK6C,GAE5B,CCVA,SAAS82B,GAAgBr5B,GACrB,YAAiB/H,IAAV+H,GAAiC,IAAVA,CAClC,CACA,SAASs5B,GAAQ3/B,GAA4B,IAA3B,MAAEqG,EAAK,OAAEuD,EAAM,OAAEC,GAAQ7J,EACvC,OAAS0/B,GAAgBr5B,KACpBq5B,GAAgB91B,KAChB81B,GAAgB71B,EACzB,CACA,SAAS0B,GAAa0E,GAClB,OAAQ0vB,GAAS1vB,IACb2vB,GAAe3vB,IACfA,EAAO9K,GACP8K,EAAOzG,QACPyG,EAAOxG,SACPwG,EAAOvG,OACf,CACA,SAASk2B,GAAe3vB,GACpB,OAAO4vB,GAAc5vB,EAAOhL,IAAM46B,GAAc5vB,EAAO/K,EAC3D,CACA,SAAS26B,GAAch9B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASi9B,GAAWnrB,EAAOtO,EAAOg4B,GAG9B,OAAOA,EADQh4B,GADYsO,EAAQ0pB,EAGvC,CAIA,SAAS0B,GAAgBprB,EAAO2pB,EAAWj4B,EAAOg4B,EAAa2B,GAI3D,YAHiB1hC,IAAb0hC,IACArrB,EAAQmrB,GAAWnrB,EAAOqrB,EAAU3B,IAEjCyB,GAAWnrB,EAAOtO,EAAOg4B,GAAeC,CACnD,CAIA,SAAS2B,GAAehC,GAAuD,IAAjDK,EAAS56B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAG2C,EAAK3C,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAG26B,EAAW36B,UAAAC,OAAA,EAAAD,UAAA,QAAApF,EAAE0hC,EAAQt8B,UAAAC,OAAA,EAAAD,UAAA,QAAApF,EACzE2/B,EAAKn4B,IAAMi6B,GAAgB9B,EAAKn4B,IAAKw4B,EAAWj4B,EAAOg4B,EAAa2B,GACpE/B,EAAKl4B,IAAMg6B,GAAgB9B,EAAKl4B,IAAKu4B,EAAWj4B,EAAOg4B,EAAa2B,EACxE,CAIA,SAASE,GAAcC,EAAGngC,GAAY,IAAV,EAAEiF,EAAC,EAAEC,GAAGlF,EAChCigC,GAAeE,EAAIl7B,EAAGA,EAAEq5B,UAAWr5B,EAAEoB,MAAOpB,EAAEo5B,aAC9C4B,GAAeE,EAAIj7B,EAAGA,EAAEo5B,UAAWp5B,EAAEmB,MAAOnB,EAAEm5B,YAClD,CAuDA,SAAS+B,GAAc/5B,GACnB,OAAIg6B,OAAOC,UAAUj6B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASk6B,GAActC,EAAM/zB,GACzB+zB,EAAKn4B,IAAMm4B,EAAKn4B,IAAMoE,EACtB+zB,EAAKl4B,IAAMk4B,EAAKl4B,IAAMmE,CAC1B,CAMA,SAASs2B,GAAcvC,EAAMwC,EAAUt9B,GAA8B,IAA3B1D,EAAKihC,EAAUC,GAAUx9B,EAC/D,MAAMy9B,OAAuCtiC,IAA1BmiC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EtC,EAAcpsB,GAAIgsB,EAAKn4B,IAAKm4B,EAAKl4B,IAAK66B,GAE5CX,GAAehC,EAAMwC,EAAWhhC,GAAMghC,EAAWC,GAAWrC,EAAaoC,EAAWp6B,MACxF,CAIA,MAAMw6B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKv6B,GACvB46B,GAAcL,EAAIl7B,EAAGW,EAAWi7B,IAChCL,GAAcL,EAAIj7B,EAAGU,EAAWk7B,GACpC,CCpHA,SAASE,GAAmBj+B,EAAUi6B,GAClC,OAAOyC,GHeX,SAA4B9qB,EAAOqoB,GAC/B,IAAKA,EACD,OAAOroB,EACX,MAAMssB,EAAUjE,EAAe,CAAE/3B,EAAG0P,EAAM9L,KAAM3D,EAAGyP,EAAMjM,MACnDw4B,EAAclE,EAAe,CAAE/3B,EAAG0P,EAAMhM,MAAOzD,EAAGyP,EAAM/L,SAC9D,MAAO,CACHF,IAAKu4B,EAAQ/7B,EACb2D,KAAMo4B,EAAQh8B,EACd2D,OAAQs4B,EAAYh8B,EACpByD,MAAOu4B,EAAYj8B,EAE3B,CG1BmCk8B,CAAmBp+B,EAAS2Q,wBAAyBspB,GACxF,CCJA,MAAMoE,GAAmBphC,IAAiB,IAAhB,QAAE2B,GAAS3B,EACjC,OAAO2B,EAAUA,EAAQ0/B,cAAcC,YAAc,MCiBnDC,GAAsB,IAAInqB,QAKhC,MAAMoqB,GACFvrB,WAAAA,CAAY/U,GAIRiV,KAAKsrB,eAAiB,KACtBtrB,KAAKurB,YAAa,EAClBvrB,KAAKwrB,iBAAmB,KACxBxrB,KAAKkoB,YAAc,CAAEp5B,EAAG,EAAGC,EAAG,GAI9BiR,KAAKyrB,aAAc,EACnBzrB,KAAK0rB,uBAAwB,EAI7B1rB,KAAK2rB,QP9BK,CACd78B,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IOgCjCoQ,KAAKjV,cAAgBA,CACzB,CACA1D,KAAAA,CAAMukC,GAA4C,IAA/B,aAAEC,GAAe,GAAOt+B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAErC,GAAoB8U,KAAKjV,cACjC,GAAIG,IAAiD,IAA9BA,EAAgBo6B,UACnC,OACJ,MA4FM,iBAAES,GAAqB/lB,KAAKO,WAClCP,KAAK8rB,WAAa,IAAIlG,GAAWgG,EAAa,CAC1CvE,eA9FoBnpB,IACpB,MAAM,iBAAE6nB,GAAqB/lB,KAAKO,WAGlCwlB,EAAmB/lB,KAAK+rB,iBAAmB/rB,KAAKgsB,gBAC5CH,GACA7rB,KAAK6rB,aAAavtB,GAAiBJ,EAAO,QAAQM,QAyFtDkoB,QAtFYA,CAACxoB,EAAOoC,KAEpB,MAAM,KAAExX,EAAI,gBAAEmjC,EAAe,YAAEC,GAAgBlsB,KAAKO,WACpD,GAAIzX,IAASmjC,IACLjsB,KAAKsrB,gBACLtrB,KAAKsrB,iBACTtrB,KAAKsrB,eAAiB9rB,GAAc1W,IAE/BkX,KAAKsrB,gBACN,OAERtrB,KAAKurB,YAAa,EAClBvrB,KAAKwrB,iBAAmB,KACxBxrB,KAAKmsB,qBACDnsB,KAAKjV,cAAcwP,aACnByF,KAAKjV,cAAcwP,WAAW6xB,oBAAqB,EACnDpsB,KAAKjV,cAAcwP,WAAWrE,YAAS/N,GAK3CkhC,GAAUvB,IACN,IAAIt8B,EAAUwU,KAAKqsB,mBAAmBvE,GAAMl6B,OAAS,EAIrD,GAAIoD,GAAQ5C,KAAK5C,GAAU,CACvB,MAAM,WAAE+O,GAAeyF,KAAKjV,cAC5B,GAAIwP,GAAcA,EAAWnR,OAAQ,CACjC,MAAMkjC,EAAe/xB,EAAWnR,OAAOmjC,UAAUzE,GACjD,GAAIwE,EAAc,CAEd9gC,EADeq8B,GAAWyE,IACNt8B,WAAWxE,GAAW,IAC9C,CACJ,CACJ,CACAwU,KAAKkoB,YAAYJ,GAAQt8B,IAGzB0gC,GACA9uB,GAAAA,GAAMzR,OAAO,IAAMugC,EAAYhuB,EAAOoC,IAAO,GAAO,GAExD,MAAM,eAAErU,GAAmB+T,KAAKjV,cAChCkB,GAAkBA,EAAewU,UAAU,aAAa,IA4CxDkmB,OA1CWA,CAACzoB,EAAOoC,KAEnB,MAAM,gBAAE2rB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAY1sB,KAAKO,WAE9E,IAAK0rB,IAAoBjsB,KAAKsrB,eAC1B,OACJ,MAAM,OAAE1zB,GAAW0I,EAEnB,GAAIksB,GAA+C,OAA1BxsB,KAAKwrB,iBAM1B,OALAxrB,KAAKwrB,iBAmWrB,SAA6B5zB,GAA4B,IAApB+0B,EAAap/B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,GAC7C6rB,EAAY,KACZvpB,KAAKwY,IAAIzQ,EAAO7I,GAAK49B,EACrBvT,EAAY,IAEPvpB,KAAKwY,IAAIzQ,EAAO9I,GAAK69B,IAC1BvT,EAAY,KAEhB,OAAOA,CACX,CA5WwCwT,CAAoBh1B,QAEd,OAA1BoI,KAAKwrB,kBACLiB,GAAmBA,EAAgBzsB,KAAKwrB,mBAKhDxrB,KAAK6sB,WAAW,IAAKvsB,EAAK9B,MAAO5G,GACjCoI,KAAK6sB,WAAW,IAAKvsB,EAAK9B,MAAO5G,GAOjCoI,KAAKjV,cAAciB,SAKnB0gC,GAAUA,EAAOxuB,EAAOoC,IAaxB2mB,aAXiBA,CAAC/oB,EAAOoC,IAASN,KAAKuU,KAAKrW,EAAOoC,GAYnD4mB,gBAXoBA,IAAMmC,GAAUvB,IACpC,IAAIrwB,EACJ,MAAwC,WAAjCuI,KAAK8sB,kBAAkBhF,KAC0B,QAAlDrwB,EAAKuI,KAAKqsB,mBAAmBvE,GAAMl/B,iBAA8B,IAAP6O,OAAgB,EAASA,EAAGogB,WAS7F,CACC/xB,mBAAoBka,KAAKjV,cAAcgiC,wBACvChH,mBACAD,cAAemF,GAAiBjrB,KAAKjV,gBAE7C,CACAwpB,IAAAA,CAAKrW,EAAOoC,GACR,MAAMirB,EAAavrB,KAAKurB,WAExB,GADAvrB,KAAK4X,UACA2T,EACD,OACJ,MAAM,SAAE1lB,GAAavF,EACrBN,KAAKyf,eAAe5Z,GACpB,MAAM,UAAEmnB,GAAchtB,KAAKO,WACvBysB,GACA5vB,GAAAA,GAAMzR,OAAO,IAAMqhC,EAAU9uB,EAAOoC,GAE5C,CACAsX,MAAAA,GACI5X,KAAKurB,YAAa,EAClB,MAAM,WAAEhxB,EAAU,eAAEtO,GAAmB+T,KAAKjV,cACxCwP,IACAA,EAAW6xB,oBAAqB,GAEpCpsB,KAAK8rB,YAAc9rB,KAAK8rB,WAAW/E,MACnC/mB,KAAK8rB,gBAAa3jC,EAClB,MAAM,gBAAE8jC,GAAoBjsB,KAAKO,YAC5B0rB,GAAmBjsB,KAAKsrB,iBACzBtrB,KAAKsrB,iBACLtrB,KAAKsrB,eAAiB,MAE1Br/B,GAAkBA,EAAewU,UAAU,aAAa,EAC5D,CACAosB,UAAAA,CAAW/E,EAAMmF,EAAQr1B,GACrB,MAAM,KAAE9O,GAASkX,KAAKO,WAEtB,IAAK3I,IAAWs1B,GAAWpF,EAAMh/B,EAAMkX,KAAKwrB,kBACxC,OACJ,MAAM2B,EAAYntB,KAAKqsB,mBAAmBvE,GAC1C,IAAItiB,EAAOxF,KAAKkoB,YAAYJ,GAAQlwB,EAAOkwB,GAEvC9nB,KAAKyrB,aAAezrB,KAAKyrB,YAAY3D,KACrCtiB,ERtLZ,SAA0BhH,EAAK3U,EAAgB8hC,GAAS,IAAvB,IAAEh8B,EAAG,IAAEC,GAAK/F,EASzC,YARY1B,IAARwH,GAAqB6O,EAAQ7O,EAE7B6O,EAAQmtB,EAAU7vB,GAAInM,EAAK6O,EAAOmtB,EAAQh8B,KAAOE,KAAKD,IAAI4O,EAAO7O,QAEpDxH,IAARyH,GAAqB4O,EAAQ5O,IAElC4O,EAAQmtB,EAAU7vB,GAAIlM,EAAK4O,EAAOmtB,EAAQ/7B,KAAOC,KAAKF,IAAI6O,EAAO5O,IAE9D4O,CACX,CQ4KmB4uB,CAAiB5nB,EAAMxF,KAAKyrB,YAAY3D,GAAO9nB,KAAK2rB,QAAQ7D,KAEvEqF,EAAUp/B,IAAIyX,EAClB,CACA2mB,kBAAAA,GACI,IAAI10B,EACJ,MAAM,gBAAE41B,EAAe,YAAEtE,GAAgB/oB,KAAKO,WACxCnX,EAAS4W,KAAKjV,cAAcwP,aAC7ByF,KAAKjV,cAAcwP,WAAWnR,OAC7B4W,KAAKjV,cAAcwP,WAAW+yB,SAAQ,GACG,QAAxC71B,EAAKuI,KAAKjV,cAAcwP,kBAA+B,IAAP9C,OAAgB,EAASA,EAAGrO,OAC7EmkC,EAAkBvtB,KAAKyrB,YACzB4B,GAAmB3mC,EAAY2mC,GAC1BrtB,KAAKyrB,cACNzrB,KAAKyrB,YAAczrB,KAAKwtB,yBAKxBxtB,KAAKyrB,eADL4B,IAAmBjkC,IR5KnC,SAAiCmjC,EAASv/B,GAAgC,IAA9B,IAAEuF,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,GAAOxF,EACpE,MAAO,CACH8B,EAAG25B,GAA4B8D,EAAUz9B,EAAG4D,EAAMF,GAClDzD,EAAG05B,GAA4B8D,EAAUx9B,EAAGwD,EAAKE,GAEzD,CQwKmCg7B,CAAwBrkC,EAAOmjC,UAAWc,GAMrErtB,KAAK2rB,QRrHb,WAA0D,IAA9B5C,EAAWx7B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAGs7B,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH/5B,EAAGg6B,GAAmBC,EAAa,OAAQ,SAC3Ch6B,EAAG+5B,GAAmBC,EAAa,MAAO,UAElD,CQ0GuB2E,CAAmB3E,GAK9BwE,IAAoBvtB,KAAKyrB,aACzBriC,GACA4W,KAAKyrB,cACJzrB,KAAK0rB,uBACNrC,GAAUvB,IACF9nB,KAAKqsB,mBAAmBvE,KACxB9nB,KAAKyrB,YAAY3D,GR9IrC,SAA+B1+B,EAAQqiC,GACnC,MAAMkC,EAAsB,CAAC,EAO7B,YANwBxlC,IAApBsjC,EAAY97B,MACZg+B,EAAoBh+B,IAAM87B,EAAY97B,IAAMvG,EAAOuG,UAE/BxH,IAApBsjC,EAAY77B,MACZ+9B,EAAoB/9B,IAAM67B,EAAY77B,IAAMxG,EAAOuG,KAEhDg+B,CACX,CQqI6CC,CAAsBxkC,EAAOmjC,UAAUzE,GAAO9nB,KAAKyrB,YAAY3D,MAIxG,CACA0F,qBAAAA,GACI,MAAQH,gBAAiB5B,EAAW,yBAAEoC,GAA6B7tB,KAAKO,WACxE,IAAKkrB,IAAgB/kC,EAAY+kC,GAC7B,OAAO,EACX,MAAMqC,EAAqBrC,EAAYjgC,SACvCyd,EAAAA,GAAAA,GAAiC,OAAvB6kB,EAA6B,0GACvC,MAAM,WAAEvzB,GAAeyF,KAAKjV,cAE5B,IAAKwP,IAAeA,EAAWnR,OAC3B,OAAO,EACX,MAAM2kC,EF7Od,SAAwB1zB,EAAS2zB,EAAoBloC,GACjD,MAAMmoC,EAAcpD,GAAmBxwB,EAASvU,IAC1C,OAAEooC,GAAWF,EAKnB,OAJIE,IACA9D,GAAc6D,EAAYn/B,EAAGo/B,EAAOt2B,OAAO9I,GAC3Cs7B,GAAc6D,EAAYl/B,EAAGm/B,EAAOt2B,OAAO7I,IAExCk/B,CACX,CEqO+BE,CAAeL,EAAoBvzB,EAAWmH,KAAM1B,KAAKjV,cAAcgiC,yBAC9F,IAAIqB,ERvLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHj/B,EAAG45B,GAA4B6D,EAAUz9B,EAAGi/B,EAAej/B,GAC3DC,EAAG25B,GAA4B6D,EAAUx9B,EAAGg/B,EAAeh/B,GAEnE,CQkLkCs/B,CAAwB9zB,EAAWnR,OAAOmjC,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,SAAgC7gC,GAAW,IAAV,EAAE8B,EAAC,EAAEC,GAAG/B,EACrC,MAAO,CAAEuF,IAAKxD,EAAEY,IAAK6C,MAAO1D,EAAEc,IAAK6C,OAAQ1D,EAAEa,IAAK8C,KAAM5D,EAAEa,IAC9D,CK6O6D4+B,CAAwBH,IACzEpuB,KAAK0rB,wBAA0B4C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,CACA3O,cAAAA,CAAe5Z,GACX,MAAM,KAAE/c,EAAI,aAAE0lC,EAAY,YAAEzF,EAAW,eAAE0F,EAAc,iBAAE1I,EAAgB,oBAAE2I,GAAyB1uB,KAAKO,WACnGkrB,EAAczrB,KAAKyrB,aAAe,CAAC,EACnCkD,EAAqBtF,GAAUvB,IACjC,IAAKoF,GAAWpF,EAAMh/B,EAAMkX,KAAKwrB,kBAC7B,OAEJ,IAAIvuB,EAAcwuB,GAAeA,EAAY3D,IAAU,CAAC,EACpD/B,IACA9oB,EAAa,CAAEtN,IAAK,EAAGC,IAAK,IAOhC,MAAM2jB,EAAkBwV,EAAc,IAAM,IACtCzV,EAAgByV,EAAc,GAAK,IACnC5V,GAAO/oB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACToF,KAAM,UACNqW,SAAU2oB,EAAe3oB,EAASiiB,GAAQ,EAC1CvU,kBACAD,gBACAD,aAAc,IACdrB,UAAW,EACXC,UAAW,IACRwc,GACAxxB,GAKP,OAAO+C,KAAK4uB,wBAAwB9G,EAAM3U,KAG9C,OAAOiD,QAAQ9T,IAAIqsB,GAAoB5W,KAAK2W,EAChD,CACAE,uBAAAA,CAAwB9G,EAAM7qB,GAC1B,MAAMkwB,EAAYntB,KAAKqsB,mBAAmBvE,GAC1C,OAAOqF,EAAU9lC,MAAMs0B,GAAmBmM,EAAMqF,EAAW,EAAGlwB,GAClE,CACA+uB,aAAAA,GACI3C,GAAUvB,GAAS9nB,KAAKqsB,mBAAmBvE,GAAMvT,OACrD,CACAwX,cAAAA,GACI1C,GAAUvB,IAAW,IAAIrwB,EAAI,OAA0D,QAAlDA,EAAKuI,KAAKqsB,mBAAmBvE,GAAMl/B,iBAA8B,IAAP6O,OAAgB,EAASA,EAAG2gB,SAC/H,CACA0U,iBAAAA,CAAkBhF,GACd,IAAIrwB,EACJ,OAA0D,QAAlDA,EAAKuI,KAAKqsB,mBAAmBvE,GAAMl/B,iBAA8B,IAAP6O,OAAgB,EAASA,EAAG5C,KAClG,CAOAw3B,kBAAAA,CAAmBvE,GACf,MAAM+G,EAAU,QAAU/G,EAAK1sB,cACzB3T,EAAQuY,KAAKjV,cAAcwV,WAC3BuuB,EAAsBrnC,EAAMonC,GAClC,OAAOC,GAED9uB,KAAKjV,cAAcy1B,SAASsH,GAAOrgC,EAAMQ,QAAUR,EAAMQ,QAAQ6/B,QAAQ3/B,IAAc,EACjG,CACA0jC,YAAAA,CAAartB,GACT6qB,GAAUvB,IACN,MAAM,KAAEh/B,GAASkX,KAAKO,WAEtB,IAAK2sB,GAAWpF,EAAMh/B,EAAMkX,KAAKwrB,kBAC7B,OACJ,MAAM,WAAEjxB,GAAeyF,KAAKjV,cACtBoiC,EAAYntB,KAAKqsB,mBAAmBvE,GAC1C,GAAIvtB,GAAcA,EAAWnR,OAAQ,CACjC,MAAM,IAAEuG,EAAG,IAAEC,GAAQ2K,EAAWnR,OAAOmjC,UAAUzE,GACjDqF,EAAUp/B,IAAIyQ,EAAMspB,GAAQhsB,GAAInM,EAAKC,EAAK,IAC9C,GAER,CAMAm/B,8BAAAA,GACI,IAAK/uB,KAAKjV,cAAcS,QACpB,OACJ,MAAM,KAAE1C,EAAI,gBAAEukC,GAAoBrtB,KAAKO,YACjC,WAAEhG,GAAeyF,KAAKjV,cAC5B,IAAKrE,EAAY2mC,KAAqB9yB,IAAeyF,KAAKyrB,YACtD,OAKJzrB,KAAKgsB,gBAKL,MAAMgD,EAAc,CAAElgC,EAAG,EAAGC,EAAG,GAC/Bs6B,GAAUvB,IACN,MAAMqF,EAAYntB,KAAKqsB,mBAAmBvE,GAC1C,GAAIqF,EAAW,CACX,MAAMpZ,EAASoZ,EAAUv/B,MACzBohC,EAAYlH,GRpS5B,SAAoB3xB,EAAQD,GACxB,IAAIyB,EAAS,GACb,MAAMs3B,EAAepH,GAAW1xB,GAC1B+4B,EAAerH,GAAW3xB,GAOhC,OANIg5B,EAAeD,EACft3B,EAASoT,GAAS7U,EAAOvG,IAAKuG,EAAOtG,IAAMq/B,EAAc94B,EAAOxG,KAE3Ds/B,EAAeC,IACpBv3B,EAASoT,GAAS5U,EAAOxG,IAAKwG,EAAOvG,IAAMs/B,EAAch5B,EAAOvG,MAE7DD,EAAM,EAAG,EAAGiI,EACvB,CQyRoCD,CAAW,CAAE/H,IAAKokB,EAAQnkB,IAAKmkB,GAAU/T,KAAKyrB,YAAY3D,GAClF,IAKJ,MAAM,kBAAE9yB,GAAsBgL,KAAKjV,cAAcwV,WACjDP,KAAKjV,cAAcS,QAAQyJ,MAAMxF,UAAYuF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNuF,EAAWmH,MAAQnH,EAAWmH,KAAKytB,eACnC50B,EAAW60B,eACXpvB,KAAKmsB,qBAKL9C,GAAUvB,IACN,IAAKoF,GAAWpF,EAAMh/B,EAAM,MACxB,OAIJ,MAAMqkC,EAAYntB,KAAKqsB,mBAAmBvE,IACpC,IAAEn4B,EAAG,IAAEC,GAAQoQ,KAAKyrB,YAAY3D,GACtCqF,EAAUp/B,IAAI+N,GAAInM,EAAKC,EAAKo/B,EAAYlH,MAEhD,CACAuH,YAAAA,GACI,IAAKrvB,KAAKjV,cAAcS,QACpB,OACJ4/B,GAAoBr9B,IAAIiS,KAAKjV,cAAeiV,MAC5C,MAIMsvB,EAAsB7wB,GAJZuB,KAAKjV,cAAcS,QAIkB,cAAgB0S,IACjE,MAAM,KAAEpV,EAAI,aAAE4N,GAAe,GAASsJ,KAAKO,WAC3CzX,GAAQ4N,GAAgBsJ,KAAK3Y,MAAM6W,KAEjCqxB,EAAyBA,KAC3B,MAAM,gBAAElC,GAAoBrtB,KAAKO,WAC7B7Z,EAAY2mC,KACZrtB,KAAKyrB,YAAczrB,KAAKwtB,2BAG1B,WAAEjzB,GAAeyF,KAAKjV,cACtBykC,EAA4Bj1B,EAAWwD,iBAAiB,UAAWwxB,GACrEh1B,IAAeA,EAAWnR,SAC1BmR,EAAWmH,MAAQnH,EAAWmH,KAAKytB,eACnC50B,EAAW60B,gBAEfG,IAKA,MAAME,EAAqB9xB,GAAY9R,OAAQ,SAAU,IAAMmU,KAAK+uB,kCAK9DW,EAA2Bn1B,EAAWwD,iBAAiB,YAAclU,IAAiC,IAAhC,MAAEqnB,EAAK,iBAAEye,GAAkB9lC,EAC/FmW,KAAKurB,YAAcoE,IACnBtG,GAAUvB,IACN,MAAM9H,EAAchgB,KAAKqsB,mBAAmBvE,GACvC9H,IAELhgB,KAAKkoB,YAAYJ,IAAS5W,EAAM4W,GAAMK,UACtCnI,EAAYjyB,IAAIiyB,EAAYpyB,MAAQsjB,EAAM4W,GAAMK,cAEpDnoB,KAAKjV,cAAciB,YAG3B,MAAO,KACHyjC,IACAH,IACAE,IACAE,GAA4BA,IAEpC,CACAnvB,QAAAA,GACI,MAAM9Y,EAAQuY,KAAKjV,cAAcwV,YAC3B,KAAEzX,GAAO,EAAK,kBAAE0jC,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEoB,GAAkB,EAAK,YAAEtE,EAAcF,GAAc,aAAE2F,GAAe,GAAU/mC,EAC1J,OAAA2C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO3C,GAAK,IACRqB,OACA0jC,oBACAP,kBACAoB,kBACAtE,cACAyF,gBAER,EAEJ,SAAStB,GAAW9T,EAAWtwB,EAAM0iC,GACjC,QAAkB,IAAT1iC,GAAiBA,IAASswB,KACT,OAArBoS,GAA6BA,IAAqBpS,EAC3D,CCtcA,MAAMwW,GAAgB/xB,GAAY,CAACK,EAAOoC,KAClCzC,GACAT,GAAAA,GAAMzR,OAAO,IAAMkS,EAAQK,EAAOoC,KCJ1C,MAAMuvB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQnI,GAC7B,OAAIA,EAAKl4B,MAAQk4B,EAAKn4B,IACX,EACHsgC,GAAUnI,EAAKl4B,IAAMk4B,EAAKn4B,KAAQ,GAC9C,CAQA,MAAMugC,GAAsB,CACxBC,QAASA,CAACpc,EAAQhU,KACd,IAAKA,EAAK7J,OACN,OAAO6d,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI9iB,GAAG7C,KAAK2lB,GAIR,OAAOA,EAHPA,EAAS/jB,WAAW+jB,EAK5B,CAKA,MAAMjlB,EAAIkhC,GAAgBjc,EAAQhU,EAAK7J,OAAOpH,GACxCC,EAAIihC,GAAgBjc,EAAQhU,EAAK7J,OAAOnH,GAC9C,MAAO,GAAP+B,OAAUhC,EAAC,MAAAgC,OAAK/B,EAAC,OCjCnBqhC,GAAmB,CACrBD,QAASA,CAACpc,EAAMlqB,KAAqC,IAAnC,UAAEwmC,EAAS,gBAAEC,GAAiBzmC,EAC5C,MAAM0mC,EAAWxc,EACXyc,EAASvjB,GAAQld,MAAMgkB,GAE7B,GAAIyc,EAAOhjC,OAAS,EAChB,OAAO+iC,EACX,MAAMziB,EAAWb,GAAQJ,kBAAkBkH,GACrCnc,EAA8B,kBAAd44B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBxhC,EAAEoB,MAAQmgC,EAAUvhC,EAC7C4hC,EAASJ,EAAgBvhC,EAAEmB,MAAQmgC,EAAUthC,EACnDyhC,EAAO,EAAI54B,IAAW64B,EACtBD,EAAO,EAAI54B,IAAW84B,EAOtB,MAAMC,EAAe70B,GAAI20B,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBF,EAAO,EAAI54B,KAClB44B,EAAO,EAAI54B,IAAW+4B,GAEQ,kBAAvBH,EAAO,EAAI54B,KAClB44B,EAAO,EAAI54B,IAAW+4B,GACnB7iB,EAAS0iB,KCpBxB,MAAMI,WAAiCC,EAAAA,UAMnCC,iBAAAA,GACI,MAAM,cAAE/lC,EAAa,YAAEgmC,EAAW,kBAAEC,EAAiB,SAAErmC,GAAaqV,KAAKvY,OACnE,WAAE8S,GAAexP,E3IjB/B,IAA2BkmC,I2IkBDC,G3IjBtBtqC,OAAOyP,OAAOhI,EAAiB4iC,G2IkBvB12B,IACIw2B,EAAYI,OACZJ,EAAYI,MAAMlU,IAAI1iB,GACtBy2B,GAAqBA,EAAkBrL,UAAYh7B,GACnDqmC,EAAkBrL,SAASprB,GAE/BA,EAAWmH,KAAK0vB,YAChB72B,EAAWwD,iBAAiB,oBAAqB,KAC7CiC,KAAKqxB,iBAET92B,EAAW+2B,YAAUlnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChBmQ,EAAWxF,SAAO,IACrBwwB,eAAgBA,IAAMvlB,KAAKqxB,mBAGnCxB,GAAsBE,gBAAiB,CAC3C,CACAwB,uBAAAA,CAAwBv2B,GACpB,MAAM,iBAAEw2B,EAAgB,cAAEzmC,EAAa,KAAEjC,EAAI,UAAEw8B,GAActlB,KAAKvY,MAC5D8S,EAAaxP,EAAcwP,WACjC,OAAKA,GASLA,EAAW+qB,UAAYA,EACnBx8B,GACAkS,EAAUw2B,mBAAqBA,QACVrpC,IAArBqpC,EACAj3B,EAAWk3B,aAGXzxB,KAAKqxB,eAELr2B,EAAUsqB,YAAcA,IACpBA,EACA/qB,EAAWm3B,UAELn3B,EAAWo3B,YAMjBv0B,GAAAA,GAAMmhB,WAAW,KACb,MAAMqT,EAAQr3B,EAAWs3B,WACpBD,GAAUA,EAAME,QAAQtkC,QACzBwS,KAAKqxB,kBAKd,MAnCI,IAoCf,CACAU,kBAAAA,GACI,MAAM,WAAEx3B,GAAeyF,KAAKvY,MAAMsD,cAC9BwP,IACAA,EAAWmH,KAAK0vB,YAChBY,eAAe,MACNz3B,EAAW03B,kBAAoB13B,EAAW23B,UAC3ClyB,KAAKqxB,iBAIrB,CACAc,oBAAAA,GACI,MAAM,cAAEpnC,EAAa,YAAEgmC,EAAaC,kBAAmBoB,GAAoBpyB,KAAKvY,OAC1E,WAAE8S,GAAexP,EACnBwP,IACAA,EAAW83B,4BACPtB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAMtP,OAAOtnB,GACzB63B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW/3B,GAEtC,CACA82B,YAAAA,GACI,MAAM,aAAEA,GAAiBrxB,KAAKvY,MAC9B4pC,GAAgBA,GACpB,CACArlC,MAAAA,GACI,OAAO,IACX,EAEJ,SAASvB,GAAchD,GACnB,MAAO69B,EAAW+L,GCnFtB,WACI,MAAMnpC,GAAUI,EAAAA,EAAAA,YAAW6C,EAAAA,GAC3B,GAAgB,OAAZjD,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEo9B,EAAS,eAAEC,EAAc,SAAEI,GAAaz9B,EAG1CiF,GAAKolC,EAAAA,EAAAA,SAGX,OAFApmC,EAAAA,EAAAA,WAAU,IAAMw5B,EAASx4B,GAAK,KAEtBm4B,GAAaC,EAAiB,EAAC,EADlB8L,IAAM9L,GAAkBA,EAAep4B,IACE,EAAC,EACnE,CDwEsCqlC,GAC5BzB,GAAczoC,EAAAA,EAAAA,YAAW4E,EAAAA,GAC/B,OAAQ2jC,EAAAA,cAA6BD,IAAwBxmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO3C,GAAK,IAAEspC,YAAaA,EAAaC,mBAAmB1oC,EAAAA,EAAAA,YAAWkB,GAA2B87B,UAAWA,EAAW+L,aAAcA,IACtM,CACA,MAAMH,GAAyB,CAC3Bt/B,cAAYxH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL8lC,IAAmB,IACtBuC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGR3gC,oBAAqBo+B,GACrBn+B,qBAAsBm+B,GACtBj+B,uBAAwBi+B,GACxBl+B,wBAAyBk+B,GACzBwC,UAAWtC,IEzHTuC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQnlC,OACrBqlC,GAAYnmC,GAA2B,kBAAVA,EAAqBsD,WAAWtD,GAASA,EACtEomC,GAAQpmC,GAA2B,kBAAVA,GAAsBuE,GAAG7C,KAAK1B,GA0C7D,SAASqmC,GAAUj5B,EAAQk5B,GACvB,YAA8B7qC,IAAvB2R,EAAOk5B,GACRl5B,EAAOk5B,GACPl5B,EAAOlI,YACjB,CAwBA,MAAMqhC,GAAkBC,GAAS,EAAG,GAAKjsB,IACnCksB,GAAmBD,GAAS,GAAK,IAAM1vB,GAAAA,GAC7C,SAAS0vB,GAASvjC,EAAKC,EAAKwW,GACxB,OAAQrgB,GAEAA,EAAI4J,EACG,EACP5J,EAAI6J,EACG,EACJwW,EAAO2E,GAASpb,EAAKC,EAAK7J,GAEzC,CCrFA,SAASqtC,GAAatL,EAAMuL,GACxBvL,EAAKn4B,IAAM0jC,EAAW1jC,IACtBm4B,EAAKl4B,IAAMyjC,EAAWzjC,GAC1B,CAMA,SAAS0jC,GAAYtJ,EAAKuJ,GACtBH,GAAapJ,EAAIl7B,EAAGykC,EAAUzkC,GAC9BskC,GAAapJ,EAAIj7B,EAAGwkC,EAAUxkC,EAClC,CCVA,SAASykC,GAAiBh1B,EAAO2pB,EAAWj4B,EAAOg4B,EAAa2B,GAM5D,OAJArrB,EAAQmrB,GADRnrB,GAAS2pB,EACiB,EAAIj4B,EAAOg4B,QACpB//B,IAAb0hC,IACArrB,EAAQmrB,GAAWnrB,EAAO,EAAIqrB,EAAU3B,IAErC1pB,CACX,CAsBA,SAASi1B,GAAqB3L,EAAMwC,EAAUzgC,EAA8B8N,EAAQ+7B,GAAY,IAA/CpqC,EAAKihC,EAAUC,GAAU3gC,GAlB1E,SAAyBi+B,GAA8F,IAAxFK,EAAS56B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAG2C,EAAK3C,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,EAAGoK,EAAMpK,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,GAAKs8B,EAAQt8B,UAAAC,OAAA,EAAAD,UAAA,QAAApF,EAAEkrC,EAAU9lC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAGu6B,EAAM4L,EAAUnmC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAGu6B,EACzG92B,GAAQ5C,KAAK+5B,KACbA,EAAYn4B,WAAWm4B,GAEvBA,EADyBrsB,GAAI43B,EAAW/jC,IAAK+jC,EAAW9jC,IAAKu4B,EAAY,KAC1CuL,EAAW/jC,KAE9C,GAAyB,kBAAdw4B,EACP,OACJ,IAAID,EAAcpsB,GAAIu3B,EAAW1jC,IAAK0jC,EAAWzjC,IAAK+H,GAClDmwB,IAASuL,IACTnL,GAAeC,GACnBL,EAAKn4B,IAAM6jC,GAAiB1L,EAAKn4B,IAAKw4B,EAAWj4B,EAAOg4B,EAAa2B,GACrE/B,EAAKl4B,IAAM4jC,GAAiB1L,EAAKl4B,IAAKu4B,EAAWj4B,EAAOg4B,EAAa2B,EACzE,CAMI8J,CAAgB7L,EAAMwC,EAAWhhC,GAAMghC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWp6B,MAAOyH,EAAQ+7B,EAClH,CAIA,MAAMhJ,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASiJ,GAAoB5J,EAAKM,EAAYiJ,EAAWM,GACrDJ,GAAqBzJ,EAAIl7B,EAAGw7B,EAAYI,GAAO6I,EAAYA,EAAUzkC,OAAI3G,EAAW0rC,EAAYA,EAAU/kC,OAAI3G,GAC9GsrC,GAAqBzJ,EAAIj7B,EAAGu7B,EAAYK,GAAO4I,EAAYA,EAAUxkC,OAAI5G,EAAW0rC,EAAYA,EAAU9kC,OAAI5G,EAClH,CCjDA,SAAS2rC,GAAgB5iB,GACrB,OAA2B,IAApBA,EAAMiX,WAAmC,IAAhBjX,EAAMhhB,KAC1C,CACA,SAAS6jC,GAAY7iB,GACjB,OAAO4iB,GAAgB5iB,EAAMpiB,IAAMglC,GAAgB5iB,EAAMniB,EAC7D,CAOA,SAASilC,GAAiBp1B,EAAGC,GACzB,OAAQhP,KAAKQ,MAAMuO,EAAE9P,EAAEa,OAASE,KAAKQ,MAAMwO,EAAE/P,EAAEa,MAC3CE,KAAKQ,MAAMuO,EAAE9P,EAAEc,OAASC,KAAKQ,MAAMwO,EAAE/P,EAAEc,MACvCC,KAAKQ,MAAMuO,EAAE7P,EAAEY,OAASE,KAAKQ,MAAMwO,EAAE9P,EAAEY,MACvCE,KAAKQ,MAAMuO,EAAE7P,EAAEa,OAASC,KAAKQ,MAAMwO,EAAE9P,EAAEa,IAC/C,CACA,SAASqkC,GAAYjK,GACjB,OAAOnC,GAAWmC,EAAIl7B,GAAK+4B,GAAWmC,EAAIj7B,EAC9C,CCpBA,MAAMmlC,GACFp0B,WAAAA,GACIE,KAAK8xB,QAAU,EACnB,CACA7U,GAAAA,CAAIld,GACAod,GAAcnd,KAAK8xB,QAAS/xB,GAC5BA,EAAKo0B,gBACT,CACAtS,MAAAA,CAAO9hB,GAKH,GAJAsd,GAAWrd,KAAK8xB,QAAS/xB,GACrBA,IAASC,KAAKo0B,WACdp0B,KAAKo0B,cAAWjsC,GAEhB4X,IAASC,KAAKq0B,KAAM,CACpB,MAAMD,EAAWp0B,KAAK8xB,QAAQ9xB,KAAK8xB,QAAQtkC,OAAS,GAChD4mC,GACAp0B,KAAK0xB,QAAQ0C,EAErB,CACJ,CACAzC,QAAAA,CAAS5xB,GACL,MAAMu0B,EAAct0B,KAAK8xB,QAAQyC,UAAWC,GAAWz0B,IAASy0B,GAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIv+B,EAAIy+B,EAAaz+B,GAAK,EAAGA,IAAK,CACnC,MAAM2+B,EAASx0B,KAAK8xB,QAAQj8B,GAC5B,IAAyB,IAArB2+B,EAAOlP,UAAqB,CAC5B8O,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAp0B,KAAK0xB,QAAQ0C,IACN,EAKf,CACA1C,OAAAA,CAAQ3xB,EAAM00B,GACV,MAAML,EAAWp0B,KAAKq0B,KACtB,GAAIt0B,IAASq0B,IAEbp0B,KAAKo0B,SAAWA,EAChBp0B,KAAKq0B,KAAOt0B,EACZA,EAAK20B,OACDN,GAAU,CACVA,EAASxnC,UAAYwnC,EAASD,iBAC9Bp0B,EAAKo0B,iBACLp0B,EAAK40B,WAAaP,EACdK,IACA10B,EAAK40B,WAAWC,iBAAkB,GAElCR,EAASS,WACT90B,EAAK80B,SAAWT,EAASS,SACzB90B,EAAK80B,SAAS//B,aACVs/B,EAASU,iBAAmBV,EAASt/B,cAEzCiL,EAAK2B,MAAQ3B,EAAK2B,KAAKqzB,aACvBh1B,EAAKi1B,eAAgB,GAEzB,MAAM,UAAEC,GAAcl1B,EAAKhL,SACT,IAAdkgC,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACIn1B,KAAK8xB,QAAQh1B,QAASiD,IAClB,MAAM,QAAEhL,EAAO,aAAEqgC,GAAiBr1B,EAClChL,EAAQwwB,gBAAkBxwB,EAAQwwB,iBAC9B6P,GACAA,EAAargC,QAAQwwB,gBACjB6P,EAAargC,QAAQwwB,kBAGrC,CACA4O,cAAAA,GACIn0B,KAAK8xB,QAAQh1B,QAASiD,IAClBA,EAAKnT,UAAYmT,EAAKo0B,gBAAe,IAE7C,CAKAkB,kBAAAA,GACQr1B,KAAKq0B,MAAQr0B,KAAKq0B,KAAKQ,WACvB70B,KAAKq0B,KAAKQ,cAAW1sC,EAE7B,EC5GJ,SAASmtC,GAAyBpkB,EAAOmf,EAAWkF,GAChD,IAAI9lC,EAAY,GAOhB,MAAM+lC,EAAatkB,EAAMpiB,EAAEq5B,UAAYkI,EAAUvhC,EAC3C2mC,EAAavkB,EAAMniB,EAAEo5B,UAAYkI,EAAUthC,EAWjD,IAVIymC,GAAcC,KACdhmC,EAAY,eAAHqB,OAAkB0kC,EAAU,QAAA1kC,OAAO2kC,EAAU,YAMtC,IAAhBpF,EAAUvhC,GAA2B,IAAhBuhC,EAAUthC,IAC/BU,GAAa,SAAJqB,OAAa,EAAIu/B,EAAUvhC,EAAC,MAAAgC,OAAK,EAAIu/B,EAAUthC,EAAC,OAEzDwmC,EAAiB,CACjB,MAAM,OAAEliC,EAAM,QAAEC,EAAO,QAAEC,GAAYgiC,EACjCliC,IACA5D,GAAa,UAAJqB,OAAcuC,EAAM,UAC7BC,IACA7D,GAAa,WAAJqB,OAAewC,EAAO,UAC/BC,IACA9D,GAAa,WAAJqB,OAAeyC,EAAO,SACvC,CAKA,MAAMmiC,EAAgBxkB,EAAMpiB,EAAEoB,MAAQmgC,EAAUvhC,EAC1C6mC,EAAgBzkB,EAAMniB,EAAEmB,MAAQmgC,EAAUthC,EAIhD,OAHsB,IAAlB2mC,GAAyC,IAAlBC,IACvBlmC,GAAa,SAAJqB,OAAa4kC,EAAa,MAAA5kC,OAAK6kC,EAAa,MAElDlmC,GAAa,MACxB,CCvCA,MAAMmmC,GAAiBA,CAACh3B,EAAGC,IAAMD,EAAEi3B,MAAQh3B,EAAEg3B,MCG7C,MAAMC,GACFh2B,WAAAA,GACIE,KAAK/F,SAAW,GAChB+F,KAAK+1B,SAAU,CACnB,CACA9Y,GAAAA,CAAItc,GACAwc,GAAcnd,KAAK/F,SAAU0G,GAC7BX,KAAK+1B,SAAU,CACnB,CACAlU,MAAAA,CAAOlhB,GACH0c,GAAWrd,KAAK/F,SAAU0G,GAC1BX,KAAK+1B,SAAU,CACnB,CACAj5B,OAAAA,CAAQuE,GACJrB,KAAK+1B,SAAW/1B,KAAK/F,SAASqoB,KAAKsT,IACnC51B,KAAK+1B,SAAU,EACf/1B,KAAK/F,SAAS6C,QAAQuE,EAC1B,ECMJ,MAAM20B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAI/oC,GAAK,EAKT,MAAMgpC,GAAsB,CACxB3mC,KAAM,kBACN4mC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoB1sC,GAA6F,IAA5F,qBAAE2sC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiB/sC,EACpH,OAAO,MACHiW,WAAAA,GAAuH,IAA3GhL,EAAYvH,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGvC,EAAMuC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAqB,OAAlBkpC,QAA4C,IAAlBA,OAA2B,EAASA,IAIlGz2B,KAAK7S,GAAKA,KAIV6S,KAAK62B,YAAc,EAOnB72B,KAAK/F,SAAW,IAAIzL,IAKpBwR,KAAKjL,QAAU,CAAC,EAMhBiL,KAAK82B,iBAAkB,EACvB92B,KAAKosB,oBAAqB,EAO1BpsB,KAAKg1B,eAAgB,EAKrBh1B,KAAK+2B,mBAAoB,EAKzB/2B,KAAKg3B,yBAA0B,EAK/Bh3B,KAAKi3B,kBAAmB,EAIxBj3B,KAAKk3B,uBAAwB,EAC7Bl3B,KAAKm3B,uBAAwB,EAK7Bn3B,KAAK+0B,YAAa,EAIlB/0B,KAAKo3B,OAAQ,EAKbp3B,KAAKq3B,YAAa,EAIlBr3B,KAAKs3B,sBAAuB,EAS5Bt3B,KAAKqwB,UAAY,CAAEvhC,EAAG,EAAGC,EAAG,GAI5BiR,KAAKu3B,cAAgB,IAAI5pC,IACzBqS,KAAKw3B,iBAAkB,EAEvBx3B,KAAKy3B,iBAAkB,EACvBz3B,KAAK03B,2BAA4B,EACjC13B,KAAK23B,kBAAoB,KACjB33B,KAAK+0B,aACL/0B,KAAK+0B,YAAa,EAClB/0B,KAAK43B,sBAQb53B,KAAK63B,iBAAmB,KCnJpC,IAAgBC,EDoJA93B,KAAK03B,2BAA4B,EAKjCvB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZt2B,KAAK+3B,MAAMj7B,QAAQk7B,IACnBh4B,KAAK+3B,MAAMj7B,QAAQm7B,IACnBj4B,KAAK+3B,MAAMj7B,QAAQo7B,IACnBl4B,KAAK+3B,MAAMj7B,QAAQq7B,IChKnBL,EDiKO3B,GChKftqC,OAAOusC,aACPvsC,OAAOusC,YAAYC,OAAOP,IDiKtB93B,KAAKs4B,cAAe,EACpBt4B,KAAKu4B,WAAY,EACjBv4B,KAAKw4B,kBAAoB,EAKzBx4B,KAAKy4B,YAAc,IAAI9qC,IACvBqS,KAAKlL,aAAeA,EACpBkL,KAAK0B,KAAO1W,EAASA,EAAO0W,MAAQ1W,EAASgV,KAC7CA,KAAK04B,KAAO1tC,EAAS,IAAIA,EAAO0tC,KAAM1tC,GAAU,GAChDgV,KAAKhV,OAASA,EACdgV,KAAK61B,MAAQ7qC,EAASA,EAAO6qC,MAAQ,EAAI,EACzC,IAAK,IAAIhgC,EAAI,EAAGA,EAAImK,KAAK04B,KAAKlrC,OAAQqI,IAClCmK,KAAK04B,KAAK7iC,GAAGyhC,sBAAuB,EAEpCt3B,KAAK0B,OAAS1B,OACdA,KAAK+3B,MAAQ,IAAIjC,GACzB,CACA/3B,gBAAAA,CAAiBnW,EAAMiW,GAInB,OAHKmC,KAAKu3B,cAAczpC,IAAIlG,IACxBoY,KAAKu3B,cAAcxpC,IAAInG,EAAM,IAAI21B,IAE9Bvd,KAAKu3B,cAAc3pC,IAAIhG,GAAMq1B,IAAIpf,EAC5C,CACA86B,eAAAA,CAAgB/wC,GACZ,MAAMgxC,EAAsB54B,KAAKu3B,cAAc3pC,IAAIhG,GAAM,QAAAmX,EAAAxR,UAAAC,OADpCqrC,EAAI,IAAA3xC,MAAA6X,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ45B,EAAI55B,EAAA,GAAA1R,UAAA0R,GAEzB25B,GAAuBA,EAAoBnb,UAAUob,EACzD,CACAC,YAAAA,CAAalxC,GACT,OAAOoY,KAAKu3B,cAAczpC,IAAIlG,EAClC,CAIAiF,KAAAA,CAAMD,GAAqD,IAA3CooC,EAAaznC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAGyS,KAAK0B,KAAK81B,gBACtC,GAAIx3B,KAAKpT,SACL,OExMhB,IAAsByN,EFyMV2F,KAAKo3B,OEzMK/8B,EFyMgBzN,aExMRmsC,YAAkC,QAApB1+B,EAAQoD,QFyMxCuC,KAAKpT,SAAWA,EAChB,MAAM,SAAEjC,EAAQ,OAAEvB,EAAM,cAAE2B,GAAkBiV,KAAKjL,QASjD,GARIhK,IAAkBA,EAAcS,SAChCT,EAAc8B,MAAMD,GAExBoT,KAAK0B,KAAKq2B,MAAM9a,IAAIjd,MACpBA,KAAKhV,QAAUgV,KAAKhV,OAAOiP,SAASgjB,IAAIjd,MACpCg1B,IAAkB5rC,GAAUuB,KAC5BqV,KAAKg1B,eAAgB,GAErBwB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsBA,IAAOj5B,KAAK0B,KAAKy1B,uBAAwB,EACrEX,EAAqB5pC,EAAU,KAC3BoT,KAAK0B,KAAKy1B,uBAAwB,EAClC6B,GAAeA,IACfA,EGrNpB,SAAe33B,EAAU63B,GACrB,MAAM7xC,EAAQutB,YAAYH,MACpB0kB,EAAetvC,IAAmB,IAAlB,UAAEyqB,GAAWzqB,EAC/B,MAAMutB,EAAU9C,EAAYjtB,EACxB+vB,GAAW8hB,KACX1kB,EAAAA,GAAAA,IAAY2kB,GACZ93B,EAAS+V,EAAU8hB,KAI3B,OADA97B,GAAAA,GAAMC,KAAK87B,GAAc,GAClB,KAAM3kB,EAAAA,GAAAA,IAAY2kB,EAC7B,CH0MkC5jB,CAAM0jB,EAAqB,KACrCpJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C9vB,KAAK+3B,MAAMj7B,QAAQs8B,MAG/B,CACIzuC,GACAqV,KAAK0B,KAAK23B,mBAAmB1uC,EAAUqV,OAGd,IAAzBA,KAAKjL,QAAQrN,SACbqD,IACCJ,GAAYvB,IACb4W,KAAKjC,iBAAiB,YAAa/Q,IAA+E,IAA9E,MAAEkkB,EAAK,iBAAEye,EAAgB,yBAAE2J,EAA0BlwC,OAAQmwC,GAAYvsC,EACzG,GAAIgT,KAAKw5B,yBAGL,OAFAx5B,KAAK9J,YAAS/N,OACd6X,KAAKy5B,oBAAiBtxC,GAI1B,MAAMuxC,EAAmB15B,KAAKjL,QAAQkI,YAClClS,EAAckvB,wBACd0f,IACE,uBAAEC,EAAsB,0BAAEC,GAA+B9uC,EAAcwV,WAKvEu5B,GAAiB95B,KAAK+5B,eACvB/F,GAAiBh0B,KAAK+5B,aAAcR,IACrCD,EAMEU,GAAgCrK,GAAoB2J,EAC1D,GAAIt5B,KAAKjL,QAAQklC,YACZj6B,KAAK20B,YAAc30B,KAAK20B,WAAW/nC,UACpCotC,GACCrK,IACImK,IAAkB95B,KAAKiyB,kBAAoB,CAC5CjyB,KAAK20B,aACL30B,KAAKo1B,aAAep1B,KAAK20B,WACzB30B,KAAKo1B,aAAaA,kBAAejtC,GAErC6X,KAAKk6B,mBAAmBhpB,EAAO8oB,GAC/B,MAAMG,GAAgB/vC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfqxB,GAAmBie,EAAkB,WAAS,IACjD7jB,OAAQ+jB,EACR7jB,WAAY8jB,KAEZ9uC,EAAc62B,oBACd5hB,KAAKjL,QAAQklC,cACbE,EAAiB5kB,MAAQ,EACzB4kB,EAAiB3qC,MAAO,GAE5BwQ,KAAKyf,eAAe0a,EACxB,MAOSxK,GACDyJ,GAAgBp5B,MAEhBA,KAAKkyB,UAAYlyB,KAAKjL,QAAQwwB,gBAC9BvlB,KAAKjL,QAAQwwB,iBAGrBvlB,KAAK+5B,aAAeR,GAGhC,CACAzsC,OAAAA,GACIkT,KAAKjL,QAAQpK,UAAYqV,KAAKyxB,aAC9BzxB,KAAK0B,KAAKq2B,MAAMlW,OAAO7hB,MACvB,MAAM4xB,EAAQ5xB,KAAK6xB,WACnBD,GAASA,EAAM/P,OAAO7hB,MACtBA,KAAKhV,QAAUgV,KAAKhV,OAAOiP,SAASkI,OAAOnC,MAC3CA,KAAKpT,cAAWzE,GAChBqsB,EAAAA,GAAAA,IAAYxU,KAAK63B,iBACrB,CAEAuC,WAAAA,GACIp6B,KAAKk3B,uBAAwB,CACjC,CACAmD,aAAAA,GACIr6B,KAAKk3B,uBAAwB,CACjC,CACAoD,eAAAA,GACI,OAAOt6B,KAAKk3B,uBAAyBl3B,KAAKm3B,qBAC9C,CACAqC,sBAAAA,GACI,OAAQx5B,KAAKosB,oBACRpsB,KAAKhV,QAAUgV,KAAKhV,OAAOwuC,2BAC5B,CACR,CAEAe,WAAAA,GACQv6B,KAAKs6B,oBAETt6B,KAAK+0B,YAAa,EAClB/0B,KAAK+3B,OAAS/3B,KAAK+3B,MAAMj7B,QAAQ09B,IACjCx6B,KAAK62B,cACT,CACA4D,oBAAAA,GACI,MAAM,cAAE1vC,GAAkBiV,KAAKjL,QAC/B,OAAOhK,GAAiBA,EAAcwV,WAAWvL,iBACrD,CACAy8B,UAAAA,GAAyC,IAA9BiJ,IAAqBntC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,KAAAA,UAAA,GAE5B,GADAyS,KAAK0B,KAAK81B,iBAAkB,EACxBx3B,KAAK0B,KAAK44B,kBAEV,YADAt6B,KAAKjL,QAAQwwB,gBAAkBvlB,KAAKjL,QAAQwwB,kBAIhD,IADCvlB,KAAK0B,KAAKqzB,YAAc/0B,KAAK0B,KAAK64B,cAC/Bv6B,KAAKg1B,cACL,OACJh1B,KAAKg1B,eAAgB,EACrB,IAAK,IAAIn/B,EAAI,EAAGA,EAAImK,KAAK04B,KAAKlrC,OAAQqI,IAAK,CACvC,MAAMkK,EAAOC,KAAK04B,KAAK7iC,GACvBkK,EAAKu3B,sBAAuB,EAC5Bv3B,EAAKovB,aAAa,YACdpvB,EAAKhL,QAAQklC,YACbl6B,EAAK0xB,YAAW,EAExB,CACA,MAAM,SAAE9mC,EAAQ,OAAEvB,GAAW4W,KAAKjL,QAClC,QAAiB5M,IAAbwC,IAA2BvB,EAC3B,OACJ,MAAM4L,EAAoBgL,KAAKy6B,uBAC/Bz6B,KAAK26B,2BAA6B3lC,EAC5BA,EAAkBgL,KAAKlL,aAAc,SACrC3M,EACN6X,KAAK46B,iBACLF,GAAyB16B,KAAK24B,gBAAgB,aAClD,CACAhtC,MAAAA,GACIqU,KAAKy3B,iBAAkB,EAKvB,GAJyBz3B,KAAKs6B,kBAQ1B,OAHAt6B,KAAKq6B,gBACLr6B,KAAK43B,yBACL53B,KAAK+3B,MAAMj7B,QAAQ+9B,IAGlB76B,KAAK+0B,YACN/0B,KAAK+3B,MAAMj7B,QAAQg+B,IAEvB96B,KAAK+0B,YAAa,EAIlB/0B,KAAK+3B,MAAMj7B,QAAQi+B,IAKnB/6B,KAAK+3B,MAAMj7B,QAAQsyB,IAKnBpvB,KAAK+3B,MAAMj7B,QAAQk+B,IACnBh7B,KAAK43B,oBAML,MAAMnjB,EAAMG,YAAYH,MACxBC,GAAAA,GAAUxD,MAAQxhB,EAAM,EAAG,IAAO,GAAI+kB,EAAMC,GAAAA,GAAUJ,WACtDI,GAAAA,GAAUJ,UAAYG,EACtBC,GAAAA,GAAUC,cAAe,EACzBsmB,GAAAA,GAAMtvC,OAAOuvC,QAAQxmB,GAAAA,IACrBumB,GAAAA,GAAME,UAAUD,QAAQxmB,GAAAA,IACxBumB,GAAAA,GAAMjvC,OAAOkvC,QAAQxmB,GAAAA,IACrBA,GAAAA,GAAUC,cAAe,CAC7B,CACAyc,SAAAA,GACSpxB,KAAKy3B,kBACNz3B,KAAKy3B,iBAAkB,EACvBzF,eAAe,IAAMhyB,KAAKrU,UAElC,CACAisC,iBAAAA,GACI53B,KAAK+3B,MAAMj7B,QAAQs+B,IACnBp7B,KAAKy4B,YAAY37B,QAAQu+B,GAC7B,CACAC,wBAAAA,GACSt7B,KAAK03B,4BACN13B,KAAK03B,2BAA4B,EACjCt6B,GAAAA,GAAM+9B,UAAUn7B,KAAK63B,kBAAkB,GAAO,GAEtD,CACAxF,yBAAAA,GAMIj1B,GAAAA,GAAMmhB,WAAW,KACTve,KAAKg1B,cACLh1B,KAAK0B,KAAK0vB,YAGVpxB,KAAK0B,KAAKi2B,qBAGtB,CAIAiD,cAAAA,IACQ56B,KAAK60B,UAAa70B,KAAKpT,WAE3BoT,KAAK60B,SAAW70B,KAAKstB,UACzB,CACA8B,YAAAA,GACI,IAAKpvB,KAAKpT,SACN,OAGJ,GADAoT,KAAKmvB,iBACCnvB,KAAKjL,QAAQwmC,sBAAuBv7B,KAAKkyB,YAC1ClyB,KAAKg1B,cACN,OASJ,GAAIh1B,KAAK20B,aAAe30B,KAAK20B,WAAW/nC,SACpC,IAAK,IAAIiJ,EAAI,EAAGA,EAAImK,KAAK04B,KAAKlrC,OAAQqI,IAAK,CAC1BmK,KAAK04B,KAAK7iC,GAClBs5B,cACT,CAEJ,MAAMqM,EAAax7B,KAAK5W,OACxB4W,KAAK5W,OAAS4W,KAAKstB,SAAQ,GAC3BttB,KAAKy7B,gBtBxcC,CACd3sC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsB0c7BoQ,KAAKg1B,eAAgB,EACrBh1B,KAAKswB,qBAAkBnoC,EACvB6X,KAAK24B,gBAAgB,UAAW34B,KAAK5W,OAAOmjC,WAC5C,MAAM,cAAExhC,GAAkBiV,KAAKjL,QAC/BhK,GACIA,EAAc0yB,OAAO,gBAAiBzd,KAAK5W,OAAOmjC,UAAWiP,EAAaA,EAAWjP,eAAYpkC,EACzG,CACAgnC,YAAAA,GAAgC,IAAnBuM,EAAKnuC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,UACbouC,EAAmB7zC,QAAQkY,KAAKjL,QAAQ6mC,cAAgB57B,KAAKpT,UAC7DoT,KAAKkuB,QACLluB,KAAKkuB,OAAO2I,cAAgB72B,KAAK0B,KAAKm1B,aACtC72B,KAAKkuB,OAAOwN,QAAUA,IACtBC,GAAmB,GAEnBA,IACA37B,KAAKkuB,OAAS,CACV2I,YAAa72B,KAAK0B,KAAKm1B,YACvB6E,QACAG,OAAQlF,EAAkB32B,KAAKpT,UAC/BgL,OAAQ8+B,EAAc12B,KAAKpT,WAGvC,CACAgqC,cAAAA,GACI,IAAKA,EACD,OACJ,MAAMkF,EAAmB97B,KAAKg1B,eAAiBh1B,KAAKs3B,qBAC9CyE,EAAgB/7B,KAAKswB,kBAAoByD,GAAY/zB,KAAKswB,iBAC1Dt7B,EAAoBgL,KAAKy6B,uBACzBuB,EAAyBhnC,EACzBA,EAAkBgL,KAAKlL,aAAc,SACrC3M,EACA8zC,EAA8BD,IAA2Bh8B,KAAK26B,2BAChEmB,IACCC,GACG3mC,GAAa4K,KAAKlL,eAClBmnC,KACJrF,EAAe52B,KAAKpT,SAAUovC,GAC9Bh8B,KAAKs3B,sBAAuB,EAC5Bt3B,KAAKm0B,iBAEb,CACA7G,OAAAA,GAAgC,IAAxB4O,IAAe3uC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,KAAAA,UAAA,GACnB,MAAM4uC,EAAUn8B,KAAKmuB,iBACrB,IAAI5B,EAAYvsB,KAAKo8B,oBAAoBD,GA+8BrD,IAAkBnS,EAr8BN,OAJIkS,IACA3P,EAAYvsB,KAAKk8B,gBAAgB3P,IAy8B7C8P,IADcrS,EAt8BGuC,GAu8BHz9B,GACdutC,GAAUrS,EAAIj7B,GAv8BC,CACH8nC,YAAa72B,KAAK0B,KAAKm1B,YACvByF,YAAaH,EACb5P,YACAz3B,aAAc,CAAC,EACfqB,OAAQ6J,KAAK7S,GAErB,CACAghC,cAAAA,GACI,MAAM,cAAEpjC,GAAkBiV,KAAKjL,QAC/B,IAAKhK,EACD,MtB1gBE,CACd+D,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsB4gB7B,MAAMo6B,EAAMj/B,EAAc8/B,sBAEpB,OAAEqD,GAAWluB,KAAK0B,KAKxB,OAJIwsB,IACA9D,GAAcJ,EAAIl7B,EAAGo/B,EAAOt2B,OAAO9I,GACnCs7B,GAAcJ,EAAIj7B,EAAGm/B,EAAOt2B,OAAO7I,IAEhCi7B,CACX,CACAoS,mBAAAA,CAAoBpS,GAChB,MAAMuS,EtBrhBA,CACdztC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsBuhB7B0jC,GAAYiJ,EAAkBvS,GAK9B,IAAK,IAAIn0B,EAAI,EAAGA,EAAImK,KAAK04B,KAAKlrC,OAAQqI,IAAK,CACvC,MAAMkK,EAAOC,KAAK04B,KAAK7iC,IACjB,OAAEq4B,EAAM,QAAEn5B,GAAYgL,EAC5B,GAAIA,IAASC,KAAK0B,MAAQwsB,GAAUn5B,EAAQ6mC,aAAc,CAKtD,GAAI1N,EAAO2N,OAAQ,CACfvI,GAAYiJ,EAAkBvS,GAC9B,MAAQkE,OAAQsO,GAAex8B,KAAK0B,KAKhC86B,IACApS,GAAcmS,EAAiBztC,GAAI0tC,EAAW5kC,OAAO9I,GACrDs7B,GAAcmS,EAAiBxtC,GAAIytC,EAAW5kC,OAAO7I,GAE7D,CACAq7B,GAAcmS,EAAiBztC,EAAGo/B,EAAOt2B,OAAO9I,GAChDs7B,GAAcmS,EAAiBxtC,EAAGm/B,EAAOt2B,OAAO7I,EACpD,CACJ,CACA,OAAOwtC,CACX,CACAE,cAAAA,CAAezS,GAA4B,IAAvB0S,EAAanvC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,IAAAA,UAAA,GAC7B,MAAMovC,EtBtjBA,CACd7tC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsBwjB7B0jC,GAAYqJ,EAAgB3S,GAC5B,IAAK,IAAIn0B,EAAI,EAAGA,EAAImK,KAAK04B,KAAKlrC,OAAQqI,IAAK,CACvC,MAAMkK,EAAOC,KAAK04B,KAAK7iC,IAClB6mC,GACD38B,EAAKhL,QAAQ6mC,cACb77B,EAAKmuB,QACLnuB,IAASA,EAAK2B,MACdkpB,GAAa+R,EAAgB,CACzB7tC,GAAIiR,EAAKmuB,OAAOt2B,OAAO9I,EACvBC,GAAIgR,EAAKmuB,OAAOt2B,OAAO7I,IAG1BqG,GAAa2K,EAAKjL,eAEvB81B,GAAa+R,EAAgB58B,EAAKjL,aACtC,CAIA,OAHIM,GAAa4K,KAAKlL,eAClB81B,GAAa+R,EAAgB38B,KAAKlL,cAE/B6nC,CACX,CACAT,eAAAA,CAAgBlS,GACZ,MAAM4S,EtB7kBA,CACd9tC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsB+kB7B0jC,GAAYsJ,EAAqB5S,GACjC,IAAK,IAAIn0B,EAAI,EAAGA,EAAImK,KAAK04B,KAAKlrC,OAAQqI,IAAK,CACvC,MAAMkK,EAAOC,KAAK04B,KAAK7iC,GACvB,IAAKkK,EAAKnT,SACN,SACJ,IAAKwI,GAAa2K,EAAKjL,cACnB,SACJ00B,GAASzpB,EAAKjL,eAAiBiL,EAAK66B,iBACpC,MAAM/G,EAAYzK,KAElBkK,GAAYO,EADI9zB,EAAKouB,kBAErByF,GAAoBgJ,EAAqB78B,EAAKjL,aAAciL,EAAK80B,SAAW90B,EAAK80B,SAAStI,eAAYpkC,EAAW0rC,EACrH,CAIA,OAHIz+B,GAAa4K,KAAKlL,eAClB8+B,GAAoBgJ,EAAqB58B,KAAKlL,cAE3C8nC,CACX,CACAC,cAAAA,CAAe3rB,GACXlR,KAAK88B,YAAc5rB,EACnBlR,KAAK0B,KAAK45B,2BACVt7B,KAAK+2B,mBAAoB,CAC7B,CACAzF,UAAAA,CAAWv8B,GACPiL,KAAKjL,SAAO3K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL4V,KAAKjL,SACLA,GAAO,IACVkgC,eAAiC9sC,IAAtB4M,EAAQkgC,WAA0BlgC,EAAQkgC,WAE7D,CACA4F,iBAAAA,GACI76B,KAAKkuB,YAAS/lC,EACd6X,KAAK5W,YAASjB,EACd6X,KAAK60B,cAAW1sC,EAChB6X,KAAK26B,gCAA6BxyC,EAClC6X,KAAK88B,iBAAc30C,EACnB6X,KAAK9J,YAAS/N,EACd6X,KAAKg1B,eAAgB,CACzB,CACA+H,kCAAAA,GACS/8B,KAAKg9B,gBAQNh9B,KAAKg9B,eAAeC,2BACpBvoB,GAAAA,GAAUJ,WACVtU,KAAKg9B,eAAe/E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5BiF,EAAkB3vC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,IAAAA,UAAA,GACjC,IAAIkK,EAMJ,MAAM48B,EAAOr0B,KAAKm9B,UAClBn9B,KAAK+2B,oBAAsB/2B,KAAK+2B,kBAAoB1C,EAAK0C,mBACzD/2B,KAAKi3B,mBAAqBj3B,KAAKi3B,iBAAmB5C,EAAK4C,kBACvDj3B,KAAKg3B,0BAA4Bh3B,KAAKg3B,wBAA0B3C,EAAK2C,yBACrE,MAAMoG,EAAWt1C,QAAQkY,KAAKo1B,eAAiBp1B,OAASq0B,EAUxD,KALkB6I,GACbE,GAAYp9B,KAAKg3B,yBAClBh3B,KAAK+2B,oBACmB,QAAtBt/B,EAAKuI,KAAKhV,cAA2B,IAAPyM,OAAgB,EAASA,EAAGs/B,oBAC5D/2B,KAAKq9B,gCAEL,OACJ,MAAM,OAAEj0C,EAAM,SAAEuB,GAAaqV,KAAKjL,QAIlC,GAAKiL,KAAK5W,SAAYA,GAAUuB,GAAhC,CASA,GAPAqV,KAAKi9B,yBAA2BvoB,GAAAA,GAAUJ,WAOrCtU,KAAK88B,cAAgB98B,KAAKy5B,eAAgB,CAE3C,MAAMuD,EAAiBh9B,KAAKs9B,6BACxBN,GACAA,EAAe5zC,QACY,IAA3B4W,KAAKw4B,mBACLx4B,KAAKg9B,eAAiBA,EACtBh9B,KAAK+8B,qCACL/8B,KAAKy5B,etB/qBP,CACd3qC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsBirBrBoQ,KAAKu9B,qBtBhrBP,CACdzuC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsBkrBrB44B,GAAqBxoB,KAAKu9B,qBAAsBv9B,KAAK5W,OAAOmjC,UAAWyQ,EAAe5zC,OAAOmjC,WAC7F+G,GAAYtzB,KAAKy5B,eAAgBz5B,KAAKu9B,uBAGtCv9B,KAAKg9B,eAAiBh9B,KAAKy5B,oBAAiBtxC,CAEpD,CAKA,GAAK6X,KAAKy5B,gBAAmBz5B,KAAK88B,YAAlC,CxB5qBZ,IAAyB5mC,EAAQoyB,EAAUt9B,EwBqtB/B,GApCKgV,KAAK9J,SACN8J,KAAK9J,OtBlsBH,CACdpH,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsBosBzBoQ,KAAKw9B,qBtBnsBH,CACd1uC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,KsBysBzBoQ,KAAKy5B,gBACLz5B,KAAKu9B,sBACLv9B,KAAKg9B,gBACLh9B,KAAKg9B,eAAe9mC,QACpB8J,KAAK+8B,qCxB5rBI7mC,EwB6rBO8J,KAAK9J,OxB7rBJoyB,EwB6rBYtoB,KAAKy5B,exB7rBPzuC,EwB6rBuBgV,KAAKg9B,eAAe9mC,OxB5rBlFmyB,GAAiBnyB,EAAOpH,EAAGw5B,EAASx5B,EAAG9D,EAAO8D,GAC9Cu5B,GAAiBnyB,EAAOnH,EAAGu5B,EAASv5B,EAAG/D,EAAO+D,IwBgsB7BiR,KAAK88B,aACNh1C,QAAQkY,KAAKo1B,cAEbp1B,KAAK9J,OAAS8J,KAAKy8B,eAAez8B,KAAK5W,OAAOmjC,WAG9C+G,GAAYtzB,KAAK9J,OAAQ8J,KAAK5W,OAAOmjC,WAEzCxC,GAAc/pB,KAAK9J,OAAQ8J,KAAK88B,cAMhCxJ,GAAYtzB,KAAK9J,OAAQ8J,KAAK5W,OAAOmjC,WAKrCvsB,KAAKq9B,+BAAgC,CACrCr9B,KAAKq9B,gCAAiC,EACtC,MAAML,EAAiBh9B,KAAKs9B,6BACxBN,GACAl1C,QAAQk1C,EAAe5H,gBACnBttC,QAAQkY,KAAKo1B,gBAChB4H,EAAejoC,QAAQ6mC,cACxBoB,EAAe9mC,QACY,IAA3B8J,KAAKw4B,mBACLx4B,KAAKg9B,eAAiBA,EACtBh9B,KAAK+8B,qCACL/8B,KAAKy5B,etBhvBP,CACd3qC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsBkvBrBoQ,KAAKu9B,qBtBjvBP,CACdzuC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsBmvBrB44B,GAAqBxoB,KAAKu9B,qBAAsBv9B,KAAK9J,OAAQ8mC,EAAe9mC,QAC5Eo9B,GAAYtzB,KAAKy5B,eAAgBz5B,KAAKu9B,uBAGtCv9B,KAAKg9B,eAAiBh9B,KAAKy5B,oBAAiBtxC,CAEpD,CAIAguC,GAAoBE,sBA/DV,CA9BA,CA8Fd,CACAiH,0BAAAA,GACI,GAAKt9B,KAAKhV,SACNw+B,GAASxpB,KAAKhV,OAAO8J,gBACrB20B,GAAezpB,KAAKhV,OAAO8J,cAG/B,OAAIkL,KAAKhV,OAAOyyC,eACLz9B,KAAKhV,OAGLgV,KAAKhV,OAAOsyC,4BAE3B,CACAG,YAAAA,GACI,OAAO31C,SAASkY,KAAKy5B,gBACjBz5B,KAAK88B,aACL98B,KAAKjL,QAAQklC,aACbj6B,KAAK5W,OACb,CACA8uC,cAAAA,GACI,IAAIzgC,EACJ,MAAM48B,EAAOr0B,KAAKm9B,UACZC,EAAWt1C,QAAQkY,KAAKo1B,eAAiBp1B,OAASq0B,EACxD,IAAI1S,GAAU,EAuBd,IAlBI3hB,KAAK+2B,oBAA6C,QAAtBt/B,EAAKuI,KAAKhV,cAA2B,IAAPyM,OAAgB,EAASA,EAAGs/B,sBACtFpV,GAAU,GAMVyb,IACCp9B,KAAKg3B,yBAA2Bh3B,KAAKi3B,oBACtCtV,GAAU,GAMV3hB,KAAKi9B,2BAA6BvoB,GAAAA,GAAUJ,YAC5CqN,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEv4B,EAAM,SAAEuB,GAAaqV,KAAKjL,QAWlC,GANAiL,KAAK82B,gBAAkBhvC,QAASkY,KAAKhV,QAAUgV,KAAKhV,OAAO8rC,iBACvD92B,KAAKiyB,kBACLjyB,KAAK09B,kBACJ19B,KAAK82B,kBACN92B,KAAK88B,YAAc98B,KAAKy5B,oBAAiBtxC,IAExC6X,KAAK5W,SAAYA,IAAUuB,EAC5B,OAKJ2oC,GAAYtzB,KAAKy7B,gBAAiBz7B,KAAK5W,OAAOmjC,WAI9C,MAAMoR,EAAiB39B,KAAKqwB,UAAUvhC,EAChC8uC,EAAiB59B,KAAKqwB,UAAUthC,GlBvyBlD,SAAyBi7B,EAAKqG,EAAWwN,GAAsC,IAA5BC,EAAkBvwC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,IAAAA,UAAA,GACjE,MAAMwwC,EAAaF,EAASrwC,OAC5B,IAAKuwC,EACD,OAGJ,IAAIh+B,EACAmR,EAFJmf,EAAUvhC,EAAIuhC,EAAUthC,EAAI,EAG5B,IAAK,IAAI8G,EAAI,EAAGA,EAAIkoC,EAAYloC,IAAK,CACjCkK,EAAO89B,EAAShoC,GAChBqb,EAAQnR,EAAKuwB,gBAKb,MAAM1jC,EAAWmT,EAAKnT,SAClBA,GACAA,EAASqI,OACkB,aAA3BrI,EAASqI,MAAM+oC,UAGfF,GACA/9B,EAAKhL,QAAQ6mC,cACb77B,EAAKmuB,QACLnuB,IAASA,EAAK2B,MACdkpB,GAAaZ,EAAK,CACdl7B,GAAIiR,EAAKmuB,OAAOt2B,OAAO9I,EACvBC,GAAIgR,EAAKmuB,OAAOt2B,OAAO7I,IAG3BmiB,IAEAmf,EAAUvhC,GAAKoiB,EAAMpiB,EAAEoB,MACvBmgC,EAAUthC,GAAKmiB,EAAMniB,EAAEmB,MAEvB65B,GAAcC,EAAK9Y,IAEnB4sB,GAAsB1oC,GAAa2K,EAAKjL,eACxC81B,GAAaZ,EAAKjqB,EAAKjL,cAE/B,CAKAu7B,EAAUvhC,EAAIm7B,GAAcoG,EAAUvhC,GACtCuhC,EAAUthC,EAAIk7B,GAAcoG,EAAUthC,EAC1C,CkB6vBYkvC,CAAgBj+B,KAAKy7B,gBAAiBz7B,KAAKqwB,UAAWrwB,KAAK04B,KAAM0E,IAK7D/I,EAAKjrC,QACJirC,EAAKn+B,QACgB,IAArB8J,KAAKqwB,UAAUvhC,GAAgC,IAArBkR,KAAKqwB,UAAUthC,IAC1CslC,EAAKn+B,OAASm+B,EAAKjrC,OAAOmjC,WAE9B,MAAM,OAAEr2B,GAAWm+B,EACnB,IAAKn+B,EAWD,YALI8J,KAAKk+B,sBACLl+B,KAAKswB,gBtBh2BL,CAChBxhC,EAPoB,CACpBq5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,GAIbn5B,EARoB,CACpBo5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,IsBm2BGloB,KAAKk+B,oBAAsB,OAC3Bl+B,KAAKm0B,mBAIRn0B,KAAKswB,kBACNtwB,KAAKswB,gBtBv2BD,CAChBxhC,EAPoB,CACpBq5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,GAIbn5B,EARoB,CACpBo5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,IsB02BDloB,KAAKm+B,6BtBx2BD,CAChBrvC,EAPoB,CACpBq5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,GAIbn5B,EARoB,CACpBo5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,KsB42BL,MAAMkW,EAA0Bp+B,KAAKk+B,oBAUrC9V,GAAapoB,KAAKswB,gBAAiBtwB,KAAKy7B,gBAAiBvlC,EAAQ8J,KAAKlL,cACtEkL,KAAKk+B,oBAAsB5I,GAAyBt1B,KAAKswB,gBAAiBtwB,KAAKqwB,WAC3ErwB,KAAKk+B,sBAAwBE,GAC7Bp+B,KAAKqwB,UAAUvhC,IAAM6uC,GACrB39B,KAAKqwB,UAAUthC,IAAM6uC,IACrB59B,KAAKs4B,cAAe,EACpBt4B,KAAKm0B,iBACLn0B,KAAK24B,gBAAgB,mBAAoBziC,IAK7CigC,GAAoBG,wBACxB,CACApB,IAAAA,GACIl1B,KAAKu4B,WAAY,CAErB,CACA7D,IAAAA,GACI10B,KAAKu4B,WAAY,CAErB,CACApE,cAAAA,GAAiC,IAAlBkK,IAAS9wC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,KAAAA,UAAA,GAEpB,GADAyS,KAAKjL,QAAQo/B,gBAAkBn0B,KAAKjL,QAAQo/B,iBACxCkK,EAAW,CACX,MAAMzM,EAAQ5xB,KAAK6xB,WACnBD,GAASA,EAAMuC,gBACnB,CACIn0B,KAAKo1B,eAAiBp1B,KAAKo1B,aAAaxoC,WACxCoT,KAAKo1B,kBAAejtC,EAE5B,CACA+xC,kBAAAA,CAAmBhpB,GAA6C,IAAtC8oB,EAA4BzsC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,IAAAA,UAAA,GAClD,MAAMsnC,EAAW70B,KAAK60B,SAChByJ,EAAuBzJ,EACvBA,EAAS//B,aACT,CAAC,EACDypC,GAAWn0C,EAAAA,EAAAA,GAAA,GAAQ4V,KAAKlL,cACxBgoC,EtB15BE,CAChBhuC,EAPoB,CACpBq5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,GAIbn5B,EARoB,CACpBo5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,IsB65BAloB,KAAKg9B,gBACLh9B,KAAKg9B,eAAejoC,QAAQklC,aAC7Bj6B,KAAKy5B,eAAiBz5B,KAAKu9B,0BAAuBp1C,GAEtD6X,KAAKq9B,gCAAkCrD,EACvC,MAAMwE,EtB35BA,CACd1vC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsB+5BvB6uC,GAFiB5J,EAAWA,EAAS1+B,YAAShO,MAC/B6X,KAAK5W,OAAS4W,KAAK5W,OAAO+M,YAAShO,GAElDypC,EAAQ5xB,KAAK6xB,WACb6M,GAAgB9M,GAASA,EAAME,QAAQtkC,QAAU,EACjDmxC,EAAyB72C,QAAQ22C,IAClCC,IAC0B,IAA3B1+B,KAAKjL,QAAQkgC,YACZj1B,KAAK04B,KAAK/wC,KAAKi3C,KAEpB,IAAIC,EADJ7+B,KAAKw4B,kBAAoB,EAEzBx4B,KAAK8+B,eAAkB/qB,IACnB,MAAMhJ,EAAWgJ,EAAS,IL36B1C,IAAmBnV,EAAGC,EK66CNkO,EAAQlC,EAAMC,EAAI/kB,EAjgBlBg5C,GAAajC,EAAYhuC,EAAGoiB,EAAMpiB,EAAGic,GACrCg0B,GAAajC,EAAY/tC,EAAGmiB,EAAMniB,EAAGgc,GACrC/K,KAAK68B,eAAeC,GAChB98B,KAAKy5B,gBACLz5B,KAAKu9B,sBACLv9B,KAAK5W,QACL4W,KAAKg9B,gBACLh9B,KAAKg9B,eAAe5zC,SACpBo/B,GAAqBgW,EAAgBx+B,KAAK5W,OAAOmjC,UAAWvsB,KAAKg9B,eAAe5zC,OAAOmjC,WAyf3Fxf,EAxfW/M,KAAKy5B,eAwfR5uB,EAxfwB7K,KAAKu9B,qBAwfvBzyB,EAxf6C0zB,EAwfzCz4C,EAxfyDglB,EAyfvFi0B,GAAQjyB,EAAOje,EAAG+b,EAAK/b,EAAGgc,EAAGhc,EAAG/I,GAChCi5C,GAAQjyB,EAAOhe,EAAG8b,EAAK9b,EAAG+b,EAAG/b,EAAGhJ,GArfZ84C,IL17BLjgC,EK27BeoB,KAAKy5B,eL37BjB56B,EK27BiCggC,EL17B3CjgC,EAAE9P,EAAEa,MAAQkP,EAAE/P,EAAEa,KACpBiP,EAAE9P,EAAEc,MAAQiP,EAAE/P,EAAEc,KAChBgP,EAAE7P,EAAEY,MAAQkP,EAAE9P,EAAEY,KAChBiP,EAAE7P,EAAEa,MAAQiP,EAAE9P,EAAEa,OKw7BAoQ,KAAK+2B,mBAAoB,GAExB8H,IACDA,EtB57BN,CACd/vC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,KsB87BrB0jC,GAAYuL,EAAoB7+B,KAAKy5B,iBAErCgF,IACAz+B,KAAK80B,gBAAkByJ,ERj8B3C,SAAmBroC,EAAQ+oC,EAAQ5K,EAAMtpB,EAAU4zB,EAAwBD,GACnEC,GACAzoC,EAAO9B,QAAU0H,GAAI,OAEJ3T,IAAjBksC,EAAKjgC,QAAwBigC,EAAKjgC,QAAU,EAAG6+B,GAAgBloB,IAC/D7U,EAAOgpC,YAAcpjC,QAAuB3T,IAAnB82C,EAAO7qC,QAAwB6qC,EAAO7qC,QAAU,EAAG,EAAG++B,GAAiBpoB,KAE3F2zB,IACLxoC,EAAO9B,QAAU0H,QAAuB3T,IAAnB82C,EAAO7qC,QAAwB6qC,EAAO7qC,QAAU,OAAoBjM,IAAjBksC,EAAKjgC,QAAwBigC,EAAKjgC,QAAU,EAAG2W,IAK3H,IAAK,IAAIlV,EAAI,EAAGA,EAAI+8B,GAAY/8B,IAAK,CACjC,MAAMspC,EAAc,SAAHruC,OAAY6hC,GAAQ98B,GAAE,UACvC,IAAIupC,EAAerM,GAAUkM,EAAQE,GACjCE,EAAatM,GAAUsB,EAAM8K,QACZh3C,IAAjBi3C,QAA6Cj3C,IAAfk3C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAvM,GAAKsM,KAAkBtM,GAAKuM,IAE5BnpC,EAAOipC,GAAetvC,KAAKD,IAAIkM,GAAI+2B,GAASuM,GAAevM,GAASwM,GAAat0B,GAAW,IACxF/Z,GAAQ5C,KAAKixC,IAAeruC,GAAQ5C,KAAKgxC,MACzClpC,EAAOipC,IAAgB,MAI3BjpC,EAAOipC,GAAeE,EAE9B,EAIIJ,EAAO5rC,QAAUghC,EAAKhhC,UACtB6C,EAAO7C,OAASyI,GAAImjC,EAAO5rC,QAAU,EAAGghC,EAAKhhC,QAAU,EAAG0X,GAElE,CQ05BoBu0B,CAAUf,EAAaD,EAAsBt+B,KAAKlL,aAAciW,EAAU4zB,EAAwBD,IAEtG1+B,KAAK0B,KAAK45B,2BACVt7B,KAAKm0B,iBACLn0B,KAAKw4B,kBAAoBztB,GAE7B/K,KAAK8+B,eAAe9+B,KAAKjL,QAAQklC,WAAa,IAAO,EACzD,CACAxa,cAAAA,CAAe1qB,GACXiL,KAAK24B,gBAAgB,kBACrB34B,KAAKiyB,kBAAoBjyB,KAAKiyB,iBAAiB1d,OAC3CvU,KAAKo1B,cAAgBp1B,KAAKo1B,aAAanD,kBACvCjyB,KAAKo1B,aAAanD,iBAAiB1d,OAEnCvU,KAAK09B,oBACLlpB,EAAAA,GAAAA,IAAYxU,KAAK09B,kBACjB19B,KAAK09B,sBAAmBv1C,GAO5B6X,KAAK09B,iBAAmBtgC,GAAAA,GAAMzR,OAAO,KACjCkkC,GAAsBC,wBAAyB,EAC/C9vB,KAAKiyB,iBIj+BrB,SAA4BvlC,EAAO6iB,EAAWxa,GAC1C,MAAMwqC,EAAgB5wC,EAAcjC,GAASA,EAAQszB,GAAYtzB,GAEjE,OADA6yC,EAAcl4C,MAAMs0B,GAAmB,GAAI4jB,EAAehwB,EAAWxa,IAC9DwqC,EAAc32C,SACzB,CJ69BwC42C,CAAmB,EAr8BnC,KAq8BqDp1C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtD2K,GAAO,IACVihB,SAAWjC,IACP/T,KAAK8+B,eAAe/qB,GACpBhf,EAAQihB,UAAYjhB,EAAQihB,SAASjC,IAEzCgC,WAAYA,KACRhhB,EAAQghB,YAAchhB,EAAQghB,aAC9B/V,KAAKy/B,wBAGTz/B,KAAKo1B,eACLp1B,KAAKo1B,aAAanD,iBAAmBjyB,KAAKiyB,kBAE9CjyB,KAAK09B,sBAAmBv1C,GAEhC,CACAs3C,iBAAAA,GACQz/B,KAAKo1B,eACLp1B,KAAKo1B,aAAanD,sBAAmB9pC,EACrC6X,KAAKo1B,aAAaR,qBAAkBzsC,GAExC,MAAMypC,EAAQ5xB,KAAK6xB,WACnBD,GAASA,EAAMuD,wBACfn1B,KAAKo1B,aACDp1B,KAAKiyB,iBACDjyB,KAAK80B,qBACD3sC,EACZ6X,KAAK24B,gBAAgB,oBACzB,CACAS,eAAAA,GACQp5B,KAAKiyB,mBACLjyB,KAAK8+B,gBAAkB9+B,KAAK8+B,eAr+BpB,KAs+BR9+B,KAAKiyB,iBAAiB1d,QAE1BvU,KAAKy/B,mBACT,CACAC,uBAAAA,GACI,MAAMrL,EAAOr0B,KAAKm9B,UAClB,IAAI,qBAAEK,EAAoB,OAAEtnC,EAAM,OAAE9M,EAAM,aAAE0L,GAAiBu/B,EAC7D,GAAKmJ,GAAyBtnC,GAAW9M,EAAzC,CAOA,GAAI4W,OAASq0B,GACTr0B,KAAK5W,QACLA,GACAu2C,GAA0B3/B,KAAKjL,QAAQ6qC,cAAe5/B,KAAK5W,OAAOmjC,UAAWnjC,EAAOmjC,WAAY,CAChGr2B,EAAS8J,KAAK9J,QtB7gCZ,CACdpH,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsB+gCzB,MAAMiwC,EAAUhY,GAAW7nB,KAAK5W,OAAOmjC,UAAUz9B,GACjDoH,EAAOpH,EAAEa,IAAM0kC,EAAKn+B,OAAOpH,EAAEa,IAC7BuG,EAAOpH,EAAEc,IAAMsG,EAAOpH,EAAEa,IAAMkwC,EAC9B,MAAMC,EAAUjY,GAAW7nB,KAAK5W,OAAOmjC,UAAUx9B,GACjDmH,EAAOnH,EAAEY,IAAM0kC,EAAKn+B,OAAOnH,EAAEY,IAC7BuG,EAAOnH,EAAEa,IAAMsG,EAAOnH,EAAEY,IAAMmwC,CAClC,CACAxM,GAAYkK,EAAsBtnC,GAMlC00B,GAAa4S,EAAsB1oC,GAOnCszB,GAAapoB,KAAKm+B,6BAA8Bn+B,KAAKy7B,gBAAiB+B,EAAsB1oC,EA/BlF,CAgCd,CACAukC,kBAAAA,CAAmB1uC,EAAUoV,GACpBC,KAAKy4B,YAAY3qC,IAAInD,IACtBqV,KAAKy4B,YAAY1qC,IAAIpD,EAAU,IAAIupC,IAEzBl0B,KAAKy4B,YAAY7qC,IAAIjD,GAC7BsyB,IAAIld,GACV,MAAM9D,EAAS8D,EAAKhL,QAAQgrC,uBAC5BhgC,EAAK2xB,QAAQ,CACTz0B,WAAYhB,EAASA,EAAOgB,gBAAa9U,EACzCssC,sBAAuBx4B,GAAUA,EAAO+jC,4BAClC/jC,EAAO+jC,4BAA4BjgC,QACnC5X,GAEd,CACA+pC,MAAAA,GACI,MAAMN,EAAQ5xB,KAAK6xB,WACnB,OAAOD,GAAQA,EAAMyC,OAASr0B,IAClC,CACAm9B,OAAAA,GACI,IAAI1lC,EACJ,MAAM,SAAE9M,GAAaqV,KAAKjL,QAC1B,OAAOpK,IAAuC,QAA1B8M,EAAKuI,KAAK6xB,kBAA+B,IAAPp6B,OAAgB,EAASA,EAAG48B,OAAgBr0B,IACtG,CACAigC,WAAAA,GACI,IAAIxoC,EACJ,MAAM,SAAE9M,GAAaqV,KAAKjL,QAC1B,OAAOpK,EAAsC,QAA1B8M,EAAKuI,KAAK6xB,kBAA+B,IAAPp6B,OAAgB,EAASA,EAAG28B,cAAWjsC,CAChG,CACA0pC,QAAAA,GACI,MAAM,SAAElnC,GAAaqV,KAAKjL,QAC1B,GAAIpK,EACA,OAAOqV,KAAK0B,KAAK+2B,YAAY7qC,IAAIjD,EACzC,CACA+mC,OAAAA,GAAiE,IAAzD,WAAE2F,EAAU,WAAEp6B,EAAU,sBAAEw3B,GAAwBlnC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAMqkC,EAAQ5xB,KAAK6xB,WACfD,GACAA,EAAMF,QAAQ1xB,KAAMy0B,GACpB4C,IACAr3B,KAAKswB,qBAAkBnoC,EACvB6X,KAAKq3B,YAAa,GAElBp6B,GACA+C,KAAKsxB,WAAW,CAAEr0B,cAC1B,CACA00B,QAAAA,GACI,MAAMC,EAAQ5xB,KAAK6xB,WACnB,QAAID,GACOA,EAAMD,SAAS3xB,KAK9B,CACAw6B,aAAAA,GACI,MAAM,cAAEzvC,GAAkBiV,KAAKjL,QAC/B,IAAKhK,EACD,OAEJ,IAAIm1C,GAAY,EAKhB,MAAM,aAAEprC,GAAiB/J,EAQzB,IAPI+J,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACb0sC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAItqC,EAAI,EAAGA,EAAImgC,GAAcxoC,OAAQqI,IAAK,CAC3C,MAAMvM,EAAM,SAAW0sC,GAAcngC,GAEjCf,EAAaxL,KACb62C,EAAY72C,GAAOwL,EAAaxL,GAChCyB,EAAcq1C,eAAe92C,EAAK,GAE1C,CAGAyB,EAAciB,SAEd,IAAK,MAAM1C,KAAO62C,EACdp1C,EAAcq1C,eAAe92C,EAAK62C,EAAY72C,IAIlDyB,EAAcopC,gBAClB,CACA35B,mBAAAA,CAAoBF,GAChB,IAAI7C,EAAIyV,EACR,IAAKlN,KAAKpT,UAAYoT,KAAKo3B,MACvB,OACJ,IAAKp3B,KAAKu4B,UACN,OAAOtC,GAEX,MAAMoK,EAAS,CACXnK,WAAY,IAEVlhC,EAAoBgL,KAAKy6B,uBAC/B,GAAIz6B,KAAKq3B,WAQL,OAPAr3B,KAAKq3B,YAAa,EAClBgJ,EAAOjsC,QAAU,GACjBisC,EAAOC,cACH1kC,GAAiC,OAAdtB,QAAoC,IAAdA,OAAuB,EAASA,EAAUgmC,gBAAkB,GACzGD,EAAO5wC,UAAYuF,EACbA,EAAkBgL,KAAKlL,aAAc,IACrC,OACCurC,EAEX,MAAMhM,EAAOr0B,KAAKm9B,UAClB,IAAKn9B,KAAKswB,kBAAoBtwB,KAAK5W,SAAWirC,EAAKn+B,OAAQ,CACvD,MAAMqqC,EAAc,CAAC,EAerB,OAdIvgC,KAAKjL,QAAQpK,WACb41C,EAAYnsC,aACsBjM,IAA9B6X,KAAKlL,aAAaV,QACZ4L,KAAKlL,aAAaV,QAClB,EACVmsC,EAAYD,cACR1kC,GAAiC,OAAdtB,QAAoC,IAAdA,OAAuB,EAASA,EAAUgmC,gBAAkB,IAEzGtgC,KAAKs4B,eAAiBljC,GAAa4K,KAAKlL,gBACxCyrC,EAAY9wC,UAAYuF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNgL,KAAKs4B,cAAe,GAEjBiI,CACX,CACA,MAAMC,EAAiBnM,EAAKS,iBAAmBT,EAAKv/B,aACpDkL,KAAK0/B,0BACLW,EAAO5wC,UAAY6lC,GAAyBt1B,KAAKm+B,6BAA8Bn+B,KAAKqwB,UAAWmQ,GAC3FxrC,IACAqrC,EAAO5wC,UAAYuF,EAAkBwrC,EAAgBH,EAAO5wC,YAEhE,MAAM,EAAEX,EAAC,EAAEC,GAAMiR,KAAKswB,gBACtB+P,EAAOlrC,gBAAkB,GAAHrE,OAAiB,IAAXhC,EAAE6I,OAAY,MAAA7G,OAAgB,IAAX/B,EAAE4I,OAAY,OACzD08B,EAAKS,gBAKLuL,EAAOjsC,QACHigC,IAASr0B,KACiG,QAAnGkN,EAAuC,QAAjCzV,EAAK+oC,EAAepsC,eAA4B,IAAPqD,EAAgBA,EAAKuI,KAAKlL,aAAaV,eAA4B,IAAP8Y,EAAgBA,EAAK,EACjIlN,KAAK40B,gBACD50B,KAAKlL,aAAaV,QAClBosC,EAAetB,YAO7BmB,EAAOjsC,QACHigC,IAASr0B,UACwB7X,IAA3Bq4C,EAAepsC,QACXosC,EAAepsC,QACf,QAC2BjM,IAA/Bq4C,EAAetB,YACXsB,EAAetB,YACf,EAKlB,IAAK,MAAM51C,KAAO+E,EAAiB,CAC/B,QAA4BlG,IAAxBq4C,EAAel3C,GACf,SACJ,MAAM,QAAE6mC,EAAO,QAAEsC,GAAYpkC,EAAgB/E,GAOvCm3C,EAAiC,SAArBJ,EAAO5wC,UACnB+wC,EAAel3C,GACf6mC,EAAQqQ,EAAel3C,GAAM+qC,GACnC,GAAI5B,EAAS,CACT,MAAMiO,EAAMjO,EAAQjlC,OACpB,IAAK,IAAIqI,EAAI,EAAGA,EAAI6qC,EAAK7qC,IACrBwqC,EAAO5N,EAAQ58B,IAAM4qC,CAE7B,MAEIJ,EAAO/2C,GAAOm3C,CAEtB,CAYA,OANIzgC,KAAKjL,QAAQpK,WACb01C,EAAOC,cACHjM,IAASr0B,KACHpE,GAAiC,OAAdtB,QAAoC,IAAdA,OAAuB,EAASA,EAAUgmC,gBAAkB,GACrG,QAEPD,CACX,CACAjF,aAAAA,GACIp7B,KAAK20B,WAAa30B,KAAK60B,cAAW1sC,CACtC,CAEAw4C,SAAAA,GACI3gC,KAAK0B,KAAKq2B,MAAMj7B,QAASiD,IAAW,IAAItI,EAAI,OAAwC,QAAhCA,EAAKsI,EAAKkyB,wBAAqC,IAAPx6B,OAAgB,EAASA,EAAG8c,SACxHvU,KAAK0B,KAAKq2B,MAAMj7B,QAAQ+9B,IACxB76B,KAAK0B,KAAK+2B,YAAY7a,OAC1B,EAER,CACA,SAASwR,GAAarvB,GAClBA,EAAKqvB,cACT,CACA,SAAS4L,GAAmBj7B,GACxB,IAAItI,EACJ,MAAMo9B,GAAuC,QAA1Bp9B,EAAKsI,EAAK40B,kBAA+B,IAAPl9B,OAAgB,EAASA,EAAGo9B,WAAa90B,EAAK80B,SACnG,GAAI90B,EAAKmyB,UACLnyB,EAAK3W,QACLyrC,GACA90B,EAAK+4B,aAAa,aAAc,CAChC,MAAQvM,UAAWnjC,EAAQkzC,YAAasE,GAAmB7gC,EAAK3W,QAC1D,cAAEw2C,GAAkB7/B,EAAKhL,QACzBqoC,EAAWvI,EAAS1+B,SAAW4J,EAAK3W,OAAO+M,OAG3B,SAAlBypC,EACAvW,GAAUvB,IACN,MAAM+Y,EAAezD,EACfvI,EAASyH,YAAYxU,GACrB+M,EAAStI,UAAUzE,GACnBt6B,EAASq6B,GAAWgZ,GAC1BA,EAAalxC,IAAMvG,EAAO0+B,GAAMn4B,IAChCkxC,EAAajxC,IAAMixC,EAAalxC,IAAMnC,IAGrCmyC,GAA0BC,EAAe/K,EAAStI,UAAWnjC,IAClEigC,GAAUvB,IACN,MAAM+Y,EAAezD,EACfvI,EAASyH,YAAYxU,GACrB+M,EAAStI,UAAUzE,GACnBt6B,EAASq6B,GAAWz+B,EAAO0+B,IACjC+Y,EAAajxC,IAAMixC,EAAalxC,IAAMnC,EAIlCuS,EAAK05B,iBAAmB15B,EAAKkyB,mBAC7BlyB,EAAKg3B,mBAAoB,EACzBh3B,EAAK05B,eAAe3R,GAAMl4B,IACtBmQ,EAAK05B,eAAe3R,GAAMn4B,IAAMnC,KAIhD,MAAMszC,EtB7yCM,CAChBhyC,EAPoB,CACpBq5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,GAIbn5B,EARoB,CACpBo5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,IsBgzCTE,GAAa0Y,EAAa13C,EAAQyrC,EAAStI,WAC3C,MAAMwU,EtB/yCM,CAChBjyC,EAPoB,CACpBq5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,GAIbn5B,EARoB,CACpBo5B,UAAW,EACXj4B,MAAO,EACPyH,OAAQ,EACRuwB,YAAa,IsBkzCLkV,EACAhV,GAAa2Y,EAAahhC,EAAK08B,eAAemE,GAAgB,GAAO/L,EAASyH,aAG9ElU,GAAa2Y,EAAa33C,EAAQyrC,EAAStI,WAE/C,MAAMoD,GAAoBoE,GAAY+M,GACtC,IAAIxH,GAA2B,EAC/B,IAAKv5B,EAAK40B,WAAY,CAClB,MAAMqI,EAAiBj9B,EAAKu9B,6BAK5B,GAAIN,IAAmBA,EAAerI,WAAY,CAC9C,MAAQE,SAAUmM,EAAgB53C,OAAQ63C,GAAiBjE,EAC3D,GAAIgE,GAAkBC,EAAc,CAChC,MAAMC,EtB5zCR,CACdpyC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsB8zCrB44B,GAAqB0Y,EAAkBrM,EAAStI,UAAWyU,EAAezU,WAC1E,MAAMiS,EtB9zCR,CACd1vC,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,IsBg0CrB44B,GAAqBgW,EAAgBp1C,EAAQ63C,EAAa1U,WACrDyH,GAAiBkN,EAAkB1C,KACpClF,GAA2B,GAE3B0D,EAAejoC,QAAQklC,aACvBl6B,EAAK05B,eAAiB+E,EACtBz+B,EAAKw9B,qBAAuB2D,EAC5BnhC,EAAKi9B,eAAiBA,EAE9B,CACJ,CACJ,CACAj9B,EAAK44B,gBAAgB,YAAa,CAC9BvvC,SACAyrC,WACA3jB,MAAO6vB,EACPD,cACAnR,mBACA2J,4BAER,MACK,GAAIv5B,EAAKmyB,SAAU,CACpB,MAAM,eAAE3M,GAAmBxlB,EAAKhL,QAChCwwB,GAAkBA,GACtB,CAMAxlB,EAAKhL,QAAQkI,gBAAa9U,CAC9B,CACA,SAAS6vC,GAAoBj4B,GAIzBo2B,GAAoBC,aACfr2B,EAAK/U,SAQL+U,EAAK09B,iBACN19B,EAAKg3B,kBAAoBh3B,EAAK/U,OAAO+rC,mBAOzCh3B,EAAKi3B,0BAA4Bj3B,EAAKi3B,wBAA0BlvC,QAAQiY,EAAKg3B,mBACzEh3B,EAAK/U,OAAO+rC,mBACZh3B,EAAK/U,OAAOgsC,0BAChBj3B,EAAKk3B,mBAAqBl3B,EAAKk3B,iBAAmBl3B,EAAK/U,OAAOisC,kBAClE,CACA,SAASkB,GAAgBp4B,GACrBA,EAAKg3B,kBACDh3B,EAAKi3B,wBACDj3B,EAAKk3B,kBACD,CAChB,CACA,SAASmE,GAAcr7B,GACnBA,EAAKq7B,eACT,CACA,SAASP,GAAkB96B,GACvBA,EAAK86B,mBACT,CACA,SAASC,GAAmB/6B,GACxBA,EAAKi1B,eAAgB,CACzB,CACA,SAAS+F,GAAoBh7B,GACzB,MAAM,cAAEhV,GAAkBgV,EAAKhL,QAC3BhK,GAAiBA,EAAcwV,WAAW4gC,uBAC1Cp2C,EAAc0yB,OAAO,uBAEzB1d,EAAK62B,gBACT,CACA,SAASwC,GAAgBr5B,GACrBA,EAAKq5B,kBACLr5B,EAAK+8B,YAAc/8B,EAAK05B,eAAiB15B,EAAK7J,YAAS/N,EACvD4X,EAAKg3B,mBAAoB,CAC7B,CACA,SAASkB,GAAmBl4B,GACxBA,EAAKk4B,oBACT,CACA,SAASC,GAAen4B,GACpBA,EAAKm4B,gBACT,CACA,SAASsC,GAAcz6B,GACnBA,EAAKy6B,eACT,CACA,SAASa,GAAoBzJ,GACzBA,EAAMyD,oBACV,CACA,SAAS0J,GAAahyB,EAAQmE,EAAOnrB,GACjCgnB,EAAOob,UAAYrsB,GAAIoV,EAAMiX,UAAW,EAAGpiC,GAC3CgnB,EAAO7c,MAAQ4L,GAAIoV,EAAMhhB,MAAO,EAAGnK,GACnCgnB,EAAOpV,OAASuZ,EAAMvZ,OACtBoV,EAAOmb,YAAchX,EAAMgX,WAC/B,CACA,SAAS8W,GAAQjyB,EAAQlC,EAAMC,EAAI/kB,GAC/BgnB,EAAOpd,IAAMmM,GAAI+O,EAAKlb,IAAKmb,EAAGnb,IAAK5J,GACnCgnB,EAAOnd,IAAMkM,GAAI+O,EAAKjb,IAAKkb,EAAGlb,IAAK7J,EACvC,CAKA,SAAS64C,GAAoB7+B,GACzB,OAAQA,EAAK+0B,sBAAwD3sC,IAArC4X,EAAK+0B,gBAAgBoK,WACzD,CACA,MAAMvF,GAA0B,CAC5BnqB,SAAU,IACV5I,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBw6B,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,UAAU/6C,cAAc0H,SAASmzC,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEvxC,KAAKQ,MACLmT,GAAAA,EACN,SAAS64B,GAAUvU,GAEfA,EAAKn4B,IAAM6xC,GAAW1Z,EAAKn4B,KAC3Bm4B,EAAKl4B,IAAM4xC,GAAW1Z,EAAKl4B,IAC/B,CAKA,SAAS+vC,GAA0BC,EAAe/K,EAAUzrC,GACxD,MAA0B,aAAlBw2C,GACe,oBAAlBA,IACI7X,GAAOkM,GAAYY,GAAWZ,GAAY7qC,GAAS,GAChE,CKp9CA,MAAMq4C,GAAyBlL,GAAqB,CAChDC,qBAAsBA,CAAC7vC,EAAK82B,IAAW9f,GAAYhX,EAAK,SAAU82B,GAClEiZ,cAAeA,KAAA,CACX5nC,EAAG8S,SAAS8/B,gBAAgBC,YAAc//B,SAASggC,KAAKD,WACxD5yC,EAAG6S,SAAS8/B,gBAAgBG,WAAajgC,SAASggC,KAAKC,YAE3DlL,kBAAmBA,KAAM,ICNvB3I,GAAqB,CACvBxiC,aAASrD,GAEP25C,GAAqBvL,GAAqB,CAC5CG,cAAgB9pC,IAAQ,CACpBkC,EAAGlC,EAAS+0C,WACZ5yC,EAAGnC,EAASi1C,YAEhBpL,cAAeA,KACX,IAAKzI,GAAmBxiC,QAAS,CAC7B,MAAMu2C,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAal1C,MAAMhB,QACnBk2C,EAAazQ,WAAW,CAAEsK,cAAc,IACxC5N,GAAmBxiC,QAAUu2C,CACjC,CACA,OAAO/T,GAAmBxiC,SAE9BorC,eAAgBA,CAAChqC,EAAUF,KACvBE,EAASqI,MAAMxF,eAAsBtH,IAAVuE,EAAsBA,EAAQ,QAE7DiqC,kBAAoB/pC,GAAa9E,QAAuD,UAA/C+D,OAAOm2C,iBAAiBp1C,GAAUq1C,YClBzEn5C,GAAO,CACTI,IAAK,CACD2W,QrBKR,cAAyBA,GACrBC,WAAAA,GACI0C,SAASjV,WACTyS,KAAKkiC,0BAA4B1+B,GAAAA,CACrC,CACA2+B,aAAAA,CAAcC,GACVpiC,KAAKqiC,QAAU,IAAIzc,GAAWwc,EAAkBpiC,KAAKsiC,oBAAqB,CACtEx8C,mBAAoBka,KAAKD,KAAKgtB,wBAC9BjH,cAAemF,GAAiBjrB,KAAKD,OAE7C,CACAuiC,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAa1iC,KAAKD,KAAKQ,WACrE,MAAO,CACH8mB,eAAgBuI,GAAa2S,GAC7B7b,QAASkJ,GAAa4S,GACtB7b,OAAQ8b,EACRzb,MAAOA,CAAC9oB,EAAOoC,YACJN,KAAKqiC,QACRK,GACAtlC,GAAAA,GAAMzR,OAAO,IAAM+2C,EAASxkC,EAAOoC,KAInD,CACAzT,KAAAA,GACImT,KAAKkiC,0BAA4BzjC,GAAgBuB,KAAKD,KAAKvU,QAAS,cAAgB0S,GAAU8B,KAAKmiC,cAAcjkC,GACrH,CACAvS,MAAAA,GACIqU,KAAKqiC,SAAWriC,KAAKqiC,QAAQ9a,eAAevnB,KAAKsiC,oBACrD,CACAx1C,OAAAA,GACIkT,KAAKkiC,4BACLliC,KAAKqiC,SAAWriC,KAAKqiC,QAAQtb,KACjC,IqBrCAj+B,KAAM,CACF+W,QCNR,cAA0BA,GACtBC,WAAAA,CAAYC,GACRyC,MAAMzC,GACNC,KAAK2iC,oBAAsBn/B,GAAAA,EAC3BxD,KAAKsnB,gBAAkB9jB,GAAAA,EACvBxD,KAAK8X,SAAW,IAAIuT,GAA0BtrB,EAClD,CACAlT,KAAAA,GAGI,MAAM,aAAE+1C,GAAiB5iC,KAAKD,KAAKQ,WAC/BqiC,IACA5iC,KAAK2iC,oBAAsBC,EAAaxd,UAAUplB,KAAK8X,WAE3D9X,KAAKsnB,gBAAkBtnB,KAAK8X,SAASuX,gBAAkB7rB,GAAAA,CAC3D,CACA1W,OAAAA,GACIkT,KAAK2iC,sBACL3iC,KAAKsnB,iBACT,GDZIub,eAAgBf,GAChBr3C,cAAaA,KECrB,MAAMq4C,GAAwB,uDAS9B,SAASC,GAAiBv3C,EAAS6O,GAAoB,IAAXw7B,EAAKtoC,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,GAChD0b,EAAAA,GAAAA,GAAU4sB,GAFG,EAEgB,yDAAF/kC,OAA2DtF,EAAO,yDAC7F,MAAO4D,EAAO4zC,GAVlB,SAA0Bx3C,GACtB,MAAMoe,EAAQk5B,GAAsBG,KAAKz3C,GACzC,IAAKoe,EACD,MAAO,CAAC,GACZ,MAAO,CAAExa,EAAO4zC,GAAYp5B,EAC5B,MAAO,CAACxa,EAAO4zC,EACnB,CAI8BE,CAAiB13C,GAE3C,IAAK4D,EACD,OAEJ,MAAM2N,EAAWlR,OAAOm2C,iBAAiB3nC,GAAS8oC,iBAAiB/zC,GACnE,GAAI2N,EAAU,CACV,MAAMqmC,EAAUrmC,EAASjH,OACzB,OAAOonB,GAAkBkmB,GAAWpzC,WAAWozC,GAAWA,CAC9D,CACK,OAAI9zC,EAAmB0zC,GAEjBD,GAAiBC,EAAU3oC,EAASw7B,EAAQ,GAG5CmN,CAEf,CAMA,SAASK,GAAoBt4C,EAAalB,EAAiBmT,GAAe,IAAzB9G,EAAMtP,OAAAyP,OAAA,IC/CvD,SAAmCkR,GACjC,GAAI,MAAQA,EAAG,MAAM,IAAI+7B,UAAU,sBAAwB/7B,EAC7D,CD6CuDg8B,CAAA15C,GAAAA,IACnD,MAAMwQ,EAAUtP,EAAcS,QAC9B,KAAM6O,aAAmBoe,SACrB,MAAO,CAAEviB,SAAQ8G,iBAGjBA,IACAA,GAAa5S,EAAAA,EAAAA,GAAA,GAAQ4S,IAGzBjS,EAAc+O,OAAOgD,QAASpQ,IAC1B,MAAMlB,EAAUkB,EAAMkB,MACtB,IAAK0B,EAAmB9D,GACpB,OACJ,MAAMuR,EAAWgmC,GAAiBv3C,EAAS6O,GACvC0C,GACArQ,EAAMqB,IAAIgP,KAIlB,IAAK,MAAMzT,KAAO4M,EAAQ,CACtB,MAAM1K,EAAU0K,EAAO5M,GACvB,IAAKgG,EAAmB9D,GACpB,SACJ,MAAMuR,EAAWgmC,GAAiBv3C,EAAS6O,GACtC0C,IAGL7G,EAAO5M,GAAOyT,EACTC,IACDA,EAAgB,CAAC,QAIM7U,IAAvB6U,EAAc1T,KACd0T,EAAc1T,GAAOkC,GAE7B,CACA,MAAO,CAAE0K,SAAQ8G,gBACrB,CE9EA,MAAMwmC,GAAiB,IAAIh1C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEi1C,GAAmBn6C,GAAQk6C,GAAe11C,IAAIxE,GAI9Co6C,GAAiBz8C,GAAMA,IAAM6I,GAAU7I,IAAMgK,GAC7C0yC,GAAmBA,CAACC,EAAQC,IAAQ7zC,WAAW4zC,EAAO/yC,MAAM,MAAMgzC,IAClEC,GAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAKp6C,KAAoB,IAAlB,UAAE4F,GAAW5F,EAChE,GAAkB,SAAd4F,IAAyBA,EACzB,OAAO,EACX,MAAMy0C,EAAWz0C,EAAUma,MAAM,sBACjC,GAAIs6B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASn0C,EAAUma,MAAM,oBAC/B,OAAIg6B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAI31C,IAAI,CAAC,IAAK,IAAK,MACnC41C,GAAgC91C,EAAmBmsB,OAAQnxB,IAAS66C,GAAcr2C,IAAIxE,IAe5F,MAAM+6C,GAAmB,CAErBnyC,MAAOA,CAAAlF,EAAAs3C,KAAA,IAAC,EAAEx1C,GAAG9B,GAAE,YAAE+F,EAAc,IAAG,aAAEF,EAAe,KAAKyxC,EAAA,OAAKx1C,EAAEc,IAAMd,EAAEa,IAAMK,WAAW+C,GAAe/C,WAAW6C,IAClHT,OAAQA,CAAAmyC,EAAAC,KAAA,IAAC,EAAEz1C,GAAGw1C,GAAE,WAAE3xC,EAAa,IAAG,cAAEE,EAAgB,KAAK0xC,EAAA,OAAKz1C,EAAEa,IAAMb,EAAEY,IAAMK,WAAW4C,GAAc5C,WAAW8C,IAClHP,IAAKA,CAAC0xC,EAAKQ,KAAA,IAAE,IAAElyC,GAAKkyC,EAAA,OAAKz0C,WAAWuC,IACpCG,KAAMA,CAACuxC,EAAKS,KAAA,IAAE,KAAEhyC,GAAMgyC,EAAA,OAAK10C,WAAW0C,IACtCD,OAAQA,CAAAkyC,EAAAC,KAAA,IAAC,EAAE71C,GAAG41C,GAAE,IAAEpyC,GAAKqyC,EAAA,OAAK50C,WAAWuC,IAAQxD,EAAEa,IAAMb,EAAEY,MACzD6C,MAAOA,CAAAqyC,EAAAC,KAAA,IAAC,EAAEh2C,GAAG+1C,GAAE,KAAEnyC,GAAMoyC,EAAA,OAAK90C,WAAW0C,IAAS5D,EAAEc,IAAMd,EAAEa,MAE1Db,EAAGg1C,GAAuB,EAAG,IAC7B/0C,EAAG+0C,GAAuB,EAAG,KAGjCO,GAAiBrwC,WAAaqwC,GAAiBv1C,EAC/Cu1C,GAAiBpwC,WAAaowC,GAAiBt1C,EAC/C,MA6BMg2C,GAAmC,SAACh6C,EAAemL,GAA4C,IAApCyB,EAAMpK,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGyP,EAAazP,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3F2I,GAAM9L,EAAAA,EAAAA,GAAA,GAAQ8L,GACd8G,GAAa5S,EAAAA,EAAAA,GAAA,GAAQ4S,GACrB,MAAMgoC,EAAuBp+C,OAAOsS,KAAKhD,GAAQukB,OAAOgpB,IAGxD,IAAIwB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAH,EAAqBloC,QAASxT,IAC1B,MAAMoD,EAAQ3B,EAAcy1B,SAASl3B,GACrC,IAAKyB,EAAcw1B,SAASj3B,GACxB,OACJ,IAAIuhB,EAAOlT,EAAOrO,GACd87C,EAAWjlB,GAAuBtV,GACtC,MAAMC,EAAK5U,EAAO5M,GAClB,IAAI+7C,EAKJ,GAAI3pC,GAAkBoP,GAAK,CACvB,MAAMw6B,EAAex6B,EAAGtd,OAClB+3C,EAAsB,OAAVz6B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGy6B,GACVH,EAAWjlB,GAAuBtV,GAClC,IAAK,IAAIhV,EAAI0vC,EAAW1vC,EAAIyvC,GAKV,OAAVx6B,EAAGjV,GAL+BA,IAOjCwvC,GAMDp8B,EAAAA,GAAAA,GAAUkX,GAAuBrV,EAAGjV,MAAQwvC,EAAQ,2CALpDA,EAASllB,GAAuBrV,EAAGjV,KACnCoT,EAAAA,GAAAA,GAAUo8B,IAAWD,GAChB1B,GAAc0B,IAAa1B,GAAc2B,GAAU,gEAMpE,MAEIA,EAASllB,GAAuBrV,GAEpC,GAAIs6B,IAAaC,EAGb,GAAI3B,GAAc0B,IAAa1B,GAAc2B,GAAS,CAClD,MAAM75C,EAAUkB,EAAMkB,MACC,kBAAZpC,GACPkB,EAAMqB,IAAIiC,WAAWxE,IAEP,kBAAPsf,EACP5U,EAAO5M,GAAO0G,WAAW8a,GAEpB5jB,MAAMC,QAAQ2jB,IAAOu6B,IAAWp0C,KACrCiF,EAAO5M,GAAOwhB,EAAGzD,IAAIrX,YAE7B,MACuB,OAAbo1C,QAAkC,IAAbA,OAAsB,EAASA,EAAS31C,aACvD,OAAX41C,QAA8B,IAAXA,OAAoB,EAASA,EAAO51C,aAC9C,IAATob,GAAqB,IAAPC,GAGF,IAATD,EACAne,EAAMqB,IAAIs3C,EAAO51C,UAAUob,IAG3B3U,EAAO5M,GAAO87C,EAAS31C,UAAUqb,IAMhCo6B,IACDD,EAvIpB,SAAyCl6C,GACrC,MAAMy6C,EAAoB,GAW1B,OAVApB,GAA8BtnC,QAASxT,IACnC,MAAMoD,EAAQ3B,EAAcy1B,SAASl3B,QACvBnB,IAAVuE,IACA84C,EAAkBn5B,KAAK,CAAC/iB,EAAKoD,EAAMkB,QACnClB,EAAMqB,IAAIzE,EAAIoF,WAAW,SAAW,EAAI,MAI5C82C,EAAkBh4C,QAClBzC,EAAciB,SACXw5C,CACX,CA2HwBC,CAAgC16C,GACpCm6C,GAAsC,GAE1CC,EAAqB94B,KAAK/iB,GAC1B0T,EAAc1T,QACanB,IAAvB6U,EAAc1T,GACR0T,EAAc1T,GACd4M,EAAO5M,GACjBoD,EAAM6yB,KAAKzU,MAInBq6B,EAAqB33C,OAAQ,CAC7B,MAAMk4C,EAAUP,EAAqBh3C,QAAQ,WAAa,EACpDtC,OAAO85C,YACP,KACAC,EA3HmBC,EAAC3vC,EAAQnL,EAAe+6C,KACrD,MAAMC,EAAah7C,EAAc8/B,qBAC3BxwB,EAAUtP,EAAcS,QACxBw6C,EAAuBhE,iBAAiB3nC,IACxC,QAAE2jC,GAAYgI,EACdruC,EAAS,CAAC,EAGA,SAAZqmC,GACAjzC,EAAcq1C,eAAe,UAAWlqC,EAAO8nC,SAAW,SAK9D8H,EAAYhpC,QAASxT,IACjBqO,EAAOrO,GAAO+6C,GAAiB/6C,GAAKy8C,EAAYC,KAGpDj7C,EAAciB,SACd,MAAMi6C,EAAal7C,EAAc8/B,qBAQjC,OAPAib,EAAYhpC,QAASxT,IAGjB,MAAMoD,EAAQ3B,EAAcy1B,SAASl3B,GACrCoD,GAASA,EAAM6yB,KAAK5nB,EAAOrO,IAC3B4M,EAAO5M,GAAO+6C,GAAiB/6C,GAAK28C,EAAYD,KAE7C9vC,GAgGqB2vC,CAAyB3vC,EAAQnL,EAAeo6C,GAaxE,OAXIF,EAAuBz3C,QACvBy3C,EAAuBnoC,QAAQopC,IAAkB,IAAhB58C,EAAKoD,GAAMw5C,EACxCn7C,EAAcy1B,SAASl3B,GAAKyE,IAAIrB,KAIxC3B,EAAciB,SAEVlB,EAAAA,GAAyB,OAAZ46C,GACb75C,OAAOs6C,SAAS,CAAE5zC,IAAKmzC,IAEpB,CAAExvC,OAAQ0vC,EAAiB5oC,gBACtC,CAEI,MAAO,CAAE9G,SAAQ8G,gBAEzB,EAQA,SAASopC,GAAer7C,EAAemL,EAAQyB,EAAQqF,GACnD,MA3MsB9G,IACftP,OAAOsS,KAAKhD,GAAQvO,KAAK87C,IA0MzB4C,CAAiBnwC,GAClB6uC,GAAiCh6C,EAAemL,EAAQyB,EAAQqF,GAChE,CAAE9G,SAAQ8G,gBACpB,CC5NA,MCNMspC,GAAuB,CAAE96C,QAAS,MAClC+6C,GAA2B,CAAE/6C,SAAS,GCF5C,MAAMg7C,GAAqB,IAAIvlC,Q,kCCoBzBwlC,GAAe7/C,OAAOsS,KAAK7P,GAC3Bq9C,GAAcD,GAAaj5C,OAC3Bm5C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBr/C,EAAaiG,OAKrC,MAAMq5C,GACF/mC,WAAAA,CAAWjW,GAAsF,IAArF,OAAEmB,EAAM,MAAEvD,EAAK,gBAAEyD,EAAe,oBAAEE,EAAmB,YAAEP,GAAchB,EAAEkL,EAAOxH,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAK1FyS,KAAKxU,QAAU,KAIfwU,KAAK/F,SAAW,IAAIzL,IAIpBwR,KAAKnY,eAAgB,EACrBmY,KAAKxY,uBAAwB,EAQ7BwY,KAAK4hB,mBAAqB,KAM1B5hB,KAAKlG,OAAS,IAAInM,IAIlBqS,KAAK7V,SAAW,CAAC,EAKjB6V,KAAK8mC,mBAAqB,IAAIn5C,IAM9BqS,KAAK+mC,iBAAmB,CAAC,EAIzB/mC,KAAKqe,OAAS,CAAC,EAMfre,KAAKgnC,uBAAyB,CAAC,EAC/BhnC,KAAKinC,aAAe,IAAMjnC,KAAKyd,OAAO,SAAUzd,KAAKlL,cACrDkL,KAAKhU,OAAS,KACLgU,KAAKxU,UAEVwU,KAAKknC,eACLlnC,KAAKmnC,eAAennC,KAAKxU,QAASwU,KAAKpF,YAAaoF,KAAKvY,MAAMwN,MAAO+K,KAAKzF,cAE/EyF,KAAKm0B,eAAiB,IAAM/2B,GAAAA,GAAMpR,OAAOgU,KAAKhU,QAAQ,GAAO,GAC7D,MAAM,aAAE8I,EAAY,YAAE8F,GAAgB/P,EACtCmV,KAAKlL,aAAeA,EACpBkL,KAAKonC,YAAUh9C,EAAAA,EAAAA,GAAA,GAAQ0K,GACvBkL,KAAKqnC,cAAgB5/C,EAAMQ,SAAOmC,EAAAA,EAAAA,GAAA,GAAQ0K,GAAiB,CAAC,EAC5DkL,KAAKpF,YAAcA,EACnBoF,KAAKhV,OAASA,EACdgV,KAAKvY,MAAQA,EACbuY,KAAK9U,gBAAkBA,EACvB8U,KAAK61B,MAAQ7qC,EAASA,EAAO6qC,MAAQ,EAAI,EACzC71B,KAAK5U,oBAAsBA,EAC3B4U,KAAKjL,QAAUA,EACfiL,KAAKxY,sBAAwBA,EAAsBC,GACnDuY,KAAKnY,cAAgBA,EAAcJ,GAC/BuY,KAAKnY,gBACLmY,KAAKkiB,gBAAkB,IAAI1zB,KAE/BwR,KAAKkkB,uBAAyBp8B,QAAQkD,GAAUA,EAAOQ,SAWvD,MAAA87C,EAA+CtnC,KAAKjF,4BAA4BtT,EAAO,CAAC,IAAlF,WAAE45B,GAAoCimB,EAArBC,GAAmB/uC,EAAAA,GAAAA,GAAA8uC,EAAA7uC,IAC1C,IAAK,MAAMnP,KAAOi+C,EAAqB,CACnC,MAAM76C,EAAQ66C,EAAoBj+C,QACRnB,IAAtB2M,EAAaxL,IAAsBqF,EAAcjC,KACjDA,EAAMqB,IAAI+G,EAAaxL,IAAM,GACzB0zB,GAAwBqE,IACxBA,EAAWpE,IAAI3zB,GAG3B,CACJ,CAQAyR,2BAAAA,CAA4BysC,EAAQC,GAChC,MAAO,CAAC,CACZ,CACA56C,KAAAA,CAAMD,GACFoT,KAAKxU,QAAUoB,EACf45C,GAAmBz4C,IAAInB,EAAUoT,MAC7BA,KAAKzF,aAAeyF,KAAKzF,WAAW3N,UACpCoT,KAAKzF,WAAW1N,MAAMD,GAEtBoT,KAAKhV,QAAUgV,KAAKnY,gBAAkBmY,KAAKxY,wBAC3CwY,KAAK0nC,sBAAwB1nC,KAAKhV,OAAO28C,gBAAgB3nC,OAE7DA,KAAKlG,OAAOgD,QAAQ,CAACpQ,EAAOpD,IAAQ0W,KAAK4nC,kBAAkBt+C,EAAKoD,IAC3D65C,GAAyB/6C,SC1JtC,WAEI,GADA+6C,GAAyB/6C,SAAU,EAC9BV,EAAAA,EAEL,GAAIe,OAAOg8C,WAAY,CACnB,MAAMC,EAAmBj8C,OAAOg8C,WAAW,4BACrCE,EAA8BA,IAAOzB,GAAqB96C,QAAUs8C,EAAiBziC,QAC3FyiC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIzB,GAAqB96C,SAAU,CAEvC,CD8IYy8C,GAEJjoC,KAAK4hB,mBAC4B,UAA7B5hB,KAAK5U,sBAE8B,WAA7B4U,KAAK5U,qBAEDk7C,GAAqB96C,SAI/BwU,KAAKhV,QACLgV,KAAKhV,OAAOiP,SAASgjB,IAAIjd,MAC7BA,KAAKrU,OAAOqU,KAAKvY,MAAOuY,KAAK9U,gBACjC,CACA4B,OAAAA,GACI05C,GAAmBrkC,OAAOnC,KAAKxU,SAC/BwU,KAAKzF,YAAcyF,KAAKzF,WAAWzN,WACnC0nB,EAAAA,GAAAA,IAAYxU,KAAKinC,eACjBzyB,EAAAA,GAAAA,IAAYxU,KAAKhU,QACjBgU,KAAK8mC,mBAAmBhqC,QAAS+kB,GAAWA,KAC5C7hB,KAAK0nC,uBAAyB1nC,KAAK0nC,wBACnC1nC,KAAKhV,QAAUgV,KAAKhV,OAAOiP,SAASkI,OAAOnC,MAC3C,IAAK,MAAM1W,KAAO0W,KAAKqe,OACnBre,KAAKqe,OAAO/0B,GAAKs0B,QAErB,IAAK,MAAMt0B,KAAO0W,KAAK7V,SACnB6V,KAAK7V,SAASb,GAAKwD,UAEvBkT,KAAKxU,QAAU,IACnB,CACAo8C,iBAAAA,CAAkBt+C,EAAKoD,GACnB,MAAMw7C,EAAmB35C,EAAeT,IAAIxE,GACtC6+C,EAAiBz7C,EAAMsyB,GAAG,SAAWopB,IACvCpoC,KAAKlL,aAAaxL,GAAO8+C,EACzBpoC,KAAKvY,MAAMuuB,UACP5Y,GAAAA,GAAMzR,OAAOqU,KAAKinC,cAAc,GAAO,GACvCiB,GAAoBloC,KAAKzF,aACzByF,KAAKzF,WAAW08B,kBAAmB,KAGrCoR,EAAwB37C,EAAMsyB,GAAG,gBAAiBhf,KAAKm0B,gBAC7Dn0B,KAAK8mC,mBAAmB/4C,IAAIzE,EAAK,KAC7B6+C,IACAE,KAER,CACA1lB,gBAAAA,CAAiB2lB,GAIb,OAAKtoC,KAAKxU,SACLwU,KAAKuoC,0BACNvoC,KAAKxQ,OAAS84C,EAAM94C,KAGjBwQ,KAAKuoC,yBAAyBvoC,KAAKxU,QAAS88C,EAAM98C,SAF9C,CAGf,CACAnB,YAAAA,CAAY2C,EAAiCT,EAAUzC,EAAmBwC,GAA0B,IAC5Fk8C,EACA/9C,GAFK,SAAEwP,GAA4BjN,EAAfy7C,GAAajwC,EAAAA,GAAAA,GAAAxL,EAAA07C,IAerC,IAAK,IAAI7yC,EAAI,EAAGA,EAAI6wC,GAAa7wC,IAAK,CAClC,MAAMjO,EAAO6+C,GAAa5wC,IACpB,UAAEtM,EAAWsW,QAAS8oC,EAAkB,eAAE9F,EAAgBp4C,cAAem+C,GAA4Bv/C,EAAmBzB,GAC1Hi7C,IACA2F,EAA4B3F,GAC5Bt5C,EAAUk/C,MACLzoC,KAAK7V,SAASvC,IAAS+gD,IACxB3oC,KAAK7V,SAASvC,GAAQ,IAAI+gD,EAAmB3oC,OAE7C4oC,IACAn+C,EAAgBm+C,GAG5B,CACA,IAAmB,SAAd5oC,KAAKxQ,MAAiC,QAAdwQ,KAAKxQ,QAC7BwQ,KAAKzF,YACNiuC,EAA2B,CAC3BxoC,KAAKzF,WAAa,IAAIiuC,EAA0BxoC,KAAKlL,aAAckL,KAAKhV,QAAUgV,KAAKhV,OAAOuP,YAC9F,MAAM,SAAE5P,EAAQ,OAAEvB,EAAM,KAAEN,EAAI,gBAAEukC,EAAe,aAAEuO,EAAY,WAAE3B,GAAgBwO,EAC/EzoC,KAAKzF,WAAW+2B,WAAW,CACvB3mC,WACAvB,SACAmyC,oBAAqBzzC,QAAQgB,IACxBukC,GAAmB3mC,EAAY2mC,GACpCtiC,cAAeiV,KACfm0B,eAAgBA,IAAMn0B,KAAKm0B,iBAQ3ByL,cAAiC,kBAAXx2C,EAAsBA,EAAS,OACrD22C,uBAAwBzzC,EACxBsvC,eACA3B,cAER,CACA,OAAOxvC,CACX,CACA2B,cAAAA,GACI,IAAK,MAAM9C,KAAO0W,KAAK7V,SAAU,CAC7B,MAAM0+C,EAAU7oC,KAAK7V,SAASb,GAC1Bu/C,EAAQ5oC,UACR4oC,EAAQl9C,UAGRk9C,EAAQh8C,QACRg8C,EAAQ5oC,WAAY,EAE5B,CACJ,CACAinC,YAAAA,GACIlnC,KAAK8oC,MAAM9oC,KAAKpF,YAAaoF,KAAKlL,aAAckL,KAAKjL,QAASiL,KAAKvY,MACvE,CAMAojC,kBAAAA,GACI,OAAO7qB,KAAKxU,QACNwU,KAAK+oC,2BAA2B/oC,KAAKxU,QAASwU,KAAKvY,OrC3R/C,CACdqH,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,GqC8RrC,CACAo5C,cAAAA,CAAe1/C,GACX,OAAO0W,KAAKlL,aAAaxL,EAC7B,CACA82C,cAAAA,CAAe92C,EAAKoD,GAChBsT,KAAKlL,aAAaxL,GAAOoD,CAC7B,CAQAi0B,oBAAAA,CAAqBzqB,GAA0B,IAAlB+yC,IAAS17C,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,KAAAA,UAAA,GAClC,OAAOyS,KAAKkpC,iCAAiChzC,EAAQ8J,KAAKvY,MAAOwhD,EACrE,CAKAt9C,MAAAA,CAAOlE,EAAOyD,IACNzD,EAAMuN,mBAAqBgL,KAAKvY,MAAMuN,oBACtCgL,KAAKm0B,iBAETn0B,KAAKhF,UAAYgF,KAAKvY,MACtBuY,KAAKvY,MAAQA,EACbuY,KAAKylB,oBAAsBzlB,KAAK9U,gBAChC8U,KAAK9U,gBAAkBA,EAIvB,IAAK,IAAI2K,EAAI,EAAGA,EAAI8wC,GAAkBn5C,OAAQqI,IAAK,CAC/C,MAAMvM,EAAMq9C,GAAkB9wC,GAC1BmK,KAAKgnC,uBAAuB19C,KAC5B0W,KAAKgnC,uBAAuB19C,YACrB0W,KAAKgnC,uBAAuB19C,IAEvC,MAAM6/C,EAAW1hD,EAAM,KAAO6B,GAC1B6/C,IACAnpC,KAAKgnC,uBAAuB19C,GAAO0W,KAAKgf,GAAG11B,EAAK6/C,GAExD,CACAnpC,KAAK+mC,iBE9Ub,SAAqC1sC,EAASmL,EAAMC,GAChD,MAAM,WAAE4b,GAAe7b,EACvB,IAAK,MAAMlc,KAAOkc,EAAM,CACpB,MAAM4jC,EAAY5jC,EAAKlc,GACjB+/C,EAAY5jC,EAAKnc,GACvB,GAAIqF,EAAcy6C,GAKd/uC,EAAQomB,SAASn3B,EAAK8/C,GAClBpsB,GAAwBqE,IACxBA,EAAWpE,IAAI3zB,QAUlB,GAAIqF,EAAc06C,GAKnBhvC,EAAQomB,SAASn3B,EAAK02B,GAAYopB,EAAW,CAAE9vB,MAAOjf,KAClD2iB,GAAwBqE,IACxBA,EAAWQ,OAAOv4B,QAGrB,GAAI+/C,IAAcD,EAMnB,GAAI/uC,EAAQkmB,SAASj3B,GAAM,CACvB,MAAMggD,EAAgBjvC,EAAQmmB,SAASl3B,IAEtCggD,EAAczqB,aAAeyqB,EAAcv7C,IAAIq7C,EACpD,KACK,CACD,MAAMhB,EAAc/tC,EAAQ2uC,eAAe1/C,GAC3C+Q,EAAQomB,SAASn3B,EAAK02B,QAA4B73B,IAAhBigD,EAA4BA,EAAcgB,EAAW,CAAE9vB,MAAOjf,IACpG,CAER,CAEA,IAAK,MAAM/Q,KAAOmc,OACItd,IAAdqd,EAAKlc,IACL+Q,EAAQkvC,YAAYjgD,GAE5B,OAAOkc,CACX,CFuRgCgkC,CAA4BxpC,KAAMA,KAAKjF,4BAA4BtT,EAAOuY,KAAKhF,WAAYgF,KAAK+mC,kBACpH/mC,KAAKypC,wBACLzpC,KAAKypC,wBAEb,CACAlpC,QAAAA,GACI,OAAOP,KAAKvY,KAChB,CAIAiiD,UAAAA,CAAW9hD,GACP,OAAOoY,KAAKvY,MAAMM,SAAWiY,KAAKvY,MAAMM,SAASH,QAAQO,CAC7D,CAIA8xB,oBAAAA,GACI,OAAOja,KAAKvY,MAAMwV,UACtB,CACA8vB,qBAAAA,GACI,OAAO/sB,KAAKvY,MAAM3B,kBACtB,CACA6jD,qBAAAA,GACI,OAAO3pC,KAAKnY,cACNmY,KACAA,KAAKhV,OACDgV,KAAKhV,OAAO2+C,6BACZxhD,CACd,CACAu7B,iBAAAA,GACI,GAD2Bn2B,UAAAC,OAAA,QAAArF,IAAAoF,UAAA,IAAAA,UAAA,GAEvB,OAAOyS,KAAKhV,OAASgV,KAAKhV,OAAO04B,yBAAsBv7B,EAE3D,IAAK6X,KAAKxY,sBAAuB,CAC7B,MAAMU,EAAU8X,KAAKhV,QACfgV,KAAKhV,OAAO04B,qBACZ,CAAC,EAIP,YAH2Bv7B,IAAvB6X,KAAKvY,MAAMQ,UACXC,EAAQD,QAAU+X,KAAKvY,MAAMQ,SAE1BC,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAI2N,EAAI,EAAGA,EAAI+wC,GAAiB/wC,IAAK,CACtC,MAAMjO,EAAOL,EAAasO,GACpBpN,EAAOuX,KAAKvY,MAAMG,IACpBZ,EAAeyB,KAAkB,IAATA,KACxBP,EAAQN,GAAQa,EAExB,CACA,OAAOP,CACX,CAIAy/C,eAAAA,CAAgBhnC,GACZ,MAAMipC,EAAqB5pC,KAAK2pC,wBAChC,GAAIC,EAGA,OAFAA,EAAmB1nB,iBACf0nB,EAAmB1nB,gBAAgBjF,IAAItc,GACpC,IAAMipC,EAAmB1nB,gBAAgB/f,OAAOxB,EAE/D,CAIA8f,QAAAA,CAASn3B,EAAKoD,GAENA,IAAUsT,KAAKlG,OAAOlM,IAAItE,KAC1B0W,KAAKupC,YAAYjgD,GACjB0W,KAAK4nC,kBAAkBt+C,EAAKoD,IAEhCsT,KAAKlG,OAAO/L,IAAIzE,EAAKoD,GACrBsT,KAAKlL,aAAaxL,GAAOoD,EAAMkB,KACnC,CAIA27C,WAAAA,CAAYjgD,GACR0W,KAAKlG,OAAOqI,OAAO7Y,GACnB,MAAM21B,EAAcjf,KAAK8mC,mBAAmBl5C,IAAItE,GAC5C21B,IACAA,IACAjf,KAAK8mC,mBAAmB3kC,OAAO7Y,WAE5B0W,KAAKlL,aAAaxL,GACzB0W,KAAK6pC,2BAA2BvgD,EAAK0W,KAAKpF,YAC9C,CAIA2lB,QAAAA,CAASj3B,GACL,OAAO0W,KAAKlG,OAAOhM,IAAIxE,EAC3B,CACAk3B,QAAAA,CAASl3B,EAAKixB,GACV,GAAIva,KAAKvY,MAAMqS,QAAUkG,KAAKvY,MAAMqS,OAAOxQ,GACvC,OAAO0W,KAAKvY,MAAMqS,OAAOxQ,GAE7B,IAAIoD,EAAQsT,KAAKlG,OAAOlM,IAAItE,GAK5B,YAJcnB,IAAVuE,QAAwCvE,IAAjBoyB,IACvB7tB,EAAQszB,GAAYzF,EAAc,CAAEjB,MAAOtZ,OAC3CA,KAAKygB,SAASn3B,EAAKoD,IAEhBA,CACX,CAMAo9C,SAAAA,CAAUxgD,GACN,IAAImO,EACJ,YAAkCtP,IAA3B6X,KAAKlL,aAAaxL,IAAuB0W,KAAKxU,QAES,QAAvDiM,EAAKuI,KAAK+pC,uBAAuB/pC,KAAKvY,MAAO6B,UAAyB,IAAPmO,EAAgBA,EAAKuI,KAAKgqC,sBAAsBhqC,KAAKxU,QAASlC,EAAK0W,KAAKjL,SADxIiL,KAAKlL,aAAaxL,EAE5B,CAKA2gD,aAAAA,CAAc3gD,EAAKoD,GACfsT,KAAKonC,WAAW99C,GAAOoD,CAC3B,CAKAq4B,aAAAA,CAAcz7B,GACV,IAAImO,EACJ,MAAM,QAAExP,GAAY+X,KAAKvY,MACnByiD,EAAsC,kBAAZjiD,GAA2C,kBAAZA,EACD,QAAvDwP,EAAK6D,GAAwB0E,KAAKvY,MAAOQ,UAA6B,IAAPwP,OAAgB,EAASA,EAAGnO,QAC5FnB,EAIN,GAAIF,QAAgCE,IAArB+hD,EACX,OAAOA,EAMX,MAAMh0C,EAAS8J,KAAK+pC,uBAAuB/pC,KAAKvY,MAAO6B,GACvD,YAAenB,IAAX+N,GAAyBvH,EAAcuH,QAMR/N,IAA5B6X,KAAKqnC,cAAc/9C,SACDnB,IAArB+hD,OACE/hD,EACA6X,KAAKonC,WAAW99C,GARX4M,CASf,CACA8oB,EAAAA,CAAGphB,EAAWyD,GAIV,OAHKrB,KAAKqe,OAAOzgB,KACboC,KAAKqe,OAAOzgB,GAAa,IAAI2f,IAE1Bvd,KAAKqe,OAAOzgB,GAAWqf,IAAI5b,EACtC,CACAoc,MAAAA,CAAO7f,GACH,GAAIoC,KAAKqe,OAAOzgB,GAAY,SAAAmB,EAAAxR,UAAAC,OADXqrC,EAAI,IAAA3xC,MAAA6X,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ45B,EAAI55B,EAAA,GAAA1R,UAAA0R,GAEjBe,KAAKqe,OAAOzgB,GAAW6f,UAAUob,EACrC,CACJ,E,wCGrfJ,MAAMsR,WAAyBtD,GAC3B0B,wBAAAA,CAAyB3pC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEwrC,wBAAwBvrC,GAAS,GAAK,CACnD,CACAkrC,sBAAAA,CAAuBtiD,EAAO6B,GAC1B,OAAO7B,EAAMwN,MAAQxN,EAAMwN,MAAM3L,QAAOnB,CAC5C,CACA0hD,0BAAAA,CAA2BvgD,EAAGO,GAAmB,IAAjB,KAAEqL,EAAI,MAAED,GAAOpL,SACpCqL,EAAK5L,UACL2L,EAAM3L,EACjB,CACA4/C,gCAAAA,CAAgCl8C,EAAAs3C,EAAgErkC,GAAW,IAA1E,WAAEhD,EAAU,cAAED,GAA0BhQ,EAARkJ,GAAMsC,EAAAA,GAAAA,GAAAxL,EAAAyL,KAAI,gBAAElC,GAAiB+tC,EACtF3sC,EpDqFZ,SAAmBzB,EAAQ+G,EAAYlS,GACnC,MAAM4M,EAAS,CAAC,EAChB,IAAK,MAAMrO,KAAO4M,EAAQ,CACtB,MAAMm0C,EAAmBzpB,GAAwBt3B,EAAK2T,GACtD,QAAyB9U,IAArBkiD,EACA1yC,EAAOrO,GAAO+gD,MAEb,CACD,MAAM39C,EAAQ3B,EAAcy1B,SAASl3B,GACjCoD,IACAiL,EAAOrO,GAAOoD,EAAMkB,MAE5B,CACJ,CACA,OAAO+J,CACX,CoDpGqB2yC,CAAUp0C,EAAQ+G,GAAc,CAAC,EAAG+C,MAYjD,GARIzJ,IACIyG,IACAA,EAAgBzG,EAAgByG,IAChC9G,IACAA,EAASK,EAAgBL,IACzByB,IACAA,EAASpB,EAAgBoB,KAE7BsI,EAAW,EpDoBvB,SAAiClV,EAAemL,EAAQyB,GACpD,IAAIF,EAAIyV,EACR,MAAMq9B,EAAe3jD,OAAOsS,KAAKhD,GAAQukB,OAAQnxB,IAASyB,EAAcw1B,SAASj3B,IAC3EkhD,EAAeD,EAAa/8C,OAClC,GAAKg9C,EAEL,IAAK,IAAI30C,EAAI,EAAGA,EAAI20C,EAAc30C,IAAK,CACnC,MAAMvM,EAAMihD,EAAa10C,GACnB40C,EAAcv0C,EAAO5M,GAC3B,IAAIoD,EAAQ,KAKRxF,MAAMC,QAAQsjD,KACd/9C,EAAQ+9C,EAAY,IAOV,OAAV/9C,IACAA,EAAoG,QAA3FwgB,EAA4B,QAAtBzV,EAAKE,EAAOrO,UAAyB,IAAPmO,EAAgBA,EAAK1M,EAAc++C,UAAUxgD,UAAyB,IAAP4jB,EAAgBA,EAAKhX,EAAO5M,SAM9HnB,IAAVuE,GAAiC,OAAVA,IAEN,kBAAVA,IACNwwB,GAAkBxwB,IAAU6uB,GAAkB7uB,IAE/CA,EAAQsD,WAAWtD,IAEb2zB,GAAc3zB,IAAUugB,GAAQ7e,KAAKq8C,KAC3C/9C,EAAQ0gB,GAAkB9jB,EAAKmhD,IAEnC1/C,EAAc01B,SAASn3B,EAAK02B,GAAYtzB,EAAO,CAAE4sB,MAAOvuB,UACpC5C,IAAhBwP,EAAOrO,KACPqO,EAAOrO,GAAOoD,GAEJ,OAAVA,GACA3B,EAAck/C,cAAc3gD,EAAKoD,GACzC,CACJ,CoDjEYg+C,CAAwB1qC,KAAM9J,EAAQyB,GACtC,MAAM0V,EN5BMs9B,EAAC5/C,EAAemL,EAAQyB,EAAQqF,KACpD,MAAMD,EAAWsmC,GAAoBt4C,EAAemL,EAAQ8G,GAG5D,OAAOopC,GAAer7C,EAFtBmL,EAAS6G,EAAS7G,OAE2ByB,EAD7CqF,EAAgBD,EAASC,gBMyBF2tC,CAAgB3qC,KAAM9J,EAAQyB,EAAQqF,GACrDA,EAAgBqQ,EAAOrQ,cACvB9G,EAASmX,EAAOnX,MACpB,CACA,OAAA9L,EAAAA,EAAAA,GAAA,CACI6S,aACAD,iBACG9G,EAEX,EC/BJ,MAAM00C,WAA0BT,GAC5BrqC,WAAAA,GACI0C,SAASjV,WACTyS,KAAKxQ,KAAO,MAChB,CACAw6C,qBAAAA,CAAsBp9C,EAAUtD,GAC5B,GAAIiF,EAAeT,IAAIxE,GAAM,CACzB,MAAMuhD,EAAcxvB,GAAoB/xB,GACxC,OAAOuhD,GAAcA,EAAY16C,SAAe,CACpD,CACK,CACD,MAAM26C,GAdQzwC,EAcyBzN,EAbxCf,OAAOm2C,iBAAiB3nC,IAcjB3N,GAAS2C,EAAkB/F,GAC3BwhD,EAAc3H,iBAAiB75C,GAC/BwhD,EAAcxhD,KAAS,EAC7B,MAAwB,kBAAVoD,EAAqBA,EAAMoJ,OAASpJ,CACtD,CAnBR,IAA0B2N,CAoBtB,CACA0uC,0BAAAA,CAA2Bn8C,EAAQ/C,GAA0B,IAAxB,mBAAE/D,GAAoB+D,EACvD,OAAOghC,GAAmBj+B,EAAU9G,EACxC,CACAgjD,KAAAA,CAAMluC,EAAa9F,EAAcC,EAAStN,GACtCmN,GAAgBgG,EAAa9F,EAAcC,EAAStN,EAAMuN,kBAC9D,CACA+F,2BAAAA,CAA4BtT,EAAOuT,GAC/B,OAAOD,GAA4BtT,EAAOuT,EAC9C,CACAyuC,sBAAAA,GACQzpC,KAAK+qC,oBACL/qC,KAAK+qC,2BACE/qC,KAAK+qC,mBAEhB,MAAM,SAAE9wC,GAAa+F,KAAKvY,MACtBkH,EAAcsL,KACd+F,KAAK+qC,kBAAoB9wC,EAAS+kB,GAAG,SAAWjL,IACxC/T,KAAKxU,UACLwU,KAAKxU,QAAQw/C,YAAc,GAAHl6C,OAAMijB,MAG9C,CACAozB,cAAAA,CAAev6C,EAAUgO,EAAaN,EAAWC,GAC7CH,GAAWxN,EAAUgO,EAAaN,EAAWC,EACjD,EC5CJ,MAAM0wC,WAAyBd,GAC3BrqC,WAAAA,GACI0C,SAASjV,WACTyS,KAAKxQ,KAAO,MACZwQ,KAAK/H,UAAW,CACpB,CACA8xC,sBAAAA,CAAuBtiD,EAAO6B,GAC1B,OAAO7B,EAAM6B,EACjB,CACA0gD,qBAAAA,CAAsBp9C,EAAUtD,GAC5B,GAAIiF,EAAeT,IAAIxE,GAAM,CACzB,MAAMuhD,EAAcxvB,GAAoB/xB,GACxC,OAAOuhD,GAAcA,EAAY16C,SAAe,CACpD,CAEA,OADA7G,EAAOoR,GAAoB5M,IAAIxE,GAA0BA,EAAnBjD,EAAYiD,GAC3CsD,EAASs+C,aAAa5hD,EACjC,CACAy/C,0BAAAA,GACI,M1ClBU,CACdj6C,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,G0CoBrC,CACAmL,2BAAAA,CAA4BtT,EAAOuT,GAC/B,OAAOD,GAA4BtT,EAAOuT,EAC9C,CACA8tC,KAAAA,CAAMluC,EAAa9F,EAAcC,EAAStN,GACtCuQ,GAAc4C,EAAa9F,EAAcC,EAASiL,KAAK/H,SAAUxQ,EAAMuN,kBAC3E,CACAmyC,cAAAA,CAAev6C,EAAUgO,EAAaN,EAAWC,GAC7CI,GAAU/N,EAAUgO,EAAaN,EAAWC,EAChD,CACA1N,KAAAA,CAAMD,GACFoT,KAAK/H,SAAWA,GAASrL,EAAS6Q,SAClC+E,MAAM3V,MAAMD,EAChB,ECvCJ,MAAMu+C,GAAyBA,CAACjhD,EAAW6K,IAChC9G,EAAe/D,GAChB,IAAI+gD,GAAiBl2C,EAAS,CAAEW,4BAA4B,IAC5D,IAAIk1C,GAAkB71C,EAAS,CAAEW,4BAA4B,ICJjEtM,GAAS,CACXA,OAAQ,CACJy5C,eAAgBf,GAChBr3C,cAAaA,KCGfX,IAAiBM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBk3B,IACA/e,IACAzZ,IACAM,IAQDgiD,GAAuBh+C,EAAkB,CAAClD,EAAW+R,IChB3D,SAA+B/R,EAASL,EAAkCC,EAAmBC,GAAqB,IAAxE,mBAAE4P,GAAqB,GAAO9P,EACpE,MAAMwhD,EAAap9C,EAAe/D,GAC5BiT,GACAO,GACN,OAAAtT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOihD,GAAU,IACbvhD,oBACAE,UAAW0P,GAAgBC,GAC3B5P,sBACAG,aAER,CDKsEohD,CAAsBphD,EAAW+R,EAAQnS,GAAmBqhD,I","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","isProcessing","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","collectMotionValues","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","_visualElement$makeTa","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref10","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}